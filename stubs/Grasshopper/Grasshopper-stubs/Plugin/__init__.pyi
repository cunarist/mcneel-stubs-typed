from typing import overload, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum



from ..Kernel import GH_Document
from ..Kernel import IGH_ActiveObject
class Commands:
    @overload
    def Equals(self, obj: Object) -> bool: ...
    @overload
    @property
    def BakeDocument() -> GH_Document: ...
    @overload
    @property
    def BakeObject() -> IGH_ActiveObject: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    @staticmethod
    def Run_Grasshopper() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperBake() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperDeveloperSettings() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperExportHelp() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperFolders() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperGetSDKDocumentation() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperOpen() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperOpen(path: str) -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperReloadAssemblies() -> List: ...
    @overload
    @staticmethod
    def Run_GrasshopperScripted() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperUnloadPlugin() -> bool: ...
    @overload
    @BakeDocument.setter
    def BakeDocument() -> None: ...
    @overload
    @BakeObject.setter
    def BakeObject() -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_PluginUtil:
    @overload
    @staticmethod
    def BringRhinoToTop() -> None: ...
    @overload
    @staticmethod
    def BringWindowToTop(hWnd: IntPtr) -> bool: ...
    @overload
    def Equals(self, obj: Object) -> bool: ...
    @overload
    @staticmethod
    def FocusOnRhino() -> None: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    @staticmethod
    def LoadGrasshopper(message: str) -> Tuple[bool, str]: ...
    @overload
    @staticmethod
    def SaveSettings() -> None: ...
    @overload
    @staticmethod
    def SendKeyCodeToRhino(key: int) -> None: ...
    @overload
    @staticmethod
    def SendKeyCodeToRhino(key: Char) -> None: ...
    @overload
    @staticmethod
    def SendKeyCodeToRhino(key: str) -> None: ...
    @overload
    @staticmethod
    def SendMessage(hWnd: IntPtr, msg: int, wParam: int, lParam: IntPtr) -> IntPtr: ...
    @overload
    @staticmethod
    def SetFocus(hWnd: IntPtr) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def UnloadGrasshopper() -> bool: ...


class GH_ResourceGate:
    @overload
    def Equals(self, obj: Object) -> bool: ...
    @overload
    @property
    def BlackIcon() -> Bitmap: ...
    @overload
    @property
    def Error_12x12() -> Bitmap: ...
    @overload
    @property
    def Error_16x16() -> Bitmap: ...
    @overload
    @property
    def Error_24x24() -> Bitmap: ...
    @overload
    @property
    def Error_40x40() -> Bitmap: ...
    @overload
    @property
    def Info_12x12() -> Bitmap: ...
    @overload
    @property
    def Info_16x16() -> Bitmap: ...
    @overload
    @property
    def Info_24x24() -> Bitmap: ...
    @overload
    @property
    def Info_40x40() -> Bitmap: ...
    @overload
    @property
    def OK_12x12() -> Bitmap: ...
    @overload
    @property
    def OK_16x16() -> Bitmap: ...
    @overload
    @property
    def OK_24x24() -> Bitmap: ...
    @overload
    @property
    def OK_40x40() -> Bitmap: ...
    @overload
    @property
    def Warning_12x12() -> Bitmap: ...
    @overload
    @property
    def Warning_16x16() -> Bitmap: ...
    @overload
    @property
    def Warning_24x24() -> Bitmap: ...
    @overload
    @property
    def Warning_40x40() -> Bitmap: ...
    @overload
    @property
    def WhiteIcon() -> Bitmap: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def ToString(self) -> str: ...


from ..Kernel import GH_Document
class GH_RhinoScriptInterface:
    @overload
    def __init__(self): ...
    @overload
    def AssignDataToParameter(self, parameterID: str, data: Object) -> bool: ...
    @overload
    def BakeDataInObject(self, objectID: str) -> Object: ...
    @overload
    def CloseAllDocuments(self) -> bool: ...
    @overload
    def CloseDocument(self) -> bool: ...
    @overload
    def DisableBanner(self) -> None: ...
    @overload
    def DisableSolver(self) -> None: ...
    @overload
    def EnableBanner(self) -> None: ...
    @overload
    def EnableSolver(self) -> None: ...
    @overload
    def Equals(self, obj: Object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def HideEditor(self) -> None: ...
    @overload
    def IsEditorLoaded(self) -> bool: ...
    @overload
    def IsEditorVisible(self) -> bool: ...
    @overload
    def IsSolverEnabled(self) -> bool: ...
    @overload
    def LoadEditor(self) -> None: ...
    @overload
    def OpenDocument(self, filename: str) -> bool: ...
    @overload
    def RunAsCommand(self, ghDoc: GH_Document, command: Command, rhinoDoc: RhinoDoc, mode: RunMode) -> Result: ...
    @overload
    def RunHeadless(self) -> None: ...
    @overload
    def RunSolver(self, expireAllObjects: bool) -> None: ...
    @overload
    def SaveDocument(self) -> bool: ...
    @overload
    def SaveDocumentAs(self, filename: str) -> bool: ...
    @overload
    def SetSliderRangeAndValue(self, sliderID: str, value: float, minimum: float, maximum: float) -> bool: ...
    @overload
    def SetSliderValue(self, sliderID: str, value: float) -> bool: ...
    @overload
    def ShowEditor(self) -> None: ...
    @overload
    def ToString(self) -> str: ...

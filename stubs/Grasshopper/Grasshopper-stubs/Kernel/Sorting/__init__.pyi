from typing import overload, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum



class GH_NetworkSorter:
    def __init__(self): ...
    def CreateContext(self, objs: List) -> None: ...
    def CreateNodeList(self, objs: List) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def Sort(self, bDamp: Single, bLimit: Single) -> None: ...
    def ToString(self) -> str: ...


class GH_NetworkSorterNode:
    def __init__(self, obj_target: IGH_DocumentObject): ...
    def AdjustTarget(self, bDamp: Single, bLimit: Single) -> None: ...
    def ConstructLinkForces(self) -> None: ...
    def ConstructNodeForces(self, objs: List) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...

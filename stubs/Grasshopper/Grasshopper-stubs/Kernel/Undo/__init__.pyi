from typing import overload, Any, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum
from System import *
from System.Drawing import *

import Actions

__all__ = ['Actions']


class GH_ArchivedUndoAction(GH_UndoAction):
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @property
    def ExpiresDisplay(self) -> bool: ...
    @overload
    @property
    def ExpiresSolution(self) -> bool: ...
    @overload
    @property
    def State(self) -> GH_UndoState: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Read(self, reader: GH_IReader) -> bool: ...
    @overload
    def Redo(self, doc: GH_Document) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def Undo(self, doc: GH_Document) -> None: ...
    @overload
    def Write(self, writer: GH_IWriter) -> bool: ...


class GH_ObjectUndoAction(GH_UndoAction):
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @property
    def ExpiresDisplay(self) -> bool: ...
    @overload
    @property
    def ExpiresSolution(self) -> bool: ...
    @overload
    @property
    def State(self) -> GH_UndoState: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Read(self, reader: GH_IReader) -> bool: ...
    @overload
    def Redo(self, doc: GH_Document) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def Undo(self, doc: GH_Document) -> None: ...
    @overload
    def Write(self, writer: GH_IWriter) -> bool: ...


class GH_UndoAction:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @property
    def ExpiresDisplay(self) -> bool: ...
    @overload
    @property
    def ExpiresSolution(self) -> bool: ...
    @overload
    @property
    def State(self) -> GH_UndoState: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Read(self, reader: GH_IReader) -> bool: ...
    @overload
    def Redo(self, doc: GH_Document) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def Undo(self, doc: GH_Document) -> None: ...
    @overload
    def Write(self, writer: GH_IWriter) -> bool: ...


class GH_UndoException:
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, args: Iterable[object]): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @property
    def Data(self) -> IDictionary: ...
    @overload
    @property
    def HelpLink(self) -> str: ...
    @overload
    @property
    def HResult(self) -> int: ...
    @overload
    @property
    def InnerException(self) -> Exception: ...
    @overload
    @property
    def Message(self) -> str: ...
    @overload
    @property
    def Source(self) -> str: ...
    @overload
    @property
    def StackTrace(self) -> str: ...
    @overload
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @overload
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_UndoRecord:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, name: str): ...
    @overload
    def __init__(self, name: str, action: IGH_UndoAction): ...
    @overload
    def __init__(self, name: str, actions: Iterable[IGH_UndoAction]): ...
    @overload
    def __init__(self, name: str, actions: Iterable[IGH_UndoAction]): ...
    @overload
    def AddAction(self, action: IGH_UndoAction) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @property
    def ActionCount(self) -> int: ...
    @overload
    @property
    def Actions(self) -> Iterable[IGH_UndoAction]: ...
    @overload
    @property
    def ExpiresDisplay(self) -> bool: ...
    @overload
    @property
    def ExpiresSolution(self) -> bool: ...
    @overload
    @property
    def Guid(self) -> Guid: ...
    @overload
    @property
    def Name(self) -> str: ...
    @overload
    @property
    def State(self) -> GH_UndoState: ...
    @overload
    @property
    def Time(self) -> DateTime: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Redo(self, doc: GH_Document) -> None: ...
    @overload
    @Name.setter
    def Name(self, Value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def Undo(self, doc: GH_Document) -> None: ...


class GH_UndoServer:
    @overload
    def __init__(self, owner: GH_Document): ...
    @overload
    def AppendToDebugLog(self, writer: GH_DebugDescriptionWriter) -> None: ...
    @overload
    def Clear(self) -> None: ...
    @overload
    def ClearRedo(self) -> None: ...
    @overload
    def ClearUndo(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @property
    def FirstRedoName(self) -> str: ...
    @overload
    @property
    def FirstUndoName(self) -> str: ...
    @overload
    @property
    def MaxRecords(self) -> int: ...
    @overload
    @property
    def RedoCount(self) -> int: ...
    @overload
    @property
    def RedoGuids(self) -> List: ...
    @overload
    @property
    def RedoNames(self) -> List: ...
    @overload
    @property
    def UndoCount(self) -> int: ...
    @overload
    @property
    def UndoGuids(self) -> List: ...
    @overload
    @property
    def UndoNames(self) -> List: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def MergeRecords(self, count: int) -> bool: ...
    @overload
    def PerformRedo(self) -> None: ...
    @overload
    def PerformUndo(self) -> None: ...
    @overload
    def PushUndoRecord(self, record: GH_UndoRecord) -> None: ...
    @overload
    def PushUndoRecord(self, name: str, action: GH_UndoAction) -> Guid: ...
    @overload
    def RemoveRecord(self, id: Guid) -> bool: ...
    @overload
    @MaxRecords.setter
    def MaxRecords(self, Value: int) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_UndoState(Enum):
    undo = 0
    redo = 1


class IGH_UndoAction:
    @overload
    @property
    def ExpiresDisplay(self) -> bool: ...
    @overload
    @property
    def ExpiresSolution(self) -> bool: ...
    @overload
    @property
    def State(self) -> GH_UndoState: ...
    @overload
    def Redo(self, doc: GH_Document) -> None: ...
    @overload
    def Undo(self, doc: GH_Document) -> None: ...

from typing import Tuple, Iterable, overload
from enum import Enum



class GH_ArcGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetArc() -> GH_Arc: ...
    def GetArcs() -> List: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_BoxGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetBox() -> GH_Box: ...
    def GetBoxes() -> List: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_BrepGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetBrep() -> GH_Brep: ...
    def GetBreps() -> List: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_CircleGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetCircle() -> GH_Circle: ...
    def GetCircles() -> List: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_CurveGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetCurve() -> GH_Curve: ...
    def GetCurves() -> List: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_GeometryGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetGeometries() -> List: ...
    def GetGeometry() -> IGH_GeometricGoo: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_LineGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetLine() -> GH_Line: ...
    def GetLines() -> List: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_MeshGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetMesh() -> GH_Mesh: ...
    def GetMeshes() -> List: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_PlaneGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetPlane() -> GH_Plane: ...
    def GetPlanes() -> List: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


from ..Kernel.Types import GH_PointRefType
from ..Kernel.Types import GH_Point
class GH_PointGetter:
    def __init__(self): ...
    def DefaultRefType(self) -> GH_PointRefType: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def AcceptPreselected(self) -> bool: ...
    @property
    def PointRefType(self) -> GH_PointRefType: ...
    def GetHashCode(self) -> int: ...
    @overload
    def GetPoint(self) -> GH_Point: ...
    @overload
    def GetPoint(self, base: Point3d) -> GH_Point: ...
    @overload
    def GetPoint(prompt: str, basePoint: Point3d, outPoint: Point3d) -> Tuple[GH_GetterResult, Point3d]: ...
    def GetPoints(self) -> List: ...
    def GetType(self) -> Type: ...
    def RecreateSetup(self, pt: GH_Point) -> None: ...
    @AcceptPreselected.setter
    def AcceptPreselected(self, AutoPropertyValue: bool) -> None: ...
    @PointRefType.setter
    def PointRefType(self, AutoPropertyValue: GH_PointRefType) -> None: ...
    def ToString(self) -> str: ...


class GH_RectangleGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetRectangle() -> GH_Rectangle: ...
    def GetRectangles() -> List: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_SubDGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetSubD() -> GH_SubD: ...
    def GetSubDs() -> List: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_SurfaceGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetSurface() -> GH_Surface: ...
    def GetSurfaces() -> List: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_TransformGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class GH_VectorGetter:
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def GetVector() -> GH_Vector: ...
    def GetVectors() -> List: ...
    def ToString(self) -> str: ...

from typing import overload, Any, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum
from System import *
from System.Drawing import *

import Params

__all__ = ['Params']


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def Elevation(self) -> Nullable: ...
    @overload
    @property
    def ElevationCoordinateSystem(self) -> Nullable: ...
    @overload
    @property
    def Latitude(self) -> Nullable: ...
    @overload
    @property
    def Longitude(self) -> Nullable: ...
    @overload
    @property
    def ModelCompass(self) -> Nullable: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @Elevation.setter
    def Elevation(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @ElevationCoordinateSystem.setter
    def ElevationCoordinateSystem(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Latitude.setter
    def Latitude(self, value: Nullable) -> None: ...
    @overload
    @Longitude.setter
    def Longitude(self, value: Nullable) -> None: ...
    @overload
    @ModelCompass.setter
    def ModelCompass(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def FilePath(self) -> str: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Objects(self) -> IReadOnlyList: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def Units(self) -> Nullable: ...
    @overload
    @property
    def UpdateType(self) -> Nullable: ...
    @overload
    @property
    def Url(self) -> str: ...
    @overload
    @property
    def UrlDescription(self) -> str: ...
    @overload
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @overload
    @FilePath.setter
    def FilePath(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Objects.setter
    def Objects(self, AutoPropertyValue: IReadOnlyList) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    @Units.setter
    def Units(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @UpdateType.setter
    def UpdateType(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Url.setter
    def Url(self, AutoPropertyValue: str) -> None: ...
    @overload
    @UrlDescription.setter
    def UrlDescription(self, AutoPropertyValue: str) -> None: ...
    @overload
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from ..Drafting import ModelLinetype
from ..Render import ModelRenderMaterial
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def DisplayColor(self) -> Nullable: ...
    @overload
    @property
    def DraftingColor(self) -> Nullable: ...
    @overload
    @property
    def Hidden(self) -> Nullable: ...
    @overload
    @property
    def HiddenOnModel(self) -> Nullable: ...
    @overload
    @property
    def HiddenOnNewDetail(self) -> Nullable: ...
    @overload
    @property
    def Linetype(self) -> ModelLinetype: ...
    @overload
    @property
    def LineWeight(self) -> Nullable: ...
    @overload
    @property
    def Locked(self) -> Nullable: ...
    @overload
    @property
    def Material(self) -> ModelRenderMaterial: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @overload
    @DisplayColor.setter
    def DisplayColor(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @DraftingColor.setter
    def DraftingColor(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Hidden.setter
    def Hidden(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @HiddenOnModel.setter
    def HiddenOnModel(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @HiddenOnNewDetail.setter
    def HiddenOnNewDetail(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Linetype.setter
    def Linetype(self, AutoPropertyValue: ModelLinetype) -> None: ...
    @overload
    @LineWeight.setter
    def LineWeight(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Locked.setter
    def Locked(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Material.setter
    def Material(self, AutoPropertyValue: ModelRenderMaterial) -> None: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from ..Display import ObjectVisibility
from ..Display import ObjectDisplay
from ..Drafting import ObjectDrafting
from ..Render import ObjectRender
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def Display(self) -> ObjectDisplay: ...
    @overload
    @property
    def Drafting(self) -> ObjectDrafting: ...
    @overload
    @property
    def Frame(self) -> Nullable: ...
    @overload
    @property
    def Layer(self) -> ModelLayer: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Render(self) -> ObjectRender: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def Url(self) -> str: ...
    @overload
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    @property
    def Visibility(self) -> ObjectVisibility: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @Display.setter
    def Display(self, AutoPropertyValue: ObjectDisplay) -> None: ...
    @overload
    @Drafting.setter
    def Drafting(self, AutoPropertyValue: ObjectDrafting) -> None: ...
    @overload
    @Frame.setter
    def Frame(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Layer.setter
    def Layer(self, AutoPropertyValue: ModelLayer) -> None: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @Render.setter
    def Render(self, AutoPropertyValue: ObjectRender) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    @Url.setter
    def Url(self, AutoPropertyValue: str) -> None: ...
    @overload
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @overload
    @Visibility.setter
    def Visibility(self, AutoPropertyValue: ObjectVisibility) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class ModelEarthAnchorPoint(ModelContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, anchorPoint: EarthAnchorPoint): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelEarthAnchorPoint: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def Elevation(self) -> Nullable: ...
    @overload
    @property
    def ElevationCoordinateSystem(self) -> Nullable: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Latitude(self) -> Nullable: ...
    @overload
    @property
    def Longitude(self) -> Nullable: ...
    @overload
    @property
    def ModelCompass(self) -> Nullable: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def SphereUParameter(self) -> Nullable: ...
    @overload
    @property
    def SphereVParameter(self) -> Nullable: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(anchorPoint: EarthAnchorPoint) -> ModelEarthAnchorPoint: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelEarthAnchorPoint: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelInstanceDefinition(ModelComponentContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, block: InstanceDefinition): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    def BakeGeometry(self, doc: RhinoDoc, att: ObjectAttributes, obj_guid: Guid) -> Tuple[bool, Guid]: ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelInstanceDefinition: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def BoundingBox(self) -> BoundingBox: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def FilePath(self) -> str: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Objects(self) -> IReadOnlyList: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    @property
    def Unset() -> ModelInstanceDefinition: ...
    @overload
    @property
    def UpdateType(self) -> Nullable: ...
    @overload
    @property
    def Url(self) -> str: ...
    @overload
    @property
    def UrlDescription(self) -> str: ...
    @overload
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetBoundingBox(self, xform: Transform) -> BoundingBox: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(instanceDefinition: InstanceDefinition) -> ModelInstanceDefinition: ...
    @overload
    def op_Implicit(path: str) -> ModelInstanceDefinition: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelInstanceDefinition: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from ..Drafting import ModelLinetype
from ..Render import ModelRenderMaterial
class ModelLayer(ModelComponentContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, layer: Layer): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelLayer: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def DisplayColor(self) -> Nullable: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def DraftingColor(self) -> Nullable: ...
    @overload
    @property
    def Hidden(self) -> Nullable: ...
    @overload
    @property
    def HiddenOnModel(self) -> Nullable: ...
    @overload
    @property
    def HiddenOnNewDetail(self) -> Nullable: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Linetype(self) -> ModelLinetype: ...
    @overload
    @property
    def LineWeight(self) -> Nullable: ...
    @overload
    @property
    def Locked(self) -> Nullable: ...
    @overload
    @property
    def Material(self) -> ModelRenderMaterial: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    @property
    def Unset() -> ModelLayer: ...
    @overload
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(layer: Layer) -> ModelLayer: ...
    @overload
    def op_Implicit(path: str) -> ModelLayer: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelLayer: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from ..Display import ObjectVisibility
from ..Display import ObjectDisplay
from ..Drafting import ObjectDrafting
from ..Render import ObjectRender
class ModelObject(ModelComponentContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, rhinoObject: RhinoObject): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    def __init__(self, document: RhinoDoc, objectAttributes: ObjectAttributes): ...
    @overload
    def __init__(self, document: RhinoDoc, objectAttributes: ObjectAttributes, geometry: GeometryBase): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelObject: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    @property
    def BoundingBox(self) -> BoundingBox: ...
    @overload
    @property
    def Display(self) -> ObjectDisplay: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def Drafting(self) -> ObjectDrafting: ...
    @overload
    @property
    def Frame(self) -> Nullable: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Layer(self) -> ModelLayer: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def ObjectType(self) -> ObjectType: ...
    @overload
    @property
    def ObjectTypeMask() -> ObjectType: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Render(self) -> ObjectRender: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    @property
    def Url(self) -> str: ...
    @overload
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    @property
    def Visibility(self) -> ObjectVisibility: ...
    @overload
    def GetBoundingBox(self, xform: Transform) -> BoundingBox: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(object: RhinoObject) -> ModelObject: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelObject: ...
    @overload
    @ObjectTypeMask.setter
    def ObjectTypeMask(AutoPropertyValue: ObjectType) -> None: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...

from typing import overload, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum

import Params

__all__ = ['Params']


class Attributes:
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    def Equals(self, other: Attributes) -> bool: ...
    @overload
    @staticmethod
    def From(modelHatchLine: HatchLine) -> Attributes: ...
    @overload
    @property
    def Angle(self) -> float: ...
    @overload
    @property
    def Base(self) -> Point2d: ...
    @overload
    @property
    def Offset(self) -> Vector2d: ...
    @overload
    @property
    def Segments(self) -> IReadOnlyList: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    @Angle.setter
    def Angle(self, AutoPropertyValue: float) -> None: ...
    @overload
    @Base.setter
    def Base(self, AutoPropertyValue: Point2d) -> None: ...
    @overload
    @Offset.setter
    def Offset(self, AutoPropertyValue: Vector2d) -> None: ...
    @overload
    @Segments.setter
    def Segments(self, AutoPropertyValue: IReadOnlyList) -> None: ...
    @overload
    def ToHatchLine(self) -> HatchLine: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    @property
    def Lines(self) -> IReadOnlyList: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @overload
    @Lines.setter
    def Lines(self, AutoPropertyValue: IReadOnlyList) -> None: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    @property
    def CapStyle(self) -> Nullable: ...
    @overload
    @property
    def JoinStyle(self) -> Nullable: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Segments(self) -> IReadOnlyList: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TaperPoints(self) -> IReadOnlyList: ...
    @overload
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    @property
    def Width(self) -> Nullable: ...
    @overload
    @property
    def WidthUnits(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @overload
    @CapStyle.setter
    def CapStyle(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @JoinStyle.setter
    def JoinStyle(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @Segments.setter
    def Segments(self, AutoPropertyValue: IReadOnlyList) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    @TaperPoints.setter
    def TaperPoints(self, value: IReadOnlyList) -> None: ...
    @overload
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @overload
    @Width.setter
    def Width(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @WidthUnits.setter
    def WidthUnits(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    def Equals(self, other: Attributes) -> bool: ...
    @overload
    @property
    def Color(self) -> Nullable: ...
    @overload
    @property
    def LineScale(self) -> Nullable: ...
    @overload
    @property
    def Linetype(self) -> Nullable: ...
    @overload
    @property
    def LineWidth(self) -> Nullable: ...
    @overload
    @property
    def Order(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    @Color.setter
    def Color(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @LineScale.setter
    def LineScale(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Linetype.setter
    def Linetype(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @LineWidth.setter
    def LineWidth(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Order.setter
    def Order(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToString(self) -> str: ...


class ModelHatchLine(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, hatchLine: HatchLine): ...
    @overload
    @staticmethod
    def Cast(source: Object) -> ModelHatchLine: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @overload
    @property
    def Angle(self) -> float: ...
    @overload
    @property
    def Base(self) -> Point2d: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Offset(self) -> Vector2d: ...
    @overload
    @property
    def Segments(self) -> IReadOnlyList: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelHatchLine: ...
    @overload
    def op_Implicit(hatchLine: HatchLine) -> ModelHatchLine: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToHatchLine(self) -> HatchLine: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelHatchPattern(ModelComponentContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, pattern: HatchPattern): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: Object) -> ModelHatchPattern: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def FillType(self) -> Nullable: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Lines(self) -> IReadOnlyList: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    @property
    def Unset() -> ModelHatchPattern: ...
    @overload
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(pattern: HatchPattern) -> ModelHatchPattern: ...
    @overload
    def op_Implicit(path: str) -> ModelHatchPattern: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelHatchPattern: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelLinetype(ModelComponentContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, linetype: Linetype): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: Object) -> ModelLinetype: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    @property
    def CapStyle(self) -> Nullable: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def JoinStyle(self) -> Nullable: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Segments(self) -> IReadOnlyList: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TaperPoints(self) -> IReadOnlyList: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    @property
    def Unset() -> ModelLinetype: ...
    @overload
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    @property
    def Width(self) -> Nullable: ...
    @overload
    @property
    def WidthUnits(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(linetype: Linetype) -> ModelLinetype: ...
    @overload
    def op_Implicit(path: str) -> ModelLinetype: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelLinetype: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from ...Kernel.Types import IGH_Goo
from ...Kernel.Types import GH_Number
from ...Kernel.Types import T
from ...Kernel.Types import GH_QuickCastType
from ...Kernel.Types import IGH_QuickCast
from ...Kernel.Types import Complex
from ...Kernel.Types import IGH_GooProxy
from ...Kernel.Types import GH_Number
class ModelLineWidth(GH_Number):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, value: float): ...
    @overload
    def CastFrom(self, source: Object) -> bool: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Duplicate(self) -> IGH_Goo: ...
    @overload
    def DuplicateNumber(self) -> GH_Number: ...
    @overload
    def EmitProxy(self) -> IGH_GooProxy: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    def Equals(self, other: ModelLineWidth) -> bool: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def IsValidWhyNot(self) -> str: ...
    @overload
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @overload
    @property
    def TypeDescription(self) -> str: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    @property
    def Value(self) -> float: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def QC_Bool(self) -> bool: ...
    @overload
    def QC_Col(self) -> Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex(self) -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash(self) -> int: ...
    @overload
    def QC_Int(self) -> int: ...
    @overload
    def QC_Interval(self) -> Interval: ...
    @overload
    def QC_Matrix(self) -> Matrix: ...
    @overload
    def QC_Num(self) -> float: ...
    @overload
    def QC_Pt(self) -> Point3d: ...
    @overload
    def QC_Text(self) -> str: ...
    @overload
    def QC_Vec(self) -> Vector3d: ...
    @overload
    def Read(self, reader: GH_IReader) -> bool: ...
    @overload
    def ScriptVariable(self) -> Object: ...
    @overload
    @Value.setter
    def Value(self, new_value: float) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def Write(self, writer: GH_IWriter) -> bool: ...


class ObjectDrafting(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    @staticmethod
    def Cast(source: Object) -> ObjectDrafting: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @overload
    @property
    def Color(self) -> Nullable: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def LineScale(self) -> Nullable: ...
    @overload
    @property
    def Linetype(self) -> Nullable: ...
    @overload
    @property
    def LineWidth(self) -> Nullable: ...
    @overload
    @property
    def Order(self) -> Nullable: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ObjectDrafting: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ObjectDraftingColor(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, value: Value): ...
    @overload
    @staticmethod
    def Cast(source: Object) -> ObjectDraftingColor: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @overload
    @property
    def Color(self) -> Nullable: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Source(self) -> ObjectPlotColorSource: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(data: ObjectDraftingColor) -> Value: ...
    @overload
    def op_Implicit(data: Value) -> ObjectDraftingColor: ...
    @overload
    def ToAttributes(self) -> Value: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ObjectDraftingLinetype(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, value: Value): ...
    @overload
    @staticmethod
    def Cast(source: Object) -> ObjectDraftingLinetype: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Linetype(self) -> ModelLinetype: ...
    @overload
    @property
    def Source(self) -> ObjectLinetypeSource: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(data: ObjectDraftingLinetype) -> Value: ...
    @overload
    def op_Implicit(data: Value) -> ObjectDraftingLinetype: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ObjectDraftingLineWidth(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, value: Value): ...
    @overload
    @staticmethod
    def Cast(source: Object) -> ObjectDraftingLineWidth: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Source(self) -> ObjectPlotWeightSource: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    @property
    def Width(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(data: ObjectDraftingLineWidth) -> Value: ...
    @overload
    def op_Implicit(data: Value) -> ObjectDraftingLineWidth: ...
    @overload
    def ToAttributes(self) -> Value: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class Value:
    @overload
    def __init__(self, source: ObjectPlotColorSource): ...
    @overload
    def __init__(self, color: ModelColor): ...
    @overload
    def __init__(self, source: ObjectPlotColorSource, color: ModelColor): ...
    @overload
    def CompareTo(self, other: Object) -> int: ...
    @overload
    def CompareTo(self, other: Value) -> int: ...
    @overload
    def Deconstruct(self) -> Tuple[ObjectPlotColorSource, ModelColor]: ...
    @overload
    def Equals(self, other: Value) -> bool: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    @property
    def ByDisplay() -> Value: ...
    @overload
    @property
    def ByLayer() -> Value: ...
    @overload
    @property
    def ByParent() -> Value: ...
    @overload
    @property
    def Color(self) -> ModelColor: ...
    @overload
    @property
    def Source(self) -> ObjectPlotColorSource: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(color: ModelColor) -> Value: ...
    @overload
    def op_Implicit(source: ObjectPlotColorSource) -> Value: ...
    @overload
    def op_Implicit(value: Value) -> ModelColor: ...
    @overload
    def op_Implicit(value: Value) -> ObjectPlotColorSource: ...
    @overload
    def ToString(self) -> str: ...


class Value:
    @overload
    def __init__(self, source: ObjectLinetypeSource): ...
    @overload
    def __init__(self, value: ModelLinetype): ...
    @overload
    def __init__(self, source: ObjectLinetypeSource, value: ModelLinetype): ...
    @overload
    def CompareTo(self, obj: Object) -> int: ...
    @overload
    def CompareTo(self, other: Value) -> int: ...
    @overload
    def Deconstruct(self) -> Tuple[ObjectLinetypeSource, ModelLinetype]: ...
    @overload
    def Equals(self, other: Value) -> bool: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    @property
    def ByLayer() -> Value: ...
    @overload
    @property
    def ByParent() -> Value: ...
    @overload
    @property
    def Continuous() -> Value: ...
    @overload
    @property
    def Linetype(self) -> ModelLinetype: ...
    @overload
    @property
    def Source(self) -> ObjectLinetypeSource: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(color: ModelLinetype) -> Value: ...
    @overload
    def op_Implicit(source: ObjectLinetypeSource) -> Value: ...
    @overload
    def op_Implicit(value: Value) -> ModelLinetype: ...
    @overload
    def op_Implicit(value: Value) -> ObjectLinetypeSource: ...
    @overload
    def ToString(self) -> str: ...


class Value:
    @overload
    def __init__(self, source: ObjectPlotWeightSource): ...
    @overload
    def __init__(self, value: float): ...
    @overload
    def __init__(self, source: ObjectPlotWeightSource, value: float): ...
    @overload
    def CompareTo(self, obj: Object) -> int: ...
    @overload
    def CompareTo(self, other: Value) -> int: ...
    @overload
    def Deconstruct(self) -> Tuple[ObjectPlotWeightSource, float]: ...
    @overload
    def Equals(self, other: Object) -> bool: ...
    @overload
    def Equals(self, other: Value) -> bool: ...
    @overload
    @property
    def ByLayer() -> Value: ...
    @overload
    @property
    def ByParent() -> Value: ...
    @overload
    @property
    def Source(self) -> ObjectPlotWeightSource: ...
    @overload
    @property
    def Width(self) -> float: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def op_Implicit(source: ObjectPlotWeightSource) -> Value: ...
    @overload
    def op_Implicit(value: Value) -> ObjectPlotWeightSource: ...
    @overload
    def op_Implicit(color: float) -> Value: ...
    @overload
    def op_Implicit(value: Value) -> float: ...
    @overload
    def ToString(self) -> str: ...

from typing import overload, Any, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum
from System import *
from System.Drawing import *

import Params

__all__ = ['Params']


class Attributes:
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def RenderEnvironment(self) -> RenderEnvironment: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @RenderEnvironment.setter
    def RenderEnvironment(self, value: RenderEnvironment) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def Enabled(self) -> Nullable: ...
    @overload
    @property
    def Environment(self) -> ModelRenderEnvironment: ...
    @overload
    @property
    def EnvironmentOverride(self) -> Nullable: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @Enabled.setter
    def Enabled(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Environment.setter
    def Environment(self, AutoPropertyValue: ModelRenderEnvironment) -> None: ...
    @overload
    @EnvironmentOverride.setter
    def EnvironmentOverride(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def Altitude(self) -> Nullable: ...
    @overload
    @property
    def Azimuth(self) -> Nullable: ...
    @overload
    @property
    def DateTime(self) -> Nullable: ...
    @overload
    @property
    def DaylightSavingEnabled(self) -> Nullable: ...
    @overload
    @property
    def DaylightSavingMinutes(self) -> Nullable: ...
    @overload
    @property
    def Direction(self) -> Nullable: ...
    @overload
    @property
    def Enabled(self) -> Nullable: ...
    @overload
    @property
    def Intensity(self) -> Nullable: ...
    @overload
    @property
    def Latitude(self) -> Nullable: ...
    @overload
    @property
    def Longitude(self) -> Nullable: ...
    @overload
    @property
    def Manual(self) -> Nullable: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def North(self) -> Nullable: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TimeZone(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @Altitude.setter
    def Altitude(self, value: Nullable) -> None: ...
    @overload
    @Azimuth.setter
    def Azimuth(self, value: Nullable) -> None: ...
    @overload
    @DateTime.setter
    def DateTime(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @DaylightSavingEnabled.setter
    def DaylightSavingEnabled(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @DaylightSavingMinutes.setter
    def DaylightSavingMinutes(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Direction.setter
    def Direction(self, value: Nullable) -> None: ...
    @overload
    @Enabled.setter
    def Enabled(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Intensity.setter
    def Intensity(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Latitude.setter
    def Latitude(self, value: Nullable) -> None: ...
    @overload
    @Longitude.setter
    def Longitude(self, value: Nullable) -> None: ...
    @overload
    @Manual.setter
    def Manual(self, value: Nullable) -> None: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @North.setter
    def North(self, value: Nullable) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    @TimeZone.setter
    def TimeZone(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def RenderTexture(self) -> RenderTexture: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @overload
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @overload
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @overload
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @overload
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @overload
    @RenderTexture.setter
    def RenderTexture(self, value: RenderTexture) -> None: ...
    @overload
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: Attributes) -> bool: ...
    @overload
    @property
    def CastsShadows(self) -> Nullable: ...
    @overload
    @property
    def Material(self) -> Nullable: ...
    @overload
    @property
    def MeshingParameters(self) -> ModelMeshingParameters: ...
    @overload
    @property
    def ReceivesShadows(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @CastsShadows.setter
    def CastsShadows(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @Material.setter
    def Material(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    @MeshingParameters.setter
    def MeshingParameters(self, AutoPropertyValue: ModelMeshingParameters) -> None: ...
    @overload
    @ReceivesShadows.setter
    def ReceivesShadows(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToString(self) -> str: ...


class ModelRenderContent(ModelContent):
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelRenderEnvironment(ModelRenderContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, renderEnvironment: RenderEnvironment): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelRenderEnvironment: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(renderEnvironment: RenderEnvironment) -> ModelRenderEnvironment: ...
    @overload
    def op_Implicit(rgba: ColorRGBA) -> ModelRenderEnvironment: ...
    @overload
    def op_Implicit(path: str) -> ModelRenderEnvironment: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelRenderEnvironment: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelRenderMaterial(ModelRenderContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, material: Material): ...
    @overload
    def __init__(self, renderMaterial: RenderMaterial): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelRenderMaterial: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    @property
    def Unset() -> ModelRenderMaterial: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelRenderMaterial: ...
    @overload
    def op_Implicit(path: str) -> ModelRenderMaterial: ...
    @overload
    def op_Implicit(rgba: ColorRGBA) -> ModelRenderMaterial: ...
    @overload
    def op_Implicit(material: Material) -> ModelRenderMaterial: ...
    @overload
    def op_Implicit(renderMaterial: RenderMaterial) -> ModelRenderMaterial: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelRenderSkylight(ModelContent):
    @overload
    def __init__(self): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelRenderSkylight: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def Enabled(self) -> Nullable: ...
    @overload
    @property
    def Environment(self) -> ModelRenderEnvironment: ...
    @overload
    @property
    def EnvironmentOverride(self) -> Nullable: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelRenderSkylight: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelRenderSun(ModelContent):
    @overload
    def __init__(self): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelRenderSun: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def Altitude(self) -> Nullable: ...
    @overload
    @property
    def Azimuth(self) -> Nullable: ...
    @overload
    @property
    def DateTime(self) -> Nullable: ...
    @overload
    @property
    def DaylightSavingEnabled(self) -> Nullable: ...
    @overload
    @property
    def DaylightSavingMinutes(self) -> Nullable: ...
    @overload
    @property
    def Direction(self) -> Nullable: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def Enabled(self) -> Nullable: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def Intensity(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Latitude(self) -> Nullable: ...
    @overload
    @property
    def Longitude(self) -> Nullable: ...
    @overload
    @property
    def Manual(self) -> Nullable: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def North(self) -> Nullable: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TimeZone(self) -> Nullable: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelRenderSun: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelRenderTexture(ModelRenderContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, renderTexture: RenderTexture): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelRenderTexture: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def Id(self) -> Nullable: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Name(self) -> ModelContentName: ...
    @overload
    @property
    def Notes(self) -> str: ...
    @overload
    @property
    def Parent(self) -> ModelContentName: ...
    @overload
    @property
    def Path(self) -> ModelContentName: ...
    @overload
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(renderTexture: RenderTexture) -> ModelRenderTexture: ...
    @overload
    def op_Implicit(rgba: ColorRGBA) -> ModelRenderTexture: ...
    @overload
    def op_Implicit(path: str) -> ModelRenderTexture: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelRenderTexture: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ObjectRender(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ObjectRender: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @overload
    @property
    def CastsShadows(self) -> Nullable: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Material(self) -> Nullable: ...
    @overload
    @property
    def MeshingParameters(self) -> ModelMeshingParameters: ...
    @overload
    @property
    def ReceivesShadows(self) -> Nullable: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ObjectRender: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ObjectRenderMaterial(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, value: Value): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ObjectRenderMaterial: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @overload
    @property
    def DisplayName(self) -> str: ...
    @overload
    @property
    def IsValid(self) -> bool: ...
    @overload
    @property
    def Material(self) -> ModelRenderMaterial: ...
    @overload
    @property
    def Source(self) -> ObjectMaterialSource: ...
    @overload
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(data: ObjectRenderMaterial) -> Value: ...
    @overload
    def op_Implicit(data: Value) -> ObjectRenderMaterial: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class Value:
    @overload
    def __init__(self, source: ObjectMaterialSource): ...
    @overload
    def __init__(self, value: ModelRenderMaterial): ...
    @overload
    def __init__(self, source: ObjectMaterialSource, value: ModelRenderMaterial): ...
    @overload
    def CompareTo(self, obj: object) -> int: ...
    @overload
    def CompareTo(self, other: Value) -> int: ...
    @overload
    def Deconstruct(self) -> Tuple[ObjectMaterialSource, ModelRenderMaterial]: ...
    @overload
    def Equals(self, other: Value) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @property
    def ByLayer() -> Value: ...
    @overload
    @property
    def ByParent() -> Value: ...
    @overload
    @property
    def Default() -> Value: ...
    @overload
    @property
    def Material(self) -> ModelRenderMaterial: ...
    @overload
    @property
    def Source(self) -> ObjectMaterialSource: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(color: ModelRenderMaterial) -> Value: ...
    @overload
    def op_Implicit(source: ObjectMaterialSource) -> Value: ...
    @overload
    def op_Implicit(value: Value) -> ModelRenderMaterial: ...
    @overload
    def op_Implicit(value: Value) -> ObjectMaterialSource: ...
    @overload
    def ToString(self) -> str: ...

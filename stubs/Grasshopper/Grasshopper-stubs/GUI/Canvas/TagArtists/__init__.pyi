from typing import overload, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum



class GH_TagArtist:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @property
    def ID(self) -> Guid: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Paint(self, canvas: GH_Canvas, channel: GH_CanvasChannel) -> None: ...
    @overload
    def ToString(self) -> str: ...


from ....Kernel import IGH_Param
class GH_TagArtist_WirePainter(GH_TagArtist):
    @overload
    def __init__(self, source: IGH_Param, target: IGH_Param, colour: Color, width: int): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @property
    def ID(self) -> Guid: ...
    @overload
    @property
    def WirePainter_ID() -> Guid: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Paint(self, canvas: GH_Canvas, channel: GH_CanvasChannel) -> None: ...
    @overload
    def ToString(self) -> str: ...


class IGH_TagArtist:
    @overload
    @property
    def ID(self) -> Guid: ...
    @overload
    def Paint(self, canvas: GH_Canvas, channel: GH_CanvasChannel) -> None: ...

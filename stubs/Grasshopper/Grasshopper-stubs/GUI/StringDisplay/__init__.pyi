from typing import overload, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum



class GH_FormattedListItem(GH_SimpleListItem):
    @overload
    def __init__(self): ...
    @overload
    def ComputeSize(self, layoutWidth: int) -> Size: ...
    @overload
    def Equals(self, obj: Object) -> bool: ...
    @overload
    @property
    def Alignment(self) -> StringAlignment: ...
    @overload
    @property
    def BoundingBox(self) -> Rectangle: ...
    @overload
    @property
    def Colour(self) -> Color: ...
    @overload
    @property
    def Font(self) -> Font: ...
    @overload
    @property
    def Text(self) -> str: ...
    @overload
    @property
    def Type(self) -> int: ...
    @overload
    @property
    def Wrap(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def RenderItem(self, G: Graphics, destination: Rectangle) -> None: ...
    @overload
    @Alignment.setter
    def Alignment(self) -> MutableSequence[StringAlignment]: ...
    @overload
    @BoundingBox.setter
    def BoundingBox(self) -> MutableSequence[Rectangle]: ...
    @overload
    @Colour.setter
    def Colour(self) -> MutableSequence[Color]: ...
    @overload
    @Font.setter
    def Font(self) -> MutableSequence[Font]: ...
    @overload
    @Text.setter
    def Text(self) -> MutableSequence[str]: ...
    @overload
    @Type.setter
    def Type(self) -> MutableSequence[int]: ...
    @overload
    @Wrap.setter
    def Wrap(self) -> MutableSequence[bool]: ...
    @overload
    def ToString(self) -> str: ...


class GH_SimpleListItem:
    @overload
    def __init__(self): ...
    @overload
    def ComputeSize(self, layoutWidth: int) -> Size: ...
    @overload
    def Equals(self, obj: Object) -> bool: ...
    @overload
    @property
    def Alignment(self) -> StringAlignment: ...
    @overload
    @property
    def BoundingBox(self) -> Rectangle: ...
    @overload
    @property
    def Colour(self) -> Color: ...
    @overload
    @property
    def Text(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> Type: ...
    @overload
    def RenderItem(self, G: Graphics, destination: Rectangle) -> None: ...
    @overload
    @Alignment.setter
    def Alignment(self) -> MutableSequence[StringAlignment]: ...
    @overload
    @BoundingBox.setter
    def BoundingBox(self) -> MutableSequence[Rectangle]: ...
    @overload
    @Colour.setter
    def Colour(self) -> MutableSequence[Color]: ...
    @overload
    @Text.setter
    def Text(self) -> MutableSequence[str]: ...
    @overload
    def ToString(self) -> str: ...




class IGH_ListItem:
    @overload
    def ComputeSize(self, layoutWidth: int) -> Size: ...
    @overload
    @property
    def BoundingBox(self) -> Rectangle: ...
    @overload
    def RenderItem(self, G: Graphics, destination: Rectangle) -> None: ...
    @overload
    @BoundingBox.setter
    def BoundingBox(self) -> MutableSequence[Rectangle]: ...



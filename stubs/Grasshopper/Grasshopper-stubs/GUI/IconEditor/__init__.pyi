from typing import overload, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum



class GH_IconObject:
    def Contains(self, pt: PointF) -> bool: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Image(self) -> Bitmap: ...
    @property
    def ObjectID(self) -> Guid: ...
    @property
    def Pivot(self) -> Point: ...
    @property
    def Size(self) -> Size: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def Grips(self) -> List: ...
    def Read(self, reader: GH_IReader) -> bool: ...
    def RenderObject(self, G: Graphics) -> None: ...
    def Resize(self, newSize: Size) -> None: ...
    @Pivot.setter
    def Pivot(self) -> MutableSequence[Point]: ...
    @Size.setter
    def Size(self) -> MutableSequence[Size]: ...
    def ToString(self) -> str: ...
    def Write(self, writer: GH_IWriter) -> bool: ...


class GH_IconObject_Rectangle(GH_IconObject):
    def __init__(self): ...
    def Contains(self, pt: PointF) -> bool: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Image(self) -> Bitmap: ...
    @property
    def ObjectID(self) -> Guid: ...
    @property
    def Pivot(self) -> Point: ...
    @property
    def Rectangle(self) -> Rectangle: ...
    @property
    def Size(self) -> Size: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def Grips(self) -> List: ...
    def Read(self, reader: GH_IReader) -> bool: ...
    def RenderObject(self, G: Graphics) -> None: ...
    def Resize(self, newSize: Size) -> None: ...
    @Pivot.setter
    def Pivot(self) -> MutableSequence[Point]: ...
    @Size.setter
    def Size(self) -> MutableSequence[Size]: ...
    def ToString(self) -> str: ...
    def Write(self, writer: GH_IWriter) -> bool: ...


class IGH_IconObject:
    def Contains(self, pt: PointF) -> bool: ...
    @property
    def Image(self) -> Bitmap: ...
    @property
    def ObjectID(self) -> Guid: ...
    @property
    def Pivot(self) -> Point: ...
    @property
    def Size(self) -> Size: ...
    def Grips(self) -> List: ...
    def RenderObject(self, G: Graphics) -> None: ...
    def Resize(self, newSize: Size) -> None: ...
    @Pivot.setter
    def Pivot(self) -> MutableSequence[Point]: ...
    @Size.setter
    def Size(self) -> MutableSequence[Size]: ...


class IGH_IconObjectGrip:
    @property
    def Index(self) -> int: ...
    @property
    def Owner(self) -> IGH_IconObject: ...
    @property
    def Position(self) -> PointF: ...
    @property
    def Selected(self) -> bool: ...
    @property
    def Tag(self) -> Object: ...
    def RenderGrip(self, G: Graphics) -> None: ...
    @Position.setter
    def Position(self) -> MutableSequence[PointF]: ...
    @Selected.setter
    def Selected(self) -> MutableSequence[bool]: ...
    @Tag.setter
    def Tag(self) -> MutableSequence[Object]: ...

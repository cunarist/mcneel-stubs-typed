from typing import overload, Any, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum

import Documentation
import Getters
import GUI
import Kernel
import Plugin
import Rhinoceros

__all__ = ['Documentation', 'Getters', 'GUI', 'Kernel', 'Plugin', 'Rhinoceros']


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class AuthorAddressChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class AuthorCompanyChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class AuthorCopyrightChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class AuthorEMailChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class AuthorNameChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class AuthorPhoneChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class AuthorWebsiteChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from .GUI.Canvas import GH_Canvas
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class CanvasCreatedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, canvas: GH_Canvas, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, canvas: GH_Canvas) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from .GUI.Canvas import GH_Canvas
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class CanvasDestroyedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, canvas: GH_Canvas, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, canvas: GH_Canvas) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class CanvasFancyWiresChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class CanvasFullNamesChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class CanvasObjectIconsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class CanvasObsoleteTagsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class CanvasRadialMenuChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class CanvasToolbarChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class CanvasZuiZoomLevelChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from .Kernel import IGH_Author
from Rhino.Display import PointStyle
from .GUI import GH_PruderyFilter
from .Kernel import GH_LoadingDemand
class CentralSettings:
    @overload
    @staticmethod
    def add_AuthorAddressChanged(obj: AuthorAddressChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorCompanyChanged(obj: AuthorCompanyChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorCopyrightChanged(obj: AuthorCopyrightChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorEMailChanged(obj: AuthorEMailChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorNameChanged(obj: AuthorNameChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorPhoneChanged(obj: AuthorPhoneChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorWebsiteChanged(obj: AuthorWebsiteChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasFancyWiresChanged(obj: CanvasFancyWiresChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasFullNamesChanged(obj: CanvasFullNamesChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasObjectIconsChanged(obj: CanvasObjectIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasObsoleteTagsChanged(obj: CanvasObsoleteTagsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasRadialMenuChanged(obj: CanvasRadialMenuChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasToolbarChanged(obj: CanvasToolbarChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasZuiZoomLevelChanged(obj: CanvasZuiZoomLevelChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_ComponentCascadeMenusChanged(obj: ComponentCascadeMenusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CreateSolutionUndoRecordChanged(obj: CreateSolutionUndoRecordChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_FormattingChanged(obj: FormattingChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_LoadMechanismChanged(obj: LoadMechanismChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_LoadProtectionChanged(obj: LoadProtectionChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PanelDefaultFontChanged(obj: PanelDefaultFontChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PreviewBumpZBufferChanged(obj: PreviewBumpZBufferChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PreviewGumballsChanged(obj: PreviewGumballsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PreviewMeshEdgesChanged(obj: PreviewMeshEdgesChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PreviewPlaneRadiusChanged(obj: PreviewPlaneRadiusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PreviewPointStyleChanged(obj: PreviewPointStyleChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PruderyLevelChanged(obj: PruderyLevelChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_RibbonAllIconsChanged(obj: RibbonAllIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_RibbonDrawTabIconsChanged(obj: RibbonDrawTabIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_RibbonSeparatorsChanged(obj: RibbonSeparatorsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_RibbonVisibleChanged(obj: RibbonVisibleChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_TemplateFileChanged(obj: TemplateFileChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_TooltipWiggleRadiusChanged(obj: TooltipWiggleRadiusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_UiScaleChanged(obj: UiScaleChangedEventHandler) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def AuthorAddress() -> str: ...
    @property
    def AuthorCompany() -> str: ...
    @property
    def AuthorCopyright() -> str: ...
    @property
    def AuthorCopyrightFormatted() -> str: ...
    @property
    def AuthorDetails() -> IGH_Author: ...
    @property
    def AuthorEMail() -> str: ...
    @property
    def AuthorName() -> str: ...
    @property
    def AuthorPhone() -> str: ...
    @property
    def AuthorWebsite() -> str: ...
    @property
    def CanvasFancyWires() -> bool: ...
    @property
    def CanvasFullNames() -> bool: ...
    @property
    def CanvasMaxSearchResults() -> int: ...
    @property
    def CanvasObjectIcons() -> bool: ...
    @property
    def CanvasObsoleteTags() -> bool: ...
    @property
    def CanvasRadialMenu() -> bool: ...
    @property
    def CanvasSpaceIsRadialMenu() -> bool: ...
    @property
    def CanvasSpaceSearchRadialMessage() -> int: ...
    @property
    def CanvasToolbar() -> bool: ...
    @property
    def CanvasZuiZoomLevel() -> float: ...
    @property
    def CapsuleHighlight() -> bool: ...
    @property
    def CapsuleShine() -> bool: ...
    @property
    def ComponentCascadeMenus() -> bool: ...
    @property
    def CreateSolutionUndoRecord() -> bool: ...
    @property
    def FormatDecimalDigits() -> int: ...
    @property
    def FormatENotationDigits() -> int: ...
    @property
    def FormatENotationLowerLimit() -> int: ...
    @property
    def FormatENotationLowerThreshold() -> float: ...
    @property
    def FormatENotationUpperLimit() -> int: ...
    @property
    def FormatENotationUpperThreshold() -> float: ...
    @property
    def FormatMultiplesOfOne() -> bool: ...
    @property
    def FormatMultiplesOfPi() -> bool: ...
    @property
    def InvalidBakeAllow() -> bool: ...
    @property
    def InvalidBakeAsk() -> bool: ...
    @property
    def IsTemplateFile() -> bool: ...
    @property
    def PanelDefaultFontFamily() -> str: ...
    @property
    def PanelDefaultFontSize() -> float: ...
    @property
    def PreviewBumpZBuffer() -> bool: ...
    @property
    def PreviewGumballs() -> bool: ...
    @property
    def PreviewMeshEdges() -> bool: ...
    @property
    def PreviewPlaneRadius() -> float: ...
    @property
    def PreviewPointRadius() -> int: ...
    @property
    def PreviewPointStyle() -> PointStyle: ...
    @property
    def PreviewSelectionThickening() -> int: ...
    @property
    def PruderyLevel() -> GH_PruderyFilter: ...
    @property
    def RibbonDrawTabIcons() -> bool: ...
    @property
    def RibbonSeparators() -> bool: ...
    @property
    def RibbonShowObscure() -> bool: ...
    @property
    def RibbonVisible() -> bool: ...
    @property
    def ShowTutorials() -> bool: ...
    @property
    def TemplateFile() -> str: ...
    @property
    def TooltipVisible() -> bool: ...
    @property
    def TooltipWiggleRadius() -> int: ...
    @property
    def TrackFileStamps() -> bool: ...
    @property
    def TrackPluginLoading() -> bool: ...
    @property
    def TryDownloadMissingPlugins() -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    @staticmethod
    def GetLoadMechanism(pluginName: str) -> GH_LoadingDemand: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def IsLoadProtected(pluginName: str) -> bool: ...
    @overload
    @staticmethod
    def remove_AuthorAddressChanged(obj: AuthorAddressChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorCompanyChanged(obj: AuthorCompanyChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorCopyrightChanged(obj: AuthorCopyrightChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorEMailChanged(obj: AuthorEMailChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorNameChanged(obj: AuthorNameChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorPhoneChanged(obj: AuthorPhoneChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorWebsiteChanged(obj: AuthorWebsiteChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasFancyWiresChanged(obj: CanvasFancyWiresChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasFullNamesChanged(obj: CanvasFullNamesChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasObjectIconsChanged(obj: CanvasObjectIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasObsoleteTagsChanged(obj: CanvasObsoleteTagsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasRadialMenuChanged(obj: CanvasRadialMenuChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasToolbarChanged(obj: CanvasToolbarChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasZuiZoomLevelChanged(obj: CanvasZuiZoomLevelChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_ComponentCascadeMenusChanged(obj: ComponentCascadeMenusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CreateSolutionUndoRecordChanged(obj: CreateSolutionUndoRecordChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_FormattingChanged(obj: FormattingChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_LoadMechanismChanged(obj: LoadMechanismChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_LoadProtectionChanged(obj: LoadProtectionChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PanelDefaultFontChanged(obj: PanelDefaultFontChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PreviewBumpZBufferChanged(obj: PreviewBumpZBufferChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PreviewGumballsChanged(obj: PreviewGumballsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PreviewMeshEdgesChanged(obj: PreviewMeshEdgesChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PreviewPlaneRadiusChanged(obj: PreviewPlaneRadiusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PreviewPointStyleChanged(obj: PreviewPointStyleChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PruderyLevelChanged(obj: PruderyLevelChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_RibbonAllIconsChanged(obj: RibbonAllIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_RibbonDrawTabIconsChanged(obj: RibbonDrawTabIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_RibbonSeparatorsChanged(obj: RibbonSeparatorsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_RibbonVisibleChanged(obj: RibbonVisibleChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_TemplateFileChanged(obj: TemplateFileChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_TooltipWiggleRadiusChanged(obj: TooltipWiggleRadiusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_UiScaleChanged(obj: UiScaleChangedEventHandler) -> None: ...
    @AuthorAddress.setter
    def AuthorAddress(Value: str) -> None: ...
    @AuthorCompany.setter
    def AuthorCompany(Value: str) -> None: ...
    @AuthorCopyright.setter
    def AuthorCopyright(Value: str) -> None: ...
    @AuthorEMail.setter
    def AuthorEMail(Value: str) -> None: ...
    @AuthorName.setter
    def AuthorName(Value: str) -> None: ...
    @AuthorPhone.setter
    def AuthorPhone(Value: str) -> None: ...
    @AuthorWebsite.setter
    def AuthorWebsite(Value: str) -> None: ...
    @CanvasFancyWires.setter
    def CanvasFancyWires(Value: bool) -> None: ...
    @CanvasFullNames.setter
    def CanvasFullNames(Value: bool) -> None: ...
    @CanvasMaxSearchResults.setter
    def CanvasMaxSearchResults(Value: int) -> None: ...
    @CanvasObjectIcons.setter
    def CanvasObjectIcons(Value: bool) -> None: ...
    @CanvasObsoleteTags.setter
    def CanvasObsoleteTags(Value: bool) -> None: ...
    @CanvasRadialMenu.setter
    def CanvasRadialMenu(Value: bool) -> None: ...
    @CanvasSpaceIsRadialMenu.setter
    def CanvasSpaceIsRadialMenu(Value: bool) -> None: ...
    @CanvasSpaceSearchRadialMessage.setter
    def CanvasSpaceSearchRadialMessage(Value: int) -> None: ...
    @CanvasToolbar.setter
    def CanvasToolbar(Value: bool) -> None: ...
    @CanvasZuiZoomLevel.setter
    def CanvasZuiZoomLevel(Value: float) -> None: ...
    @CapsuleHighlight.setter
    def CapsuleHighlight(Value: bool) -> None: ...
    @CapsuleShine.setter
    def CapsuleShine(Value: bool) -> None: ...
    @ComponentCascadeMenus.setter
    def ComponentCascadeMenus(Value: bool) -> None: ...
    @CreateSolutionUndoRecord.setter
    def CreateSolutionUndoRecord(Value: bool) -> None: ...
    @FormatDecimalDigits.setter
    def FormatDecimalDigits(Value: int) -> None: ...
    @FormatENotationDigits.setter
    def FormatENotationDigits(Value: int) -> None: ...
    @FormatENotationLowerLimit.setter
    def FormatENotationLowerLimit(Value: int) -> None: ...
    @FormatENotationUpperLimit.setter
    def FormatENotationUpperLimit(Value: int) -> None: ...
    @FormatMultiplesOfOne.setter
    def FormatMultiplesOfOne(Value: bool) -> None: ...
    @FormatMultiplesOfPi.setter
    def FormatMultiplesOfPi(Value: bool) -> None: ...
    @InvalidBakeAllow.setter
    def InvalidBakeAllow(AutoPropertyValue: bool) -> None: ...
    @InvalidBakeAsk.setter
    def InvalidBakeAsk(AutoPropertyValue: bool) -> None: ...
    @PanelDefaultFontFamily.setter
    def PanelDefaultFontFamily(Value: str) -> None: ...
    @PanelDefaultFontSize.setter
    def PanelDefaultFontSize(Value: float) -> None: ...
    @PreviewBumpZBuffer.setter
    def PreviewBumpZBuffer(Value: bool) -> None: ...
    @PreviewGumballs.setter
    def PreviewGumballs(Value: bool) -> None: ...
    @PreviewMeshEdges.setter
    def PreviewMeshEdges(Value: bool) -> None: ...
    @PreviewPlaneRadius.setter
    def PreviewPlaneRadius(Value: float) -> None: ...
    @PreviewPointStyle.setter
    def PreviewPointStyle(Value: PointStyle) -> None: ...
    @PreviewSelectionThickening.setter
    def PreviewSelectionThickening(Value: int) -> None: ...
    @PruderyLevel.setter
    def PruderyLevel(Value: GH_PruderyFilter) -> None: ...
    @RibbonDrawTabIcons.setter
    def RibbonDrawTabIcons(Value: bool) -> None: ...
    @RibbonSeparators.setter
    def RibbonSeparators(Value: bool) -> None: ...
    @RibbonShowObscure.setter
    def RibbonShowObscure(Value: bool) -> None: ...
    @RibbonVisible.setter
    def RibbonVisible(Value: bool) -> None: ...
    @ShowTutorials.setter
    def ShowTutorials(Value: bool) -> None: ...
    @TemplateFile.setter
    def TemplateFile(Value: str) -> None: ...
    @TooltipVisible.setter
    def TooltipVisible(Value: bool) -> None: ...
    @TooltipWiggleRadius.setter
    def TooltipWiggleRadius(Value: int) -> None: ...
    @TrackFileStamps.setter
    def TrackFileStamps(value: bool) -> None: ...
    @TrackPluginLoading.setter
    def TrackPluginLoading(value: bool) -> None: ...
    @TryDownloadMissingPlugins.setter
    def TryDownloadMissingPlugins(value: bool) -> None: ...
    @overload
    @staticmethod
    def SetLoadMechanism(pluginName: str, mechanism: GH_LoadingDemand) -> None: ...
    @overload
    @staticmethod
    def SetLoadProtected(pluginName: str, loadProtect: bool) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def UserOkayWithBakingInvalidObject(objectType: str) -> bool: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class ComponentCascadeMenusChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class CreateSolutionUndoRecordChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...






from System.Windows.Forms import Control
from Eto.Forms import Control
from System.Windows.Forms import Form
from Eto.Forms import Window
from System.Windows.Forms import IWin32Window
from Eto.Drawing import Rectangle
from System.Drawing import Rectangle
from Eto.Drawing import Size
from System.Drawing import Size
from Eto.Drawing import SizeF
from System.Drawing import SizeF
from Eto.Drawing import Point
from System.Drawing import Point
from Eto.Drawing import PointF
from System.Drawing import PointF
from System.Drawing import Color
from Eto.Drawing import Color
from System.Drawing import Bitmap
from Eto.Drawing import Bitmap
from Eto.Drawing import Font
from System.Drawing import Font
class EtoExtensions:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def ToEto(control: Control) -> Control: ...
    @overload
    @staticmethod
    def ToEto(control: Form) -> Window: ...
    @overload
    @staticmethod
    def ToEto(size: SizeF) -> SizeF: ...
    @overload
    @staticmethod
    def ToEto(size: Size) -> Size: ...
    @overload
    @staticmethod
    def ToEto(point: PointF) -> PointF: ...
    @overload
    @staticmethod
    def ToEto(point: Point) -> Point: ...
    @overload
    @staticmethod
    def ToEto(font: Font) -> Font: ...
    @overload
    @staticmethod
    def ToEto(sdcolor: Color) -> Color: ...
    @overload
    @staticmethod
    def ToEtoWindow(control: IWin32Window) -> Window: ...
    @overload
    @staticmethod
    def ToSD(color: Color) -> Color: ...
    @overload
    @staticmethod
    def ToSD(point: PointF) -> PointF: ...
    @overload
    @staticmethod
    def ToSD(point: Point) -> Point: ...
    @overload
    @staticmethod
    def ToSD(size: SizeF) -> SizeF: ...
    @overload
    @staticmethod
    def ToSD(size: Size) -> Size: ...
    @overload
    @staticmethod
    def ToSD(rectangle: Rectangle) -> Rectangle: ...
    @overload
    @staticmethod
    def ToSD(font: Font) -> Font: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def ToSwf(control: Control, attach: bool) -> Control: ...
    @overload
    @staticmethod
    def ToWin32Window(window: Window) -> IWin32Window: ...


from System import IntPtr
class EtoWin32Window:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Handle(self) -> IntPtr: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


from System.Collections.Generic import List
class Folders:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def AppDataFolder() -> str: ...
    @property
    def AssemblyFolders() -> List: ...
    @property
    def AutoSaveFolder() -> str: ...
    @property
    def ClusterFolders() -> List: ...
    @property
    def CursorFolder() -> str: ...
    @property
    def CustomAssemblyFolders() -> List: ...
    @property
    def DefaultAssemblyFolder() -> str: ...
    @property
    def DefaultAssemblyFolderVersion6() -> str: ...
    @property
    def DefaultClusterFolder() -> str: ...
    @property
    def DefaultTemplateFolder() -> str: ...
    @property
    def DefaultUserObjectFolder() -> str: ...
    @property
    def Desktop() -> str: ...
    @property
    def DownloaderApplication() -> str: ...
    @property
    def FileViewerApplication() -> str: ...
    @property
    def IconFolder() -> str: ...
    @property
    def ImageStitcherApplication() -> str: ...
    @property
    def PluginFolder() -> str: ...
    @property
    def SDKDownloaderApplication() -> str: ...
    @property
    def SettingsFolder() -> str: ...
    @property
    def TemplateFolders() -> List: ...
    @property
    def ToolsFolder() -> str: ...
    @property
    def TutorialFiles() -> Iterable[str]: ...
    @property
    def TutorialFolder() -> str: ...
    @property
    def UserObjectFolders() -> List: ...
    @property
    def VersionHistoryFile() -> str: ...
    @property
    def VersionHistoryUrl() -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @CustomAssemblyFolders.setter
    def CustomAssemblyFolders(Value: List) -> None: ...
    @overload
    @staticmethod
    def ShowFolderInExplorer(folder: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class FormattingChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from GH_IO.Types import GH_Version
from .Kernel import GH_SettingsServer
class Global_Proc:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Settings() -> GH_SettingsServer: ...
    @property
    def Version() -> GH_Version: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def UiAdjust(value: int) -> int: ...
    @overload
    @staticmethod
    def UiAdjust(value: float) -> float: ...


from System.Collections.Generic import List
from System import Guid
from .GUI.RemotePanel import RemoteControlPanel
from .GUI import GH_DocumentEditor
from Eto.Forms import Window
from .GUI import GH_CursorServer
from .Kernel import GH_ComponentServer
from .Kernel import GH_MarkovChain
from .Kernel import GH_DocumentServer
from .Kernel import GH_DocumentAssociations
from .GUI.MRU import GH_MRU_Server
from System.Drawing import Bitmap
from .GUI.Canvas import GH_Canvas
from .Kernel import GH_Document
from Rhino import RhinoDoc
from .Kernel import GH_SettingsServer
class Instances:
    LoadOneByOne: bool
    @overload
    @staticmethod
    def add_CanvasCreated(obj: CanvasCreatedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasDestroyed(obj: CanvasDestroyedEventHandler) -> None: ...
    @overload
    @staticmethod
    def DocumentEditorFadeIn() -> None: ...
    @overload
    @staticmethod
    def DocumentEditorFadeOut() -> None: ...
    @overload
    @staticmethod
    def EnforceInvariantCulture() -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def ActiveCanvas() -> GH_Canvas: ...
    @property
    def ActiveDocument() -> GH_Document: ...
    @property
    def ActiveRhinoDoc() -> RhinoDoc: ...
    @property
    def AutoHideBanner() -> bool: ...
    @property
    def AutoShowBanner() -> bool: ...
    @property
    def BakeIcon24() -> Bitmap: ...
    @property
    def ComponentServer() -> GH_ComponentServer: ...
    @property
    def CursorServer() -> GH_CursorServer: ...
    @property
    def DocumentAssociationServer() -> GH_DocumentAssociations: ...
    @property
    def DocumentEditor() -> GH_DocumentEditor: ...
    @property
    def DocumentServer() -> GH_DocumentServer: ...
    @property
    def EtoDocumentEditor() -> Window: ...
    @property
    def GrasshopperPluginId() -> Guid: ...
    @property
    def IsComponentServer() -> bool: ...
    @property
    def IsCursorServer() -> bool: ...
    @property
    def IsDocumentAssociationServer() -> bool: ...
    @property
    def IsDocumentEditor() -> bool: ...
    @property
    def IsDocumentEditorOnTopOfViewports() -> bool: ...
    @property
    def IsDocumentServer() -> bool: ...
    @property
    def IsMarkovChain() -> bool: ...
    @property
    def IsMruServer() -> bool: ...
    @property
    def IsRemotePanelVisible() -> bool: ...
    @property
    def MarkovChain() -> GH_MarkovChain: ...
    @property
    def MruServer() -> GH_MRU_Server: ...
    @property
    def RcpPanel() -> RemoteControlPanel: ...
    @property
    def RunningHeadless() -> bool: ...
    @property
    def Settings() -> GH_SettingsServer: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def HideRemotePanel() -> bool: ...
    @overload
    @staticmethod
    def Interop() -> object: ...
    @overload
    @staticmethod
    def InvalidateCanvas() -> None: ...
    @overload
    @staticmethod
    def MyTypes() -> Iterable[type]: ...
    @overload
    @staticmethod
    def RedrawAll() -> None: ...
    @overload
    @staticmethod
    def RedrawCanvas() -> None: ...
    @overload
    @staticmethod
    def ReloadMemoryAssemblies() -> List: ...
    @overload
    @staticmethod
    def remove_CanvasCreated(obj: CanvasCreatedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasDestroyed(obj: CanvasDestroyedEventHandler) -> None: ...
    @AutoHideBanner.setter
    def AutoHideBanner(AutoPropertyValue: bool) -> None: ...
    @AutoShowBanner.setter
    def AutoShowBanner(AutoPropertyValue: bool) -> None: ...
    @overload
    @staticmethod
    def ShowRemotePanel() -> bool: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def UnloadAllObjects() -> None: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class LoadMechanismChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, pluginName: str, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, pluginName: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class LoadProtectionChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, pluginName: str, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, pluginName: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class PanelDefaultFontChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class PreviewBumpZBufferChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class PreviewGumballsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class PreviewMeshEdgesChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class PreviewPlaneRadiusChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class PreviewPointStyleChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class PruderyLevelChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class RibbonAllIconsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class RibbonDrawTabIconsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class RibbonSeparatorsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class RibbonVisibleChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class TemplateFileChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class TooltipWiggleRadiusChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import Guid
from System import Exception
class Tracing:
    @overload
    @staticmethod
    def Assert(assert_id: Guid) -> None: ...
    @overload
    @staticmethod
    def Assert(assert_id: Guid, message: str) -> None: ...
    @overload
    @staticmethod
    def Assert(assert_id: Guid, exception: Exception) -> None: ...
    @overload
    @staticmethod
    def Assert(assert_id: Guid, message: str, exception: Exception) -> None: ...
    @overload
    @staticmethod
    def DebugLogAddEntry(message: str) -> None: ...
    @overload
    @staticmethod
    def DebugLogBeginBlock(name: str) -> None: ...
    @overload
    @staticmethod
    def DebugLogEndBlock() -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class UiScaleChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class Utility:
    @overload
    @staticmethod
    def DocumentAngleTolerance() -> float: ...
    @overload
    @staticmethod
    def DocumentTolerance() -> float: ...
    @overload
    @staticmethod
    def DocumentUnits() -> str: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @staticmethod
    def FixNewlines(text: str) -> str: ...
    @overload
    @staticmethod
    def FixNewlines(text: str, newLinePattern: str) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def InvokeDownloader(sourceUri: str, targetUri: str, silent: bool) -> None: ...
    @overload
    @staticmethod
    def InvokeGetter(target: object, property: str) -> object: ...
    @overload
    @staticmethod
    def InvokeGetterSafe(target: object, property: str) -> object: ...
    @overload
    @staticmethod
    def InvokeMethod(target: object, method: str) -> object: ...
    @overload
    @staticmethod
    def InvokeMethod(target: object, method: str, params: Iterable[object]) -> object: ...
    @overload
    @staticmethod
    def InvokeMethodSafe(target: object, method: str) -> object: ...
    @overload
    @staticmethod
    def InvokeMethodSafe(target: object, method: str, params: Iterable[object]) -> object: ...
    @overload
    @staticmethod
    def InvokeSetter(target: object, property: str, value: object) -> None: ...
    @overload
    @staticmethod
    def InvokeSetterSafe(target: object, property: str, value: object) -> None: ...
    @overload
    @staticmethod
    def LikeOperator(text: str, pattern: str) -> bool: ...
    @overload
    @staticmethod
    def SetDefaultTolerances(absoluteTolerance: float, angleToleranceDegrees: float) -> None: ...
    @overload
    @staticmethod
    def SetDefaultUnits(modelUnits: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


from GH_IO.Types import GH_Version
class Versioning:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def BuildDate() -> str: ...
    @property
    def Version() -> GH_Version: ...
    @property
    def VersionString() -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def SyncVersionHistoryData() -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def VersionHistoryData() -> Iterable[str]: ...

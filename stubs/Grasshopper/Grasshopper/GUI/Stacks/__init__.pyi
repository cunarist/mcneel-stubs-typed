from typing import overload, Any, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum



class GH_Interpolation(Enum):
    linear = 1
    cubic = 2


from System.Drawing import Rectangle
class GH_Motion:
    @overload
    def __init__(self, rec_0: Rectangle, rec_1: Rectangle, duration: int): ...
    @overload
    def __init__(self, rec_0: Rectangle, rec_1: Rectangle, time_0: int, time_1: int): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def CurrentBox(self) -> Rectangle: ...
    @property
    def FinalBox(self) -> Rectangle: ...
    @property
    def InitialBox(self) -> Rectangle: ...
    @property
    def InMotion(self) -> bool: ...
    @property
    def Interpolation(self) -> GH_Interpolation: ...
    @property
    def Parameter(self) -> float: ...
    @property
    def t0(self) -> int: ...
    @property
    def t1(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ResizeContainer(self, region: Rectangle, fit_horizontal: bool, fit_vertical: bool) -> None: ...
    @Interpolation.setter
    def Interpolation(self, Value: GH_Interpolation) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System.Windows.Forms import Control
from System.Drawing import Rectangle
class GH_Stack:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, update_interval: int): ...
    @overload
    def __init__(self, update_interval: int, animation_length: int): ...
    @overload
    def __init__(self, update_interval: int, animation_length: int, animation_interpolation: GH_Interpolation): ...
    @overload
    def AddElement(self, rec: Rectangle) -> None: ...
    @overload
    def AddElement(self, rec_0: Rectangle, rec_1: Rectangle) -> None: ...
    @overload
    def AddElement(self, rec_0: Rectangle, rec_1: Rectangle, duration_override: int) -> None: ...
    @overload
    def Clear(self) -> None: ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @property
    def Duration(self) -> int: ...
    @property
    def Element_Final(self) -> Sequence[Rectangle]: ...
    @property
    def Element_Initial(self) -> Sequence[Rectangle]: ...
    @property
    def Element_Intermediate(self) -> Sequence[Rectangle]: ...
    @property
    def InMotion(self) -> bool: ...
    @property
    def InMotion(self) -> Sequence[bool]: ...
    @property
    def Interpolation(self) -> GH_Interpolation: ...
    @property
    def UpdateInterval(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def InsertElement(self, index: int, rec: Rectangle) -> None: ...
    @overload
    def InsertElement(self, index: int, rec_0: Rectangle, rec_1: Rectangle) -> None: ...
    @overload
    def InsertElement(self, index: int, rec_0: Rectangle, rec_1: Rectangle, duration_override: int) -> None: ...
    @overload
    def RemoveElement(self, index: int) -> None: ...
    @overload
    def ResizeContainer(self, region: Rectangle, fit_horizontal: bool, fit_vertical: bool) -> None: ...
    @Duration.setter
    def Duration(self, Value: int) -> None: ...
    @Interpolation.setter
    def Interpolation(self, Value: GH_Interpolation) -> None: ...
    @UpdateInterval.setter
    def UpdateInterval(self, Value: int) -> None: ...
    @overload
    def SetNewTarget(self, index: int, element: Rectangle) -> None: ...
    @overload
    def SetNewTarget(self, index: int, element: Rectangle, bAnimate: bool) -> None: ...
    @overload
    def SetOwner(self, ui_thread_owner: Control, ui_thread_update: GH_StackEventDelegate) -> None: ...
    @overload
    def SetOwner(self, ui_thread_owner: Control, ui_thread_update: GH_StackEventDelegate, ui_thread_complete: GH_StackEventDelegate) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import AsyncCallback
from System import IAsyncResult
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Reflection import MethodInfo
class GH_StackEventDelegate:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, sender: GH_Stack, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, sender: GH_Stack) -> None: ...
    @overload
    def ToString(self) -> str: ...

from typing import overload, Any, Iterable, Iterator, Sequence, MutableSequence, Callable
from enum import Enum

from Grasshopper.GUI import GH_CanvasMouseEvent
from Grasshopper.GUI import GH_TooltipDisplayEventArgs
from Grasshopper.GUI.Canvas import GH_Canvas
from Grasshopper.GUI.Canvas import GH_ObjectResponse
from Grasshopper.Kernel import IGH_Attributes
from Grasshopper.Kernel import IGH_ObjectProxy
from Grasshopper.Kernel import IGH_Param
from System import Guid
from System.Drawing import Point
from System.Drawing import PointF
from System.Windows.Forms import KeyEventArgs




class GH_AbstractInteraction:
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_CycleInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, parentCanvas: GH_Canvas): ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_DragInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, canvas: GH_Canvas, e: GH_CanvasMouseEvent): ...
    @overload
    def AddAttribute(self, attribute: IGH_Attributes) -> None: ...
    @overload
    def AddSnapAttributes(self, attribute: IGH_Attributes) -> None: ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def AttributeCount(self) -> int: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_DumpInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, parent: GH_Canvas): ...
    @overload
    def __init__(self, parent: GH_Canvas, objectId: Guid): ...
    @overload
    def AppendProxy(self, proxy: IGH_ObjectProxy) -> None: ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def IsAggregating(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_PanInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, iParent: GH_Canvas, mEvent: GH_CanvasMouseEvent): ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_RadialMenuInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, canvas: GH_Canvas, e: GH_CanvasMouseEvent): ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_RewireInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, iParent: GH_Canvas, mEvent: GH_CanvasMouseEvent, Source: IGH_Param): ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_SketchInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, iParent: GH_Canvas): ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_SplitInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, canvas: GH_Canvas, e: GH_CanvasMouseEvent): ...
    @overload
    def AddAttribute(self, Attribute: IGH_Attributes) -> None: ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_WindowSelectInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, canvas: GH_Canvas, mEvent: GH_CanvasMouseEvent): ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_WireInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, iParent: GH_Canvas, mEvent: GH_CanvasMouseEvent, Source: IGH_Param): ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GH_ZoomInteraction(GH_AbstractInteraction):
    @overload
    def __init__(self, iParent: GH_Canvas, mEvent: GH_CanvasMouseEvent): ...
    @overload
    def Destroy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Canvas(self) -> GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: GH_Canvas, e: KeyEventArgs) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: GH_Canvas, e: GH_CanvasMouseEvent) -> GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: PointF, e: GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def ToString(self) -> str: ...


class IGH_MouseInteraction:
    @overload
    def Destroy(self) -> None: ...
    @property
    def CanvasPointDown(self) -> PointF: ...
    @property
    def ControlPointDown(self) -> Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def Owner(self) -> GH_Canvas: ...

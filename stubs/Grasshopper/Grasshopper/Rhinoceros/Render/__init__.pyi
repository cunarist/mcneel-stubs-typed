from typing import overload, Any, Iterable, Iterator, Sequence, MutableSequence, Callable
from enum import Enum

from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelMeshingParameters
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelValue
from Grasshopper.Rhinoceros import T
from Rhino.Display import ColorRGBA
from Rhino.DocObjects import Material
from Rhino.DocObjects import ObjectMaterialSource
from Rhino.Render import RenderEnvironment
from Rhino.Render import RenderMaterial
from Rhino.Render import RenderTexture
from System import Guid

from . import Params

__all__ = ['Params']



class Attributes:
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def RenderEnvironment(self) -> RenderEnvironment: ...
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @RenderEnvironment.setter
    def RenderEnvironment(self, value: RenderEnvironment) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Enabled(self) -> bool | None: ...
    @property
    def Environment(self) -> ModelRenderEnvironment: ...
    @property
    def EnvironmentOverride(self) -> bool | None: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Enabled.setter
    def Enabled(self, AutoPropertyValue: bool | None) -> None: ...
    @Environment.setter
    def Environment(self, AutoPropertyValue: ModelRenderEnvironment) -> None: ...
    @EnvironmentOverride.setter
    def EnvironmentOverride(self, AutoPropertyValue: bool | None) -> None: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Altitude(self) -> float | None: ...
    @property
    def Azimuth(self) -> float | None: ...
    @property
    def DateTime(self) -> DateTime | None: ...
    @property
    def DaylightSavingEnabled(self) -> bool | None: ...
    @property
    def DaylightSavingMinutes(self) -> int | None: ...
    @property
    def Direction(self) -> Vector3d | None: ...
    @property
    def Enabled(self) -> bool | None: ...
    @property
    def Intensity(self) -> float | None: ...
    @property
    def Latitude(self) -> float | None: ...
    @property
    def Longitude(self) -> float | None: ...
    @property
    def Manual(self) -> bool | None: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def North(self) -> float | None: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TimeZone(self) -> float | None: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Altitude.setter
    def Altitude(self, value: float | None) -> None: ...
    @Azimuth.setter
    def Azimuth(self, value: float | None) -> None: ...
    @DateTime.setter
    def DateTime(self, AutoPropertyValue: DateTime | None) -> None: ...
    @DaylightSavingEnabled.setter
    def DaylightSavingEnabled(self, AutoPropertyValue: bool | None) -> None: ...
    @DaylightSavingMinutes.setter
    def DaylightSavingMinutes(self, AutoPropertyValue: int | None) -> None: ...
    @Direction.setter
    def Direction(self, value: Vector3d | None) -> None: ...
    @Enabled.setter
    def Enabled(self, AutoPropertyValue: bool | None) -> None: ...
    @Intensity.setter
    def Intensity(self, AutoPropertyValue: float | None) -> None: ...
    @Latitude.setter
    def Latitude(self, value: float | None) -> None: ...
    @Longitude.setter
    def Longitude(self, value: float | None) -> None: ...
    @Manual.setter
    def Manual(self, value: bool | None) -> None: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @North.setter
    def North(self, value: float | None) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @TimeZone.setter
    def TimeZone(self, AutoPropertyValue: float | None) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def RenderTexture(self) -> RenderTexture: ...
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @RenderTexture.setter
    def RenderTexture(self, value: RenderTexture) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


class Attributes:
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: Attributes) -> bool: ...
    @property
    def CastsShadows(self) -> bool | None: ...
    @property
    def Material(self) -> Value | None: ...
    @property
    def MeshingParameters(self) -> ModelMeshingParameters: ...
    @property
    def ReceivesShadows(self) -> bool | None: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @CastsShadows.setter
    def CastsShadows(self, AutoPropertyValue: bool | None) -> None: ...
    @Material.setter
    def Material(self, AutoPropertyValue: Value | None) -> None: ...
    @MeshingParameters.setter
    def MeshingParameters(self, AutoPropertyValue: ModelMeshingParameters) -> None: ...
    @ReceivesShadows.setter
    def ReceivesShadows(self, AutoPropertyValue: bool | None) -> None: ...
    @overload
    def ToString(self) -> str: ...


from Grasshopper.Rhinoceros import ModelContent
class ModelRenderContent(ModelContent):
    @overload
    def CastTo(self) -> tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Id(self) -> Guid | None: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelRenderEnvironment(ModelRenderContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, renderEnvironment: RenderEnvironment): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelRenderEnvironment: ...
    @overload
    def CastTo(self) -> tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Id(self) -> Guid | None: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(renderEnvironment: RenderEnvironment) -> ModelRenderEnvironment: ...
    @overload
    def op_Implicit(rgba: ColorRGBA) -> ModelRenderEnvironment: ...
    @overload
    def op_Implicit(path: str) -> ModelRenderEnvironment: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelRenderEnvironment: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelRenderMaterial(ModelRenderContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, material: Material): ...
    @overload
    def __init__(self, renderMaterial: RenderMaterial): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelRenderMaterial: ...
    @overload
    def CastTo(self) -> tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Id(self) -> Guid | None: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @property
    @classmethod
    def Unset(cls) -> ModelRenderMaterial: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelRenderMaterial: ...
    @overload
    def op_Implicit(path: str) -> ModelRenderMaterial: ...
    @overload
    def op_Implicit(rgba: ColorRGBA) -> ModelRenderMaterial: ...
    @overload
    def op_Implicit(material: Material) -> ModelRenderMaterial: ...
    @overload
    def op_Implicit(renderMaterial: RenderMaterial) -> ModelRenderMaterial: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Grasshopper.Rhinoceros import ModelContent
class ModelRenderSkylight(ModelContent):
    @overload
    def __init__(self): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelRenderSkylight: ...
    @overload
    def CastTo(self) -> tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Enabled(self) -> bool | None: ...
    @property
    def Environment(self) -> ModelRenderEnvironment: ...
    @property
    def EnvironmentOverride(self) -> bool | None: ...
    @property
    def Id(self) -> Guid | None: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelRenderSkylight: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Grasshopper.Rhinoceros import ModelContent
class ModelRenderSun(ModelContent):
    @overload
    def __init__(self): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelRenderSun: ...
    @overload
    def CastTo(self) -> tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Altitude(self) -> float | None: ...
    @property
    def Azimuth(self) -> float | None: ...
    @property
    def DateTime(self) -> DateTime | None: ...
    @property
    def DaylightSavingEnabled(self) -> bool | None: ...
    @property
    def DaylightSavingMinutes(self) -> int | None: ...
    @property
    def Direction(self) -> Vector3d | None: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Enabled(self) -> bool | None: ...
    @property
    def Id(self) -> Guid | None: ...
    @property
    def Intensity(self) -> float | None: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Latitude(self) -> float | None: ...
    @property
    def Longitude(self) -> float | None: ...
    @property
    def Manual(self) -> bool | None: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def North(self) -> float | None: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TimeZone(self) -> float | None: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelRenderSun: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class ModelRenderTexture(ModelRenderContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, renderTexture: RenderTexture): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelRenderTexture: ...
    @overload
    def CastTo(self) -> tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Id(self) -> Guid | None: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(renderTexture: RenderTexture) -> ModelRenderTexture: ...
    @overload
    def op_Implicit(rgba: ColorRGBA) -> ModelRenderTexture: ...
    @overload
    def op_Implicit(path: str) -> ModelRenderTexture: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelRenderTexture: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Grasshopper.Rhinoceros import ModelValue
class ObjectRender(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ObjectRender: ...
    @overload
    def CastTo(self) -> tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @property
    def CastsShadows(self) -> bool | None: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Material(self) -> Value | None: ...
    @property
    def MeshingParameters(self) -> ModelMeshingParameters: ...
    @property
    def ReceivesShadows(self) -> bool | None: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ObjectRender: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Grasshopper.Rhinoceros import ModelValue
class ObjectRenderMaterial(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, value: Value): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ObjectRenderMaterial: ...
    @overload
    def CastTo(self) -> tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Material(self) -> ModelRenderMaterial: ...
    @property
    def Source(self) -> ObjectMaterialSource: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(data: ObjectRenderMaterial) -> Value: ...
    @overload
    def op_Implicit(data: Value) -> ObjectRenderMaterial: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


class Value:
    @overload
    def __init__(self, source: ObjectMaterialSource): ...
    @overload
    def __init__(self, value: ModelRenderMaterial): ...
    @overload
    def __init__(self, source: ObjectMaterialSource, value: ModelRenderMaterial): ...
    @overload
    def CompareTo(self, obj: object) -> int: ...
    @overload
    def CompareTo(self, other: Value) -> int: ...
    @overload
    def Deconstruct(self) -> tuple[ObjectMaterialSource, ModelRenderMaterial]: ...
    @overload
    def Equals(self, other: Value) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    @classmethod
    def ByLayer(cls) -> Value: ...
    @property
    @classmethod
    def ByParent(cls) -> Value: ...
    @property
    @classmethod
    def Default(cls) -> Value: ...
    @property
    def Material(self) -> ModelRenderMaterial: ...
    @property
    def Source(self) -> ObjectMaterialSource: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(color: ModelRenderMaterial) -> Value: ...
    @overload
    def op_Implicit(source: ObjectMaterialSource) -> Value: ...
    @overload
    def op_Implicit(value: Value) -> ModelRenderMaterial: ...
    @overload
    def op_Implicit(value: Value) -> ObjectMaterialSource: ...
    @overload
    def ToString(self) -> str: ...

from typing import overload, Any, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum

import Params

__all__ = ['Params']


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Elevation(self) -> Nullable: ...
    @property
    def ElevationCoordinateSystem(self) -> Nullable: ...
    @property
    def Latitude(self) -> Nullable: ...
    @property
    def Longitude(self) -> Nullable: ...
    @property
    def ModelCompass(self) -> Nullable: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Elevation.setter
    def Elevation(self, AutoPropertyValue: Nullable) -> None: ...
    @ElevationCoordinateSystem.setter
    def ElevationCoordinateSystem(self, AutoPropertyValue: Nullable) -> None: ...
    @Latitude.setter
    def Latitude(self, value: Nullable) -> None: ...
    @Longitude.setter
    def Longitude(self, value: Nullable) -> None: ...
    @ModelCompass.setter
    def ModelCompass(self, AutoPropertyValue: Nullable) -> None: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def FilePath(self) -> str: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Objects(self) -> IReadOnlyList: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def Units(self) -> Nullable: ...
    @property
    def UpdateType(self) -> Nullable: ...
    @property
    def Url(self) -> str: ...
    @property
    def UrlDescription(self) -> str: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @FilePath.setter
    def FilePath(self, AutoPropertyValue: str) -> None: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Objects.setter
    def Objects(self, AutoPropertyValue: IReadOnlyList) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @Units.setter
    def Units(self, AutoPropertyValue: Nullable) -> None: ...
    @UpdateType.setter
    def UpdateType(self, AutoPropertyValue: Nullable) -> None: ...
    @Url.setter
    def Url(self, AutoPropertyValue: str) -> None: ...
    @UrlDescription.setter
    def UrlDescription(self, AutoPropertyValue: str) -> None: ...
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def DisplayColor(self) -> Nullable: ...
    @property
    def DraftingColor(self) -> Nullable: ...
    @property
    def Hidden(self) -> Nullable: ...
    @property
    def HiddenOnModel(self) -> Nullable: ...
    @property
    def HiddenOnNewDetail(self) -> Nullable: ...
    @property
    def Linetype(self) -> ModelLinetype: ...
    @property
    def LineWeight(self) -> Nullable: ...
    @property
    def Locked(self) -> Nullable: ...
    @property
    def Material(self) -> ModelRenderMaterial: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @DisplayColor.setter
    def DisplayColor(self, AutoPropertyValue: Nullable) -> None: ...
    @DraftingColor.setter
    def DraftingColor(self, AutoPropertyValue: Nullable) -> None: ...
    @Hidden.setter
    def Hidden(self, AutoPropertyValue: Nullable) -> None: ...
    @HiddenOnModel.setter
    def HiddenOnModel(self, AutoPropertyValue: Nullable) -> None: ...
    @HiddenOnNewDetail.setter
    def HiddenOnNewDetail(self, AutoPropertyValue: Nullable) -> None: ...
    @Linetype.setter
    def Linetype(self, AutoPropertyValue: ModelLinetype) -> None: ...
    @LineWeight.setter
    def LineWeight(self, AutoPropertyValue: Nullable) -> None: ...
    @Locked.setter
    def Locked(self, AutoPropertyValue: Nullable) -> None: ...
    @Material.setter
    def Material(self, AutoPropertyValue: ModelRenderMaterial) -> None: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Display(self) -> ObjectDisplay: ...
    @property
    def Drafting(self) -> ObjectDrafting: ...
    @property
    def Frame(self) -> Nullable: ...
    @property
    def Layer(self) -> ModelLayer: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Render(self) -> ObjectRender: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def Url(self) -> str: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @property
    def Visibility(self) -> ObjectVisibility: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Display.setter
    def Display(self, AutoPropertyValue: ObjectDisplay) -> None: ...
    @Drafting.setter
    def Drafting(self, AutoPropertyValue: ObjectDrafting) -> None: ...
    @Frame.setter
    def Frame(self, AutoPropertyValue: Nullable) -> None: ...
    @Layer.setter
    def Layer(self, AutoPropertyValue: ModelLayer) -> None: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Render.setter
    def Render(self, AutoPropertyValue: ObjectRender) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @Url.setter
    def Url(self, AutoPropertyValue: str) -> None: ...
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @Visibility.setter
    def Visibility(self, AutoPropertyValue: ObjectVisibility) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import EarthAnchorPoint
from System import Nullable
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelContent
class ModelEarthAnchorPoint(ModelContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, anchorPoint: EarthAnchorPoint): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelEarthAnchorPoint: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Elevation(self) -> Nullable: ...
    @property
    def ElevationCoordinateSystem(self) -> Nullable: ...
    @property
    def Id(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Latitude(self) -> Nullable: ...
    @property
    def Longitude(self) -> Nullable: ...
    @property
    def ModelCompass(self) -> Nullable: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def SphereUParameter(self) -> Nullable: ...
    @property
    def SphereVParameter(self) -> Nullable: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(anchorPoint: EarthAnchorPoint) -> ModelEarthAnchorPoint: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelEarthAnchorPoint: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import InstanceDefinition
from System import Guid
from Rhino.Geometry import Transform
from Rhino.Geometry import BoundingBox
from System import Nullable
from Rhino import RhinoDoc
from Rhino.DocObjects import ObjectAttributes
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelComponentContent
class ModelInstanceDefinition(ModelComponentContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, block: InstanceDefinition): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    def BakeGeometry(self, doc: RhinoDoc, att: ObjectAttributes, obj_guid: Guid) -> Tuple[bool, Guid]: ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelInstanceDefinition: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def BoundingBox(self) -> BoundingBox: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def FilePath(self) -> str: ...
    @property
    def Id(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Objects(self) -> IReadOnlyList: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @property
    @classmethod
    def Unset(cls) -> ModelInstanceDefinition: ...
    @property
    def UpdateType(self) -> Nullable: ...
    @property
    def Url(self) -> str: ...
    @property
    def UrlDescription(self) -> str: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetBoundingBox(self, xform: Transform) -> BoundingBox: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(instanceDefinition: InstanceDefinition) -> ModelInstanceDefinition: ...
    @overload
    def op_Implicit(path: str) -> ModelInstanceDefinition: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelInstanceDefinition: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import Layer
from System import Guid
from System import Nullable
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import T
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelComponentContent
class ModelLayer(ModelComponentContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, layer: Layer): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelLayer: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def DisplayColor(self) -> Nullable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def DraftingColor(self) -> Nullable: ...
    @property
    def Hidden(self) -> Nullable: ...
    @property
    def HiddenOnModel(self) -> Nullable: ...
    @property
    def HiddenOnNewDetail(self) -> Nullable: ...
    @property
    def Id(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Linetype(self) -> ModelLinetype: ...
    @property
    def LineWeight(self) -> Nullable: ...
    @property
    def Locked(self) -> Nullable: ...
    @property
    def Material(self) -> ModelRenderMaterial: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @property
    @classmethod
    def Unset(cls) -> ModelLayer: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(layer: Layer) -> ModelLayer: ...
    @overload
    def op_Implicit(path: str) -> ModelLayer: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelLayer: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import RhinoObject
from Rhino import RhinoDoc
from Rhino.DocObjects import ObjectAttributes
from Rhino.Geometry import GeometryBase
from System import Guid
from Rhino.DocObjects import ObjectType
from System import Nullable
from Rhino.Geometry import Transform
from Rhino.Geometry import BoundingBox
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelComponentContent
class ModelObject(ModelComponentContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, rhinoObject: RhinoObject): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    def __init__(self, document: RhinoDoc, objectAttributes: ObjectAttributes): ...
    @overload
    def __init__(self, document: RhinoDoc, objectAttributes: ObjectAttributes, geometry: GeometryBase): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelObject: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @property
    def BoundingBox(self) -> BoundingBox: ...
    @property
    def Display(self) -> ObjectDisplay: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Drafting(self) -> ObjectDrafting: ...
    @property
    def Frame(self) -> Nullable: ...
    @property
    def Id(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Layer(self) -> ModelLayer: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    @classmethod
    def ObjectTypeMask(cls) -> ObjectType: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Render(self) -> ObjectRender: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Url(self) -> str: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @property
    def Visibility(self) -> ObjectVisibility: ...
    @overload
    def GetBoundingBox(self, xform: Transform) -> BoundingBox: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(object: RhinoObject) -> ModelObject: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelObject: ...
    @ObjectTypeMask.setter
    @classmethod
    def ObjectTypeMask(clsAutoPropertyValue: ObjectType) -> None: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...

from typing import overload, Any, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum

import Params

__all__ = ['Params']


from System import Nullable
class Attributes:
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: Attributes) -> bool: ...
    @property
    def Hidden(self) -> Nullable: ...
    @property
    def Locked(self) -> Nullable: ...
    @property
    def Viewport(self) -> ModelViewport: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Hidden.setter
    def Hidden(self, AutoPropertyValue: Nullable) -> None: ...
    @Locked.setter
    def Locked(self, AutoPropertyValue: Nullable) -> None: ...
    @Viewport.setter
    def Viewport(self, AutoPropertyValue: ModelViewport) -> None: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
class Attributes:
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: Attributes) -> bool: ...
    @property
    def Color(self) -> Nullable: ...
    @property
    def Mode(self) -> ModelDisplayMode: ...
    @property
    def WireDensity(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Color.setter
    def Color(self, AutoPropertyValue: Nullable) -> None: ...
    @Mode.setter
    def Mode(self, AutoPropertyValue: ModelDisplayMode) -> None: ...
    @WireDensity.setter
    def WireDensity(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToString(self) -> str: ...


from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def DisplayMode(self) -> ModelDisplayMode: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @property
    def View(self) -> ModelView: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @DisplayMode.setter
    def DisplayMode(self, AutoPropertyValue: ModelDisplayMode) -> None: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @View.setter
    def View(self, AutoPropertyValue: ModelView) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def DisplayMode(self) -> ModelDisplayMode: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @property
    def View(self) -> ModelView: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @DisplayMode.setter
    def DisplayMode(self, AutoPropertyValue: ModelDisplayMode) -> None: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @View.setter
    def View(self, AutoPropertyValue: ModelView) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def DisplayMode(self) -> ModelDisplayMode: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def PageNumber(self) -> Nullable: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @property
    def View(self) -> ModelView: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @DisplayMode.setter
    def DisplayMode(self, AutoPropertyValue: ModelDisplayMode) -> None: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @PageNumber.setter
    def PageNumber(self, value: Nullable) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @View.setter
    def View(self, AutoPropertyValue: ModelView) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def View(self) -> ModelView: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @View.setter
    def View(self, AutoPropertyValue: ModelView) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.Display import ColorGradient
from Rhino.Geometry import BoundingBox
from Grasshopper.Kernel import GH_PreviewWireArgs
from Grasshopper.Kernel import GH_PreviewMeshArgs
from GH_IO.Serialization import GH_IWriter
from GH_IO.Serialization import GH_IReader
class DisplayColorGradient:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, colour: ColorGradient): ...
    @overload
    def __init__(self, other: DisplayColorGradient): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def DrawViewportMeshes(self, args: GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate(self) -> IGH_Goo: ...
    @overload
    def DuplicateColourGradient(self) -> DisplayColorGradient: ...
    @overload
    def EmitProxy(self) -> IGH_GooProxy: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def ClippingBox(self) -> BoundingBox: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> ColorGradient: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Read(self, reader: GH_IReader) -> bool: ...
    @overload
    def ScriptVariable(self) -> object: ...
    @Value.setter
    def Value(self, new_value: ColorGradient) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def Write(self, writer: GH_IWriter) -> bool: ...


from Rhino.Display import ColorStop
from Rhino.Geometry import Matrix
from Rhino.Geometry import Point3d
from Rhino.Geometry import Vector3d
from System.Drawing import Color
from Rhino.Geometry import Interval
from GH_IO.Serialization import GH_IWriter
from GH_IO.Serialization import GH_IReader
class DisplayColorStop:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, colour: ColorStop): ...
    @overload
    def __init__(self, other: DisplayColorStop): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Duplicate(self) -> IGH_Goo: ...
    @overload
    def DuplicateColorStop(self) -> DisplayColorStop: ...
    @overload
    def EmitProxy(self) -> IGH_GooProxy: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> ColorStop: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def QC_Bool(self) -> bool: ...
    @overload
    def QC_Col(self) -> Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex(self) -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash(self) -> int: ...
    @overload
    def QC_Int(self) -> int: ...
    @overload
    def QC_Interval(self) -> Interval: ...
    @overload
    def QC_Matrix(self) -> Matrix: ...
    @overload
    def QC_Num(self) -> float: ...
    @overload
    def QC_Pt(self) -> Point3d: ...
    @overload
    def QC_Text(self) -> str: ...
    @overload
    def QC_Vec(self) -> Vector3d: ...
    @overload
    def Read(self, reader: GH_IReader) -> bool: ...
    @overload
    def ScriptVariable(self) -> object: ...
    @Value.setter
    def Value(self, new_value: ColorStop) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def Write(self, writer: GH_IWriter) -> bool: ...


from Rhino.Display import DisplayModeDescription
from System import Guid
from Grasshopper.Rhinoceros import Attributes
from System import Nullable
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import T
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelContent
class ModelDisplayMode(ModelContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, displayMode: DisplayModeDescription): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelDisplayMode: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Id(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Unset() -> ModelDisplayMode: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(name: str) -> ModelDisplayMode: ...
    @overload
    def op_Implicit(id: Guid) -> ModelDisplayMode: ...
    @overload
    def op_Implicit(mode: DisplayModeDescription) -> ModelDisplayMode: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelDisplayMode: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import ViewInfo
from Grasshopper.Rhinoceros import Attributes
from System import Nullable
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelContent
class ModelNamedView(ModelContent):
    @overload
    @staticmethod
    def Cast(data: object) -> ModelNamedView: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Id(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def View(self) -> ModelView: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(viewportInfo: ViewInfo) -> ModelNamedView: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelNamedView: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.Display import RhinoViewport
from System import Guid
from Rhino.Display import ViewportType
from Rhino.DocObjects import ActiveSpace
from System import Nullable
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import ModelData
class ModelPageViewport(ModelViewport):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, viewport: RhinoViewport): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(data: object) -> ModelPageViewport: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @property
    def DisplayMode(self) -> ModelDisplayMode: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Id(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def PageNumber(self) -> Nullable: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Space(self) -> ActiveSpace: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @property
    def View(self) -> ModelView: ...
    @property
    def ViewportType(self) -> ViewportType: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(viewport: RhinoViewport) -> ModelPageViewport: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelPageViewport: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.Display import RhinoViewport
from System import Guid
from Rhino.Display import ViewportType
from Rhino.DocObjects import ActiveSpace
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import Attributes
from System import Nullable
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import ModelData
class ModelStandardViewport(ModelViewport):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, viewport: RhinoViewport): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(data: object) -> ModelStandardViewport: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @property
    def DisplayMode(self) -> ModelDisplayMode: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Id(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Space(self) -> ActiveSpace: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @property
    def View(self) -> ModelView: ...
    @property
    def ViewportType(self) -> ViewportType: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(viewport: RhinoViewport) -> ModelStandardViewport: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelStandardViewport: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import ViewportInfo
from Rhino.DocObjects import ViewInfo
from Rhino.Display import RhinoView
from Rhino.Display import RhinoViewport
from System import Guid
from Rhino.Geometry import Transform
from Rhino.Geometry import BoundingBox
from Rhino.Geometry import SpaceMorph
class ModelView:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, viewportInfo: ViewportInfo): ...
    @overload
    def __init__(self, viewInfo: ViewInfo): ...
    @overload
    def __init__(self, view: RhinoView): ...
    @overload
    def __init__(self, viewport: RhinoViewport): ...
    @overload
    def __init__(self, ref_guid: Guid): ...
    @overload
    def __init__(self, other: ModelView): ...
    @overload
    def __init__(self, viewportInfo: ViewportInfo, title: str): ...
    @overload
    @staticmethod
    def Cast(data: object) -> ModelView: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelView) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Title(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Transform) -> BoundingBox: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Morph(self, xmorph: SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def ToViewportInfo(self) -> ViewportInfo: ...
    @overload
    def Transform(self, xform: Transform) -> IGH_GeometricGoo: ...


from Rhino.Display import ViewportType
from Rhino.DocObjects import ActiveSpace
from Grasshopper.Rhinoceros import ModelUserText
from Rhino.Display import RhinoViewport
from Grasshopper.Rhinoceros import Attributes
from System import Nullable
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelContent
class ModelViewport(ModelContent):
    @overload
    @staticmethod
    def Cast(data: object) -> ModelViewport: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @property
    def DisplayMode(self) -> ModelDisplayMode: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Id(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Space(self) -> ActiveSpace: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Unset() -> ModelViewport: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @property
    def View(self) -> ModelView: ...
    @property
    def ViewportType(self) -> ViewportType: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(viewport: RhinoViewport) -> ModelViewport: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelViewport: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelValue
from Grasshopper.Rhinoceros import ModelValue
class ObjectDisplay(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ObjectDisplay: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @property
    def Color(self) -> Nullable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Mode(self) -> ModelDisplayMode: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def WireDensity(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ObjectDisplay: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import ObjectColorSource
from System import Nullable
from Grasshopper.Rhinoceros import ModelValue
from Grasshopper.Rhinoceros import ModelValue
class ObjectDisplayColor(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, value: Value): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ObjectDisplayColor: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @property
    def Color(self) -> Nullable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Source(self) -> ObjectColorSource: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(data: ObjectDisplayColor) -> Value: ...
    @overload
    def op_Implicit(data: Value) -> ObjectDisplayColor: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelValue
from Grasshopper.Rhinoceros import ModelValue
class ObjectVisibility(ModelValue):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ObjectVisibility: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelValue) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Hidden(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Locked(self) -> Nullable: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Viewport(self) -> ModelViewport: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ObjectVisibility: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import ObjectColorSource
from Grasshopper.Rhinoceros import ModelColor
class Value:
    @overload
    def __init__(self, source: ObjectColorSource): ...
    @overload
    def __init__(self, color: ModelColor): ...
    @overload
    def __init__(self, source: ObjectColorSource, color: ModelColor): ...
    @overload
    def CompareTo(self, other: object) -> int: ...
    @overload
    def CompareTo(self, other: Value) -> int: ...
    @overload
    def Deconstruct(self) -> Tuple[ObjectColorSource, ModelColor]: ...
    @overload
    def Equals(self, other: Value) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def ByLayer() -> Value: ...
    @property
    def ByMaterial() -> Value: ...
    @property
    def ByParent() -> Value: ...
    @property
    def Color(self) -> ModelColor: ...
    @property
    def Source(self) -> ObjectColorSource: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(color: ModelColor) -> Value: ...
    @overload
    def op_Implicit(source: ObjectColorSource) -> Value: ...
    @overload
    def op_Implicit(value: Value) -> ModelColor: ...
    @overload
    def op_Implicit(value: Value) -> ObjectColorSource: ...
    @overload
    def ToString(self) -> str: ...

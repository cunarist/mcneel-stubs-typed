from typing import overload, Any, Tuple, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum

import Params

__all__ = ['Params']


from Rhino.DocObjects import ArrowType
from System import Nullable
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import T
from Grasshopper.Rhinoceros import ModelData
class AnnotationArrow(ModelData):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, arrowType: ArrowType): ...
    @overload
    @staticmethod
    def Cast(source: object) -> AnnotationArrow: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @property
    def ArrowType(self) -> Nullable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(attributes: Attributes) -> AnnotationArrow: ...
    @overload
    def op_Implicit(arrowType: ArrowType) -> AnnotationArrow: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import DimensionStyle
from System import Nullable
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import T
from Grasshopper.Rhinoceros import ModelData
class AnnotationArrowSettings(ModelData):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, dimStyle: DimensionStyle): ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def Arrow1(self) -> AnnotationArrow: ...
    @property
    def Arrow2(self) -> AnnotationArrow: ...
    @property
    def ArrowSize(self) -> Nullable: ...
    @property
    def DimensionInline(self) -> Nullable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def FitArrow(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def LeaderArrow(self) -> AnnotationArrow: ...
    @property
    def LeaderArrowSize(self) -> Nullable: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetDimensionStyle(self, baseDimensionStyle: DimensionStyle) -> Tuple[DimensionStyle]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Explicit(settings: AnnotationArrowSettings) -> DimensionStyle: ...
    @overload
    def op_Implicit(attributes: Attributes) -> AnnotationArrowSettings: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.Geometry import Matrix
from Rhino.Geometry import Point3d
from Rhino.Geometry import Vector3d
from System.Drawing import Color
from Rhino.Geometry import Interval
from GH_IO.Serialization import GH_IWriter
from GH_IO.Serialization import GH_IReader
class AnnotationDateTimeFormat(GH_String):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, value: GH_String): ...
    @overload
    def __init__(self, value: str): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Duplicate(self) -> IGH_Goo: ...
    @overload
    def DuplicateString(self) -> GH_String: ...
    @overload
    def EmitProxy(self) -> IGH_GooProxy: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: AnnotationDateTimeFormat) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def QC_Bool(self) -> bool: ...
    @overload
    def QC_Col(self) -> Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex(self) -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash(self) -> int: ...
    @overload
    def QC_Int(self) -> int: ...
    @overload
    def QC_Interval(self) -> Interval: ...
    @overload
    def QC_Matrix(self) -> Matrix: ...
    @overload
    def QC_Num(self) -> float: ...
    @overload
    def QC_Pt(self) -> Point3d: ...
    @overload
    def QC_Text(self) -> str: ...
    @overload
    def QC_Vec(self) -> Vector3d: ...
    @overload
    def Read(self, reader: GH_IReader) -> bool: ...
    @overload
    def ScriptVariable(self) -> object: ...
    @Value.setter
    def Value(self, new_value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def Write(self, writer: GH_IWriter) -> bool: ...


from Rhino.DocObjects import DimensionStyle
from System import Nullable
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import T
from Grasshopper.Rhinoceros import ModelData
class AnnotationDimensionSettings(ModelData):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, dimStyle: DimensionStyle): ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def BaselineSpacing(self) -> Nullable: ...
    @property
    def CentermarkSize(self) -> Nullable: ...
    @property
    def CentermarkStyle(self) -> Nullable: ...
    @property
    def DecimalSeparator(self) -> Nullable: ...
    @property
    def DimensionLineExtension(self) -> Nullable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def ExtensionLineExtension(self) -> Nullable: ...
    @property
    def ExtensionLineOffset(self) -> Nullable: ...
    @property
    def FixedExtension(self) -> Nullable: ...
    @property
    def FixedExtensionLength(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def RadialTextAngleType(self) -> Nullable: ...
    @property
    def RadialTextLocation(self) -> Nullable: ...
    @property
    def RadialTextOrientation(self) -> Nullable: ...
    @property
    def SuppressExtension1(self) -> Nullable: ...
    @property
    def SuppressExtension2(self) -> Nullable: ...
    @property
    def TextAngleType(self) -> Nullable: ...
    @property
    def TextLocation(self) -> Nullable: ...
    @property
    def TextOrientation(self) -> Nullable: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetDimensionStyle(self, baseDimensionStyle: DimensionStyle) -> Tuple[DimensionStyle]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Explicit(setings: AnnotationDimensionSettings) -> DimensionStyle: ...
    @overload
    def op_Implicit(attributes: Attributes) -> AnnotationDimensionSettings: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import DimensionStyle
from System import Nullable
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import T
from Grasshopper.Rhinoceros import ModelData
class AnnotationLeaderSettings(ModelData):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, dimStyle: DimensionStyle): ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def ContentAngleType(self) -> Nullable: ...
    @property
    def CurveType(self) -> Nullable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def HasLanding(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def LandingLength(self) -> Nullable: ...
    @property
    def TextHorizontalAlignment(self) -> Nullable: ...
    @property
    def TextOrientation(self) -> Nullable: ...
    @property
    def TextVerticalAlignment(self) -> Nullable: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetDimensionStyle(self, baseDimensionStyle: DimensionStyle) -> Tuple[DimensionStyle]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Explicit(settings: AnnotationLeaderSettings) -> DimensionStyle: ...
    @overload
    def op_Implicit(attributes: Attributes) -> AnnotationLeaderSettings: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import DimensionStyle
from Rhino.DocObjects import Font
from System import Nullable
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import T
from Grasshopper.Rhinoceros import ModelData
class AnnotationTextSettings(ModelData):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, dimStyle: DimensionStyle): ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def DrawForward(self) -> Nullable: ...
    @property
    def DrawTextMask(self) -> Nullable: ...
    @property
    def FitText(self) -> Nullable: ...
    @property
    def Font(self) -> Font: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def MaskColor(self) -> Nullable: ...
    @property
    def MaskColorSource(self) -> Nullable: ...
    @property
    def MaskFrame(self) -> Nullable: ...
    @property
    def MaskOffset(self) -> Nullable: ...
    @property
    def TextGap(self) -> Nullable: ...
    @property
    def TextHeight(self) -> Nullable: ...
    @property
    def TextHorizontalAlignment(self) -> Nullable: ...
    @property
    def TextOrientation(self) -> Nullable: ...
    @property
    def TextVerticalAlignment(self) -> Nullable: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetDimensionStyle(self, baseDimensionStyle: DimensionStyle) -> Tuple[DimensionStyle]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Explicit(settings: AnnotationTextSettings) -> DimensionStyle: ...
    @overload
    def op_Implicit(attributes: Attributes) -> AnnotationTextSettings: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import DimensionStyle
from System import Nullable
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import T
from Grasshopper.Rhinoceros import ModelData
class AnnotationToleranceSettings(ModelData):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, dimStyle: DimensionStyle): ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def AlternateToleranceResolution(self) -> Nullable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def ToleranceFormat(self) -> Nullable: ...
    @property
    def ToleranceHeightScale(self) -> Nullable: ...
    @property
    def ToleranceLowerValue(self) -> Nullable: ...
    @property
    def ToleranceResolution(self) -> Nullable: ...
    @property
    def ToleranceUpperValue(self) -> Nullable: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetDimensionStyle(self, baseDimensionStyle: DimensionStyle) -> Tuple[DimensionStyle]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Explicit(settings: AnnotationToleranceSettings) -> DimensionStyle: ...
    @overload
    def op_Implicit(attributes: Attributes) -> AnnotationToleranceSettings: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import DimensionStyle
from System import Nullable
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import T
from Grasshopper.Rhinoceros import ModelData
class AnnotationUnitsSettings(ModelData):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, dimStyle: DimensionStyle): ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @property
    def AngleFormat(self) -> Nullable: ...
    @property
    def AngleResolution(self) -> Nullable: ...
    @property
    def AngleRoundoff(self) -> Nullable: ...
    @property
    def AngleZeroSuppression(self) -> Nullable: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def LengthDisplay(self) -> Nullable: ...
    @property
    def LengthFactor(self) -> Nullable: ...
    @property
    def LengthPrefix(self) -> str: ...
    @property
    def LengthResolution(self) -> Nullable: ...
    @property
    def LengthRoundoff(self) -> Nullable: ...
    @property
    def LengthSuffix(self) -> str: ...
    @property
    def LengthZeroSuppression(self) -> Nullable: ...
    @property
    def StackFractionFormat(self) -> Nullable: ...
    @property
    def StackHeightScale(self) -> Nullable: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetDimensionStyle(self, baseDimensionStyle: DimensionStyle) -> Tuple[DimensionStyle]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Explicit(settings: AnnotationUnitsSettings) -> DimensionStyle: ...
    @overload
    def op_Implicit(attributes: Attributes) -> AnnotationUnitsSettings: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Rhino.DocObjects import DimensionStyle
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @staticmethod
    def From(dimStyle: DimensionStyle) -> Attributes: ...
    @property
    def AlternateToleranceResolution(self) -> Nullable: ...
    @property
    def ToleranceFormat(self) -> Nullable: ...
    @property
    def ToleranceHeightScale(self) -> Nullable: ...
    @property
    def ToleranceLowerValue(self) -> Nullable: ...
    @property
    def ToleranceResolution(self) -> Nullable: ...
    @property
    def ToleranceUpperValue(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @AlternateToleranceResolution.setter
    def AlternateToleranceResolution(self, AutoPropertyValue: Nullable) -> None: ...
    @ToleranceFormat.setter
    def ToleranceFormat(self, AutoPropertyValue: Nullable) -> None: ...
    @ToleranceHeightScale.setter
    def ToleranceHeightScale(self, AutoPropertyValue: Nullable) -> None: ...
    @ToleranceLowerValue.setter
    def ToleranceLowerValue(self, AutoPropertyValue: Nullable) -> None: ...
    @ToleranceResolution.setter
    def ToleranceResolution(self, AutoPropertyValue: Nullable) -> None: ...
    @ToleranceUpperValue.setter
    def ToleranceUpperValue(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import Font
from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Rhino.DocObjects import DimensionStyle
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @staticmethod
    def From(dimStyle: DimensionStyle) -> Attributes: ...
    @property
    def DrawForward(self) -> Nullable: ...
    @property
    def DrawTextMask(self) -> Nullable: ...
    @property
    def FitText(self) -> Nullable: ...
    @property
    def Font(self) -> Font: ...
    @property
    def MaskColor(self) -> Nullable: ...
    @property
    def MaskColorSource(self) -> Nullable: ...
    @property
    def MaskFrame(self) -> Nullable: ...
    @property
    def MaskOffset(self) -> Nullable: ...
    @property
    def TextGap(self) -> Nullable: ...
    @property
    def TextHeight(self) -> Nullable: ...
    @property
    def TextHorizontalAlignment(self) -> Nullable: ...
    @property
    def TextOrientation(self) -> Nullable: ...
    @property
    def TextVerticalAlignment(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @DrawForward.setter
    def DrawForward(self, AutoPropertyValue: Nullable) -> None: ...
    @DrawTextMask.setter
    def DrawTextMask(self, AutoPropertyValue: Nullable) -> None: ...
    @FitText.setter
    def FitText(self, AutoPropertyValue: Nullable) -> None: ...
    @Font.setter
    def Font(self, AutoPropertyValue: Font) -> None: ...
    @MaskColor.setter
    def MaskColor(self, AutoPropertyValue: Nullable) -> None: ...
    @MaskColorSource.setter
    def MaskColorSource(self, AutoPropertyValue: Nullable) -> None: ...
    @MaskFrame.setter
    def MaskFrame(self, AutoPropertyValue: Nullable) -> None: ...
    @MaskOffset.setter
    def MaskOffset(self, AutoPropertyValue: Nullable) -> None: ...
    @TextGap.setter
    def TextGap(self, AutoPropertyValue: Nullable) -> None: ...
    @TextHeight.setter
    def TextHeight(self, AutoPropertyValue: Nullable) -> None: ...
    @TextHorizontalAlignment.setter
    def TextHorizontalAlignment(self, AutoPropertyValue: Nullable) -> None: ...
    @TextOrientation.setter
    def TextOrientation(self, AutoPropertyValue: Nullable) -> None: ...
    @TextVerticalAlignment.setter
    def TextVerticalAlignment(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Rhino.DocObjects import DimensionStyle
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @staticmethod
    def From(dimStyle: DimensionStyle) -> Attributes: ...
    @property
    def ContentAngleType(self) -> Nullable: ...
    @property
    def CurveType(self) -> Nullable: ...
    @property
    def HasLanding(self) -> Nullable: ...
    @property
    def LandingLength(self) -> Nullable: ...
    @property
    def TextHorizontalAlignment(self) -> Nullable: ...
    @property
    def TextOrientation(self) -> Nullable: ...
    @property
    def TextVerticalAlignment(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @ContentAngleType.setter
    def ContentAngleType(self, AutoPropertyValue: Nullable) -> None: ...
    @CurveType.setter
    def CurveType(self, AutoPropertyValue: Nullable) -> None: ...
    @HasLanding.setter
    def HasLanding(self, AutoPropertyValue: Nullable) -> None: ...
    @LandingLength.setter
    def LandingLength(self, AutoPropertyValue: Nullable) -> None: ...
    @TextHorizontalAlignment.setter
    def TextHorizontalAlignment(self, AutoPropertyValue: Nullable) -> None: ...
    @TextOrientation.setter
    def TextOrientation(self, AutoPropertyValue: Nullable) -> None: ...
    @TextVerticalAlignment.setter
    def TextVerticalAlignment(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @property
    def ArrowSettings(self) -> AnnotationArrowSettings: ...
    @property
    def DimensionScale(self) -> Nullable: ...
    @property
    def DimensionSettings(self) -> AnnotationDimensionSettings: ...
    @property
    def LeaderSettings(self) -> AnnotationLeaderSettings: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TextSettings(self) -> AnnotationTextSettings: ...
    @property
    def ToleranceSettings(self) -> AnnotationToleranceSettings: ...
    @property
    def UnitsSettings(self) -> AnnotationUnitsSettings: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(path: str) -> Attributes: ...
    @ArrowSettings.setter
    def ArrowSettings(self, AutoPropertyValue: AnnotationArrowSettings) -> None: ...
    @DimensionScale.setter
    def DimensionScale(self, AutoPropertyValue: Nullable) -> None: ...
    @DimensionSettings.setter
    def DimensionSettings(self, AutoPropertyValue: AnnotationDimensionSettings) -> None: ...
    @LeaderSettings.setter
    def LeaderSettings(self, AutoPropertyValue: AnnotationLeaderSettings) -> None: ...
    @Name.setter
    def Name(self, Value: ModelContentName) -> None: ...
    @Notes.setter
    def Notes(self, AutoPropertyValue: str) -> None: ...
    @Parent.setter
    def Parent(self, Value: ModelContentName) -> None: ...
    @Path.setter
    def Path(self, Value: ModelContentName) -> None: ...
    @Tags.setter
    def Tags(self, AutoPropertyValue: ModelTags) -> None: ...
    @TextSettings.setter
    def TextSettings(self, AutoPropertyValue: AnnotationTextSettings) -> None: ...
    @ToleranceSettings.setter
    def ToleranceSettings(self, AutoPropertyValue: AnnotationToleranceSettings) -> None: ...
    @UnitsSettings.setter
    def UnitsSettings(self, AutoPropertyValue: AnnotationUnitsSettings) -> None: ...
    @UserText.setter
    def UserText(self, AutoPropertyValue: ModelUserText) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Rhino.DocObjects import DimensionStyle
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @staticmethod
    def From(dimStyle: DimensionStyle) -> Attributes: ...
    @property
    def Arrow1(self) -> AnnotationArrow: ...
    @property
    def Arrow2(self) -> AnnotationArrow: ...
    @property
    def ArrowSize(self) -> Nullable: ...
    @property
    def DimensionInline(self) -> Nullable: ...
    @property
    def FitArrow(self) -> Nullable: ...
    @property
    def LeaderArrow(self) -> AnnotationArrow: ...
    @property
    def LeaderArrowSize(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Arrow1.setter
    def Arrow1(self, AutoPropertyValue: AnnotationArrow) -> None: ...
    @Arrow2.setter
    def Arrow2(self, AutoPropertyValue: AnnotationArrow) -> None: ...
    @ArrowSize.setter
    def ArrowSize(self, AutoPropertyValue: Nullable) -> None: ...
    @DimensionInline.setter
    def DimensionInline(self, AutoPropertyValue: Nullable) -> None: ...
    @FitArrow.setter
    def FitArrow(self, AutoPropertyValue: Nullable) -> None: ...
    @LeaderArrow.setter
    def LeaderArrow(self, AutoPropertyValue: AnnotationArrow) -> None: ...
    @LeaderArrowSize.setter
    def LeaderArrowSize(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Rhino.DocObjects import ArrowType
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @staticmethod
    def From(arrowType: ArrowType) -> Attributes: ...
    @property
    def ArrowType(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @ArrowType.setter
    def ArrowType(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Rhino.DocObjects import DimensionStyle
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @staticmethod
    def From(dimStyle: DimensionStyle) -> Attributes: ...
    @property
    def AngleFormat(self) -> Nullable: ...
    @property
    def AngleResolution(self) -> Nullable: ...
    @property
    def AngleRoundoff(self) -> Nullable: ...
    @property
    def AngleZeroSuppression(self) -> Nullable: ...
    @property
    def LengthDisplay(self) -> Nullable: ...
    @property
    def LengthFactor(self) -> Nullable: ...
    @property
    def LengthPrefix(self) -> str: ...
    @property
    def LengthResolution(self) -> Nullable: ...
    @property
    def LengthRoundoff(self) -> Nullable: ...
    @property
    def LengthSuffix(self) -> str: ...
    @property
    def LengthZeroSuppression(self) -> Nullable: ...
    @property
    def StackFractionFormat(self) -> Nullable: ...
    @property
    def StackHeightScale(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @AngleFormat.setter
    def AngleFormat(self, AutoPropertyValue: Nullable) -> None: ...
    @AngleResolution.setter
    def AngleResolution(self, AutoPropertyValue: Nullable) -> None: ...
    @AngleRoundoff.setter
    def AngleRoundoff(self, AutoPropertyValue: Nullable) -> None: ...
    @AngleZeroSuppression.setter
    def AngleZeroSuppression(self, AutoPropertyValue: Nullable) -> None: ...
    @LengthDisplay.setter
    def LengthDisplay(self, AutoPropertyValue: Nullable) -> None: ...
    @LengthFactor.setter
    def LengthFactor(self, AutoPropertyValue: Nullable) -> None: ...
    @LengthPrefix.setter
    def LengthPrefix(self, AutoPropertyValue: str) -> None: ...
    @LengthResolution.setter
    def LengthResolution(self, AutoPropertyValue: Nullable) -> None: ...
    @LengthRoundoff.setter
    def LengthRoundoff(self, AutoPropertyValue: Nullable) -> None: ...
    @LengthSuffix.setter
    def LengthSuffix(self, AutoPropertyValue: str) -> None: ...
    @LengthZeroSuppression.setter
    def LengthZeroSuppression(self, AutoPropertyValue: Nullable) -> None: ...
    @StackFractionFormat.setter
    def StackFractionFormat(self, AutoPropertyValue: Nullable) -> None: ...
    @StackHeightScale.setter
    def StackHeightScale(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from System import Nullable
from Grasshopper.Rhinoceros import ModelData
from Rhino.DocObjects import DimensionStyle
from Grasshopper.Rhinoceros import Attributes
class Attributes:
    @overload
    def __init__(self): ...
    @overload
    def Clone(self) -> Attributes: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    @staticmethod
    def From(dimStyle: DimensionStyle) -> Attributes: ...
    @property
    def BaselineSpacing(self) -> Nullable: ...
    @property
    def CentermarkSize(self) -> Nullable: ...
    @property
    def CentermarkStyle(self) -> Nullable: ...
    @property
    def DecimalSeparator(self) -> Nullable: ...
    @property
    def DimensionLineExtension(self) -> Nullable: ...
    @property
    def ExtensionLineExtension(self) -> Nullable: ...
    @property
    def ExtensionLineOffset(self) -> Nullable: ...
    @property
    def FixedExtension(self) -> Nullable: ...
    @property
    def FixedExtensionLength(self) -> Nullable: ...
    @property
    def RadialTextAngleType(self) -> Nullable: ...
    @property
    def RadialTextLocation(self) -> Nullable: ...
    @property
    def RadialTextOrientation(self) -> Nullable: ...
    @property
    def SuppressExtension1(self) -> Nullable: ...
    @property
    def SuppressExtension2(self) -> Nullable: ...
    @property
    def TextAngleType(self) -> Nullable: ...
    @property
    def TextLocation(self) -> Nullable: ...
    @property
    def TextOrientation(self) -> Nullable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @BaselineSpacing.setter
    def BaselineSpacing(self, AutoPropertyValue: Nullable) -> None: ...
    @CentermarkSize.setter
    def CentermarkSize(self, AutoPropertyValue: Nullable) -> None: ...
    @CentermarkStyle.setter
    def CentermarkStyle(self, AutoPropertyValue: Nullable) -> None: ...
    @DecimalSeparator.setter
    def DecimalSeparator(self, AutoPropertyValue: Nullable) -> None: ...
    @DimensionLineExtension.setter
    def DimensionLineExtension(self, AutoPropertyValue: Nullable) -> None: ...
    @ExtensionLineExtension.setter
    def ExtensionLineExtension(self, AutoPropertyValue: Nullable) -> None: ...
    @ExtensionLineOffset.setter
    def ExtensionLineOffset(self, AutoPropertyValue: Nullable) -> None: ...
    @FixedExtension.setter
    def FixedExtension(self, AutoPropertyValue: Nullable) -> None: ...
    @FixedExtensionLength.setter
    def FixedExtensionLength(self, AutoPropertyValue: Nullable) -> None: ...
    @RadialTextAngleType.setter
    def RadialTextAngleType(self, AutoPropertyValue: Nullable) -> None: ...
    @RadialTextLocation.setter
    def RadialTextLocation(self, AutoPropertyValue: Nullable) -> None: ...
    @RadialTextOrientation.setter
    def RadialTextOrientation(self, AutoPropertyValue: Nullable) -> None: ...
    @SuppressExtension1.setter
    def SuppressExtension1(self, AutoPropertyValue: Nullable) -> None: ...
    @SuppressExtension2.setter
    def SuppressExtension2(self, AutoPropertyValue: Nullable) -> None: ...
    @TextAngleType.setter
    def TextAngleType(self, AutoPropertyValue: Nullable) -> None: ...
    @TextLocation.setter
    def TextLocation(self, AutoPropertyValue: Nullable) -> None: ...
    @TextOrientation.setter
    def TextOrientation(self, AutoPropertyValue: Nullable) -> None: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def ToModelData(self) -> ModelData: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import DimensionStyle
from System import Guid
from System import Nullable
from Grasshopper.Rhinoceros import Attributes
from Grasshopper.Rhinoceros import ModelUserText
from Grasshopper.Rhinoceros import ModelContentName
from Grasshopper.Rhinoceros import ModelTags
from Grasshopper.Rhinoceros import ModelContent
from Grasshopper.Rhinoceros import ModelData
from Grasshopper.Rhinoceros import ModelComponentContent
class ModelAnnotationStyle(ModelComponentContent):
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, dimStyle: DimensionStyle): ...
    @overload
    def __init__(self, id: Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelAnnotationStyle: ...
    @overload
    def CastTo(self) -> Tuple[bool, T]: ...
    @overload
    def Equals(self, other: ModelContent) -> bool: ...
    @overload
    def Equals(self, other: object) -> bool: ...
    @overload
    def Equals(self, other: ModelData) -> bool: ...
    @property
    def ArrowSettings(self) -> AnnotationArrowSettings: ...
    @property
    def DimensionScale(self) -> Nullable: ...
    @property
    def DimensionSettings(self) -> AnnotationDimensionSettings: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Id(self) -> Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def LeaderSettings(self) -> AnnotationLeaderSettings: ...
    @property
    def Name(self) -> ModelContentName: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Parent(self) -> ModelContentName: ...
    @property
    def Path(self) -> ModelContentName: ...
    @property
    def Tags(self) -> ModelTags: ...
    @property
    def TextSettings(self) -> AnnotationTextSettings: ...
    @property
    def ToleranceSettings(self) -> AnnotationToleranceSettings: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def UnitsSettings(self) -> AnnotationUnitsSettings: ...
    @property
    @classmethod
    def Unset(cls) -> ModelAnnotationStyle: ...
    @property
    def UserText(self) -> ModelUserText: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def op_Implicit(style: DimensionStyle) -> ModelAnnotationStyle: ...
    @overload
    def op_Implicit(path: str) -> ModelAnnotationStyle: ...
    @overload
    def op_Implicit(attributes: Attributes) -> ModelAnnotationStyle: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToAttributes(self) -> Attributes: ...
    @overload
    def ToDetails(self) -> str: ...
    @overload
    def TooltipString(self) -> str: ...
    @overload
    def ToString(self) -> str: ...

from typing import overload, Any
from collections.abc import Iterable, Iterator, Sequence, MutableSequence, Callable
from enum import Enum

from Eto.Drawing import Bitmap
from Eto.Drawing import Color
from Eto.Drawing import Font
from Eto.Drawing import Point
from Eto.Drawing import PointF
from Eto.Drawing import Rectangle
from Eto.Drawing import Size
from Eto.Drawing import SizeF
from Eto.Forms import Control
from Eto.Forms import Window
from GH_IO.Types import GH_Version
from Grasshopper.GUI import GH_CursorServer
from Grasshopper.GUI import GH_DocumentEditor
from Grasshopper.GUI import GH_PruderyFilter
from Grasshopper.GUI.Canvas import GH_Canvas
from Grasshopper.GUI.MRU import GH_MRU_Server
from Grasshopper.GUI.RemotePanel import RemoteControlPanel
from Grasshopper.Kernel import GH_AssemblyFolderInfo
from Grasshopper.Kernel import GH_ComponentServer
from Grasshopper.Kernel import GH_Document
from Grasshopper.Kernel import GH_DocumentAssociations
from Grasshopper.Kernel import GH_DocumentServer
from Grasshopper.Kernel import GH_LoadingDemand
from Grasshopper.Kernel import GH_MarkovChain
from Grasshopper.Kernel import GH_SettingsServer
from Grasshopper.Kernel import IGH_Author
from Grasshopper.Kernel import IGH_Param
from Grasshopper.Kernel.Data import GH_Path
from Grasshopper.Kernel.Data import IGH_Structure
from Grasshopper.Kernel.Parameters import IGH_TypeHint
from Rhino import RhinoDoc
from Rhino.Display import PointStyle
from System import AsyncCallback
from System import Guid
from System import IAsyncResult
from System import IntPtr
from System.Collections.Generic import IList
from System.Drawing import Bitmap
from System.Drawing import Color
from System.Drawing import Font
from System.Drawing import Point
from System.Drawing import PointF
from System.Drawing import Rectangle
from System.Drawing import Size
from System.Drawing import SizeF
from System.Reflection import MethodInfo
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Windows.Forms import Control
from System.Windows.Forms import Form
from System.Windows.Forms import IWin32Window

from . import Documentation
from . import Getters
from . import GUI
from . import Kernel
from . import Plugin
from . import Rhinoceros

__all__ = ['Documentation', 'Getters', 'GUI', 'Kernel', 'Plugin', 'Rhinoceros']



class AuthorAddressChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class AuthorCompanyChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class AuthorCopyrightChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class AuthorEMailChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class AuthorNameChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class AuthorPhoneChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class AuthorWebsiteChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CanvasCreatedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, canvas: GH_Canvas, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, canvas: GH_Canvas) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CanvasDestroyedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, canvas: GH_Canvas, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, canvas: GH_Canvas) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CanvasFancyWiresChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CanvasFullNamesChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CanvasObjectIconsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CanvasObsoleteTagsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CanvasRadialMenuChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CanvasToolbarChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CanvasZuiZoomLevelChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CentralSettings:
    @overload
    @staticmethod
    def add_AuthorAddressChanged(obj: AuthorAddressChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorCompanyChanged(obj: AuthorCompanyChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorCopyrightChanged(obj: AuthorCopyrightChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorEMailChanged(obj: AuthorEMailChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorNameChanged(obj: AuthorNameChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorPhoneChanged(obj: AuthorPhoneChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_AuthorWebsiteChanged(obj: AuthorWebsiteChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasFancyWiresChanged(obj: CanvasFancyWiresChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasFullNamesChanged(obj: CanvasFullNamesChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasObjectIconsChanged(obj: CanvasObjectIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasObsoleteTagsChanged(obj: CanvasObsoleteTagsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasRadialMenuChanged(obj: CanvasRadialMenuChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasToolbarChanged(obj: CanvasToolbarChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasZuiZoomLevelChanged(obj: CanvasZuiZoomLevelChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_ComponentCascadeMenusChanged(obj: ComponentCascadeMenusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CreateSolutionUndoRecordChanged(obj: CreateSolutionUndoRecordChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_FormattingChanged(obj: FormattingChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_LoadMechanismChanged(obj: LoadMechanismChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_LoadProtectionChanged(obj: LoadProtectionChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PanelDefaultFontChanged(obj: PanelDefaultFontChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PreviewBumpZBufferChanged(obj: PreviewBumpZBufferChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PreviewGumballsChanged(obj: PreviewGumballsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PreviewMeshEdgesChanged(obj: PreviewMeshEdgesChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PreviewPlaneRadiusChanged(obj: PreviewPlaneRadiusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PreviewPointStyleChanged(obj: PreviewPointStyleChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_PruderyLevelChanged(obj: PruderyLevelChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_RibbonAllIconsChanged(obj: RibbonAllIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_RibbonDrawTabIconsChanged(obj: RibbonDrawTabIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_RibbonSeparatorsChanged(obj: RibbonSeparatorsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_RibbonVisibleChanged(obj: RibbonVisibleChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_TemplateFileChanged(obj: TemplateFileChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_TooltipWiggleRadiusChanged(obj: TooltipWiggleRadiusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_UiScaleChanged(obj: UiScaleChangedEventHandler) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    @classmethod
    def AuthorAddress(cls) -> str: ...
    @property
    @classmethod
    def AuthorCompany(cls) -> str: ...
    @property
    @classmethod
    def AuthorCopyright(cls) -> str: ...
    @property
    @classmethod
    def AuthorCopyrightFormatted(cls) -> str: ...
    @property
    @classmethod
    def AuthorDetails(cls) -> IGH_Author: ...
    @property
    @classmethod
    def AuthorEMail(cls) -> str: ...
    @property
    @classmethod
    def AuthorName(cls) -> str: ...
    @property
    @classmethod
    def AuthorPhone(cls) -> str: ...
    @property
    @classmethod
    def AuthorWebsite(cls) -> str: ...
    @property
    @classmethod
    def CanvasFancyWires(cls) -> bool: ...
    @property
    @classmethod
    def CanvasFullNames(cls) -> bool: ...
    @property
    @classmethod
    def CanvasMaxSearchResults(cls) -> int: ...
    @property
    @classmethod
    def CanvasObjectIcons(cls) -> bool: ...
    @property
    @classmethod
    def CanvasObsoleteTags(cls) -> bool: ...
    @property
    @classmethod
    def CanvasRadialMenu(cls) -> bool: ...
    @property
    @classmethod
    def CanvasSpaceIsRadialMenu(cls) -> bool: ...
    @property
    @classmethod
    def CanvasSpaceSearchRadialMessage(cls) -> int: ...
    @property
    @classmethod
    def CanvasToolbar(cls) -> bool: ...
    @property
    @classmethod
    def CanvasZuiZoomLevel(cls) -> float: ...
    @property
    @classmethod
    def CapsuleHighlight(cls) -> bool: ...
    @property
    @classmethod
    def CapsuleShine(cls) -> bool: ...
    @property
    @classmethod
    def ComponentCascadeMenus(cls) -> bool: ...
    @property
    @classmethod
    def CreateSolutionUndoRecord(cls) -> bool: ...
    @property
    @classmethod
    def FormatDecimalDigits(cls) -> int: ...
    @property
    @classmethod
    def FormatENotationDigits(cls) -> int: ...
    @property
    @classmethod
    def FormatENotationLowerLimit(cls) -> int: ...
    @property
    @classmethod
    def FormatENotationLowerThreshold(cls) -> float: ...
    @property
    @classmethod
    def FormatENotationUpperLimit(cls) -> int: ...
    @property
    @classmethod
    def FormatENotationUpperThreshold(cls) -> float: ...
    @property
    @classmethod
    def FormatMultiplesOfOne(cls) -> bool: ...
    @property
    @classmethod
    def FormatMultiplesOfPi(cls) -> bool: ...
    @property
    @classmethod
    def InvalidBakeAllow(cls) -> bool: ...
    @property
    @classmethod
    def InvalidBakeAsk(cls) -> bool: ...
    @property
    @classmethod
    def IsTemplateFile(cls) -> bool: ...
    @property
    @classmethod
    def PanelDefaultFontFamily(cls) -> str: ...
    @property
    @classmethod
    def PanelDefaultFontSize(cls) -> float: ...
    @property
    @classmethod
    def PreviewBumpZBuffer(cls) -> bool: ...
    @property
    @classmethod
    def PreviewGumballs(cls) -> bool: ...
    @property
    @classmethod
    def PreviewMeshEdges(cls) -> bool: ...
    @property
    @classmethod
    def PreviewPlaneRadius(cls) -> float: ...
    @property
    @classmethod
    def PreviewPointRadius(cls) -> int: ...
    @property
    @classmethod
    def PreviewPointStyle(cls) -> PointStyle: ...
    @property
    @classmethod
    def PreviewSelectionThickening(cls) -> int: ...
    @property
    @classmethod
    def PruderyLevel(cls) -> GH_PruderyFilter: ...
    @property
    @classmethod
    def RibbonDrawTabIcons(cls) -> bool: ...
    @property
    @classmethod
    def RibbonSeparators(cls) -> bool: ...
    @property
    @classmethod
    def RibbonShowObscure(cls) -> bool: ...
    @property
    @classmethod
    def RibbonVisible(cls) -> bool: ...
    @property
    @classmethod
    def ShowTutorials(cls) -> bool: ...
    @property
    @classmethod
    def TemplateFile(cls) -> str: ...
    @property
    @classmethod
    def TooltipVisible(cls) -> bool: ...
    @property
    @classmethod
    def TooltipWiggleRadius(cls) -> int: ...
    @property
    @classmethod
    def TrackFileStamps(cls) -> bool: ...
    @property
    @classmethod
    def TrackPluginLoading(cls) -> bool: ...
    @property
    @classmethod
    def TryDownloadMissingPlugins(cls) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    @staticmethod
    def GetLoadMechanism(pluginName: str) -> GH_LoadingDemand: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def IsLoadProtected(pluginName: str) -> bool: ...
    @overload
    @staticmethod
    def remove_AuthorAddressChanged(obj: AuthorAddressChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorCompanyChanged(obj: AuthorCompanyChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorCopyrightChanged(obj: AuthorCopyrightChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorEMailChanged(obj: AuthorEMailChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorNameChanged(obj: AuthorNameChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorPhoneChanged(obj: AuthorPhoneChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_AuthorWebsiteChanged(obj: AuthorWebsiteChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasFancyWiresChanged(obj: CanvasFancyWiresChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasFullNamesChanged(obj: CanvasFullNamesChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasObjectIconsChanged(obj: CanvasObjectIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasObsoleteTagsChanged(obj: CanvasObsoleteTagsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasRadialMenuChanged(obj: CanvasRadialMenuChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasToolbarChanged(obj: CanvasToolbarChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasZuiZoomLevelChanged(obj: CanvasZuiZoomLevelChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_ComponentCascadeMenusChanged(obj: ComponentCascadeMenusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CreateSolutionUndoRecordChanged(obj: CreateSolutionUndoRecordChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_FormattingChanged(obj: FormattingChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_LoadMechanismChanged(obj: LoadMechanismChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_LoadProtectionChanged(obj: LoadProtectionChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PanelDefaultFontChanged(obj: PanelDefaultFontChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PreviewBumpZBufferChanged(obj: PreviewBumpZBufferChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PreviewGumballsChanged(obj: PreviewGumballsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PreviewMeshEdgesChanged(obj: PreviewMeshEdgesChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PreviewPlaneRadiusChanged(obj: PreviewPlaneRadiusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PreviewPointStyleChanged(obj: PreviewPointStyleChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_PruderyLevelChanged(obj: PruderyLevelChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_RibbonAllIconsChanged(obj: RibbonAllIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_RibbonDrawTabIconsChanged(obj: RibbonDrawTabIconsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_RibbonSeparatorsChanged(obj: RibbonSeparatorsChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_RibbonVisibleChanged(obj: RibbonVisibleChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_TemplateFileChanged(obj: TemplateFileChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_TooltipWiggleRadiusChanged(obj: TooltipWiggleRadiusChangedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_UiScaleChanged(obj: UiScaleChangedEventHandler) -> None: ...
    @AuthorAddress.setter
    @classmethod
    def AuthorAddress(cls, Value: str) -> None: ...
    @AuthorCompany.setter
    @classmethod
    def AuthorCompany(cls, Value: str) -> None: ...
    @AuthorCopyright.setter
    @classmethod
    def AuthorCopyright(cls, Value: str) -> None: ...
    @AuthorEMail.setter
    @classmethod
    def AuthorEMail(cls, Value: str) -> None: ...
    @AuthorName.setter
    @classmethod
    def AuthorName(cls, Value: str) -> None: ...
    @AuthorPhone.setter
    @classmethod
    def AuthorPhone(cls, Value: str) -> None: ...
    @AuthorWebsite.setter
    @classmethod
    def AuthorWebsite(cls, Value: str) -> None: ...
    @CanvasFancyWires.setter
    @classmethod
    def CanvasFancyWires(cls, Value: bool) -> None: ...
    @CanvasFullNames.setter
    @classmethod
    def CanvasFullNames(cls, Value: bool) -> None: ...
    @CanvasMaxSearchResults.setter
    @classmethod
    def CanvasMaxSearchResults(cls, Value: int) -> None: ...
    @CanvasObjectIcons.setter
    @classmethod
    def CanvasObjectIcons(cls, Value: bool) -> None: ...
    @CanvasObsoleteTags.setter
    @classmethod
    def CanvasObsoleteTags(cls, Value: bool) -> None: ...
    @CanvasRadialMenu.setter
    @classmethod
    def CanvasRadialMenu(cls, Value: bool) -> None: ...
    @CanvasSpaceIsRadialMenu.setter
    @classmethod
    def CanvasSpaceIsRadialMenu(cls, Value: bool) -> None: ...
    @CanvasSpaceSearchRadialMessage.setter
    @classmethod
    def CanvasSpaceSearchRadialMessage(cls, Value: int) -> None: ...
    @CanvasToolbar.setter
    @classmethod
    def CanvasToolbar(cls, Value: bool) -> None: ...
    @CanvasZuiZoomLevel.setter
    @classmethod
    def CanvasZuiZoomLevel(cls, Value: float) -> None: ...
    @CapsuleHighlight.setter
    @classmethod
    def CapsuleHighlight(cls, Value: bool) -> None: ...
    @CapsuleShine.setter
    @classmethod
    def CapsuleShine(cls, Value: bool) -> None: ...
    @ComponentCascadeMenus.setter
    @classmethod
    def ComponentCascadeMenus(cls, Value: bool) -> None: ...
    @CreateSolutionUndoRecord.setter
    @classmethod
    def CreateSolutionUndoRecord(cls, Value: bool) -> None: ...
    @FormatDecimalDigits.setter
    @classmethod
    def FormatDecimalDigits(cls, Value: int) -> None: ...
    @FormatENotationDigits.setter
    @classmethod
    def FormatENotationDigits(cls, Value: int) -> None: ...
    @FormatENotationLowerLimit.setter
    @classmethod
    def FormatENotationLowerLimit(cls, Value: int) -> None: ...
    @FormatENotationUpperLimit.setter
    @classmethod
    def FormatENotationUpperLimit(cls, Value: int) -> None: ...
    @FormatMultiplesOfOne.setter
    @classmethod
    def FormatMultiplesOfOne(cls, Value: bool) -> None: ...
    @FormatMultiplesOfPi.setter
    @classmethod
    def FormatMultiplesOfPi(cls, Value: bool) -> None: ...
    @InvalidBakeAllow.setter
    @classmethod
    def InvalidBakeAllow(cls, AutoPropertyValue: bool) -> None: ...
    @InvalidBakeAsk.setter
    @classmethod
    def InvalidBakeAsk(cls, AutoPropertyValue: bool) -> None: ...
    @PanelDefaultFontFamily.setter
    @classmethod
    def PanelDefaultFontFamily(cls, Value: str) -> None: ...
    @PanelDefaultFontSize.setter
    @classmethod
    def PanelDefaultFontSize(cls, Value: float) -> None: ...
    @PreviewBumpZBuffer.setter
    @classmethod
    def PreviewBumpZBuffer(cls, Value: bool) -> None: ...
    @PreviewGumballs.setter
    @classmethod
    def PreviewGumballs(cls, Value: bool) -> None: ...
    @PreviewMeshEdges.setter
    @classmethod
    def PreviewMeshEdges(cls, Value: bool) -> None: ...
    @PreviewPlaneRadius.setter
    @classmethod
    def PreviewPlaneRadius(cls, Value: float) -> None: ...
    @PreviewPointStyle.setter
    @classmethod
    def PreviewPointStyle(cls, Value: PointStyle) -> None: ...
    @PreviewSelectionThickening.setter
    @classmethod
    def PreviewSelectionThickening(cls, Value: int) -> None: ...
    @PruderyLevel.setter
    @classmethod
    def PruderyLevel(cls, Value: GH_PruderyFilter) -> None: ...
    @RibbonDrawTabIcons.setter
    @classmethod
    def RibbonDrawTabIcons(cls, Value: bool) -> None: ...
    @RibbonSeparators.setter
    @classmethod
    def RibbonSeparators(cls, Value: bool) -> None: ...
    @RibbonShowObscure.setter
    @classmethod
    def RibbonShowObscure(cls, Value: bool) -> None: ...
    @RibbonVisible.setter
    @classmethod
    def RibbonVisible(cls, Value: bool) -> None: ...
    @ShowTutorials.setter
    @classmethod
    def ShowTutorials(cls, Value: bool) -> None: ...
    @TemplateFile.setter
    @classmethod
    def TemplateFile(cls, Value: str) -> None: ...
    @TooltipVisible.setter
    @classmethod
    def TooltipVisible(cls, Value: bool) -> None: ...
    @TooltipWiggleRadius.setter
    @classmethod
    def TooltipWiggleRadius(cls, Value: int) -> None: ...
    @TrackFileStamps.setter
    @classmethod
    def TrackFileStamps(cls, value: bool) -> None: ...
    @TrackPluginLoading.setter
    @classmethod
    def TrackPluginLoading(cls, value: bool) -> None: ...
    @TryDownloadMissingPlugins.setter
    @classmethod
    def TryDownloadMissingPlugins(cls, value: bool) -> None: ...
    @overload
    @staticmethod
    def SetLoadMechanism(pluginName: str, mechanism: GH_LoadingDemand) -> None: ...
    @overload
    @staticmethod
    def SetLoadProtected(pluginName: str, loadProtect: bool) -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def UserOkayWithBakingInvalidObject(objectType: str) -> bool: ...


class ComponentCascadeMenusChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CreateSolutionUndoRecordChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...






class EtoExtensions:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def ToEto(control: Control) -> Control: ...
    @overload
    @staticmethod
    def ToEto(control: Form) -> Window: ...
    @overload
    @staticmethod
    def ToEto(size: SizeF) -> SizeF: ...
    @overload
    @staticmethod
    def ToEto(size: Size) -> Size: ...
    @overload
    @staticmethod
    def ToEto(point: PointF) -> PointF: ...
    @overload
    @staticmethod
    def ToEto(point: Point) -> Point: ...
    @overload
    @staticmethod
    def ToEto(font: Font) -> Font: ...
    @overload
    @staticmethod
    def ToEto(sdcolor: Color) -> Color: ...
    @overload
    @staticmethod
    def ToEtoWindow(control: IWin32Window) -> Window: ...
    @overload
    @staticmethod
    def ToSD(color: Color) -> Color: ...
    @overload
    @staticmethod
    def ToSD(point: PointF) -> PointF: ...
    @overload
    @staticmethod
    def ToSD(point: Point) -> Point: ...
    @overload
    @staticmethod
    def ToSD(size: SizeF) -> SizeF: ...
    @overload
    @staticmethod
    def ToSD(size: Size) -> Size: ...
    @overload
    @staticmethod
    def ToSD(rectangle: Rectangle) -> Rectangle: ...
    @overload
    @staticmethod
    def ToSD(font: Font) -> Font: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def ToSwf(control: Control, attach: bool) -> Control: ...
    @overload
    @staticmethod
    def ToWin32Window(window: Window) -> IWin32Window: ...


class EtoWin32Window:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Handle(self) -> IntPtr: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class Folders:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    @classmethod
    def AppDataFolder(cls) -> str: ...
    @property
    @classmethod
    def AssemblyFolders(cls) -> MutableSequence[GH_AssemblyFolderInfo]: ...
    @property
    @classmethod
    def AutoSaveFolder(cls) -> str: ...
    @property
    @classmethod
    def ClusterFolders(cls) -> MutableSequence[str]: ...
    @property
    @classmethod
    def CursorFolder(cls) -> str: ...
    @property
    @classmethod
    def CustomAssemblyFolders(cls) -> MutableSequence[str]: ...
    @property
    @classmethod
    def DefaultAssemblyFolder(cls) -> str: ...
    @property
    @classmethod
    def DefaultAssemblyFolderVersion6(cls) -> str: ...
    @property
    @classmethod
    def DefaultClusterFolder(cls) -> str: ...
    @property
    @classmethod
    def DefaultTemplateFolder(cls) -> str: ...
    @property
    @classmethod
    def DefaultUserObjectFolder(cls) -> str: ...
    @property
    @classmethod
    def Desktop(cls) -> str: ...
    @property
    @classmethod
    def DownloaderApplication(cls) -> str: ...
    @property
    @classmethod
    def FileViewerApplication(cls) -> str: ...
    @property
    @classmethod
    def IconFolder(cls) -> str: ...
    @property
    @classmethod
    def ImageStitcherApplication(cls) -> str: ...
    @property
    @classmethod
    def PluginFolder(cls) -> str: ...
    @property
    @classmethod
    def SDKDownloaderApplication(cls) -> str: ...
    @property
    @classmethod
    def SettingsFolder(cls) -> str: ...
    @property
    @classmethod
    def TemplateFolders(cls) -> MutableSequence[str]: ...
    @property
    @classmethod
    def ToolsFolder(cls) -> str: ...
    @property
    @classmethod
    def TutorialFiles(cls) -> Iterable[str]: ...
    @property
    @classmethod
    def TutorialFolder(cls) -> str: ...
    @property
    @classmethod
    def UserObjectFolders(cls) -> MutableSequence[str]: ...
    @property
    @classmethod
    def VersionHistoryFile(cls) -> str: ...
    @property
    @classmethod
    def VersionHistoryUrl(cls) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @CustomAssemblyFolders.setter
    @classmethod
    def CustomAssemblyFolders(cls, Value: MutableSequence[str]) -> None: ...
    @overload
    @staticmethod
    def ShowFolderInExplorer(folder: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class FormattingChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class Global_Proc:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    @classmethod
    def Settings(cls) -> GH_SettingsServer: ...
    @property
    @classmethod
    def Version(cls) -> GH_Version: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def UiAdjust(value: int) -> int: ...
    @overload
    @staticmethod
    def UiAdjust(value: float) -> float: ...


class Instances:
    LoadOneByOne: bool
    @overload
    @staticmethod
    def add_CanvasCreated(obj: CanvasCreatedEventHandler) -> None: ...
    @overload
    @staticmethod
    def add_CanvasDestroyed(obj: CanvasDestroyedEventHandler) -> None: ...
    @overload
    @staticmethod
    def DocumentEditorFadeIn() -> None: ...
    @overload
    @staticmethod
    def DocumentEditorFadeOut() -> None: ...
    @overload
    @staticmethod
    def EnforceInvariantCulture() -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    @classmethod
    def ActiveCanvas(cls) -> GH_Canvas: ...
    @property
    @classmethod
    def ActiveDocument(cls) -> GH_Document: ...
    @property
    @classmethod
    def ActiveRhinoDoc(cls) -> RhinoDoc: ...
    @property
    @classmethod
    def AutoHideBanner(cls) -> bool: ...
    @property
    @classmethod
    def AutoShowBanner(cls) -> bool: ...
    @property
    @classmethod
    def BakeIcon24(cls) -> Bitmap: ...
    @property
    @classmethod
    def ComponentServer(cls) -> GH_ComponentServer: ...
    @property
    @classmethod
    def CursorServer(cls) -> GH_CursorServer: ...
    @property
    @classmethod
    def DocumentAssociationServer(cls) -> GH_DocumentAssociations: ...
    @property
    @classmethod
    def DocumentEditor(cls) -> GH_DocumentEditor: ...
    @property
    @classmethod
    def DocumentServer(cls) -> GH_DocumentServer: ...
    @property
    @classmethod
    def EtoDocumentEditor(cls) -> Window: ...
    @property
    @classmethod
    def GrasshopperPluginId(cls) -> Guid: ...
    @property
    @classmethod
    def IsComponentServer(cls) -> bool: ...
    @property
    @classmethod
    def IsCursorServer(cls) -> bool: ...
    @property
    @classmethod
    def IsDocumentAssociationServer(cls) -> bool: ...
    @property
    @classmethod
    def IsDocumentEditor(cls) -> bool: ...
    @property
    @classmethod
    def IsDocumentEditorOnTopOfViewports(cls) -> bool: ...
    @property
    @classmethod
    def IsDocumentServer(cls) -> bool: ...
    @property
    @classmethod
    def IsMarkovChain(cls) -> bool: ...
    @property
    @classmethod
    def IsMruServer(cls) -> bool: ...
    @property
    @classmethod
    def IsRemotePanelVisible(cls) -> bool: ...
    @property
    @classmethod
    def MarkovChain(cls) -> GH_MarkovChain: ...
    @property
    @classmethod
    def MruServer(cls) -> GH_MRU_Server: ...
    @property
    @classmethod
    def RcpPanel(cls) -> RemoteControlPanel: ...
    @property
    @classmethod
    def RunningHeadless(cls) -> bool: ...
    @property
    @classmethod
    def Settings(cls) -> GH_SettingsServer: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def HideRemotePanel() -> bool: ...
    @overload
    @staticmethod
    def Interop() -> object: ...
    @overload
    @staticmethod
    def InvalidateCanvas() -> None: ...
    @overload
    @staticmethod
    def MyTypes() -> Iterable[type]: ...
    @overload
    @staticmethod
    def RedrawAll() -> None: ...
    @overload
    @staticmethod
    def RedrawCanvas() -> None: ...
    @overload
    @staticmethod
    def ReloadMemoryAssemblies() -> MutableSequence[str]: ...
    @overload
    @staticmethod
    def remove_CanvasCreated(obj: CanvasCreatedEventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_CanvasDestroyed(obj: CanvasDestroyedEventHandler) -> None: ...
    @AutoHideBanner.setter
    @classmethod
    def AutoHideBanner(cls, AutoPropertyValue: bool) -> None: ...
    @AutoShowBanner.setter
    @classmethod
    def AutoShowBanner(cls, AutoPropertyValue: bool) -> None: ...
    @overload
    @staticmethod
    def ShowRemotePanel() -> bool: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def UnloadAllObjects() -> None: ...


class LoadMechanismChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, pluginName: str, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, pluginName: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class LoadProtectionChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, pluginName: str, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, pluginName: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class PanelDefaultFontChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class PreviewBumpZBufferChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class PreviewGumballsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class PreviewMeshEdgesChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class PreviewPlaneRadiusChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class PreviewPointStyleChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class PruderyLevelChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RibbonAllIconsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RibbonDrawTabIconsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RibbonSeparatorsChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RibbonVisibleChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class TemplateFileChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class TooltipWiggleRadiusChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class Tracing:
    @overload
    @staticmethod
    def Assert(assert_id: Guid) -> None: ...
    @overload
    @staticmethod
    def Assert(assert_id: Guid, message: str) -> None: ...
    @overload
    @staticmethod
    def Assert(assert_id: Guid, exception: Exception) -> None: ...
    @overload
    @staticmethod
    def Assert(assert_id: Guid, message: str, exception: Exception) -> None: ...
    @overload
    @staticmethod
    def DebugLogAddEntry(message: str) -> None: ...
    @overload
    @staticmethod
    def DebugLogBeginBlock(name: str) -> None: ...
    @overload
    @staticmethod
    def DebugLogEndBlock() -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class UiScaleChangedEventHandler:
    @overload
    def __init__(self, TargetObject: object, TargetMethod: IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: AsyncCallback, DelegateAsyncState: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class Utility:
    @overload
    @staticmethod
    def DocumentAngleTolerance() -> float: ...
    @overload
    @staticmethod
    def DocumentTolerance() -> float: ...
    @overload
    @staticmethod
    def DocumentUnits() -> str: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @staticmethod
    def FixNewlines(text: str) -> str: ...
    @overload
    @staticmethod
    def FixNewlines(text: str, newLinePattern: str) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def InvokeDownloader(sourceUri: str, targetUri: str, silent: bool) -> None: ...
    @overload
    @staticmethod
    def InvokeGetter(target: object, property: str) -> object: ...
    @overload
    @staticmethod
    def InvokeGetterSafe(target: object, property: str) -> object: ...
    @overload
    @staticmethod
    def InvokeMethod(target: object, method: str) -> object: ...
    @overload
    @staticmethod
    def InvokeMethod(target: object, method: str, params: Iterable[object]) -> object: ...
    @overload
    @staticmethod
    def InvokeMethodSafe(target: object, method: str) -> object: ...
    @overload
    @staticmethod
    def InvokeMethodSafe(target: object, method: str, params: Iterable[object]) -> object: ...
    @overload
    @staticmethod
    def InvokeSetter(target: object, property: str, value: object) -> None: ...
    @overload
    @staticmethod
    def InvokeSetterSafe(target: object, property: str, value: object) -> None: ...
    @overload
    @staticmethod
    def LikeOperator(text: str, pattern: str) -> bool: ...
    @overload
    @staticmethod
    def SetDefaultTolerances(absoluteTolerance: float, angleToleranceDegrees: float) -> None: ...
    @overload
    @staticmethod
    def SetDefaultUnits(modelUnits: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class Versioning:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    @classmethod
    def BuildDate(cls) -> str: ...
    @property
    @classmethod
    def Version(cls) -> GH_Version: ...
    @property
    @classmethod
    def VersionString(cls) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def SyncVersionHistoryData() -> None: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def VersionHistoryData() -> Iterable[str]: ...

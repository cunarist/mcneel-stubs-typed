from typing import Tuple, Iterable, overload
from enum import Enum



from ..Serialization import GH_Archive
class GH_ArchiveMessageViewer:
    def __init__(self): ...
    def Activate(self) -> None: ...
    def add_Activated(self, value: EventHandler) -> None: ...
    @overload
    def add_AutoSizeChanged(self, value: EventHandler) -> None: ...
    @overload
    def add_AutoSizeChanged(self, value: EventHandler) -> None: ...
    @overload
    def add_AutoValidateChanged(self, value: EventHandler) -> None: ...
    @overload
    def add_AutoValidateChanged(self, value: EventHandler) -> None: ...
    def add_BackColorChanged(self, value: EventHandler) -> None: ...
    def add_BackgroundImageChanged(self, value: EventHandler) -> None: ...
    def add_BackgroundImageLayoutChanged(self, value: EventHandler) -> None: ...
    def add_BindingContextChanged(self, value: EventHandler) -> None: ...
    def add_CausesValidationChanged(self, value: EventHandler) -> None: ...
    def add_ChangeUICues(self, value: UICuesEventHandler) -> None: ...
    def add_Click(self, value: EventHandler) -> None: ...
    def add_ClientSizeChanged(self, value: EventHandler) -> None: ...
    def add_Closed(self, value: EventHandler) -> None: ...
    def add_Closing(self, value: CancelEventHandler) -> None: ...
    def add_ContextMenuChanged(self, value: EventHandler) -> None: ...
    def add_ContextMenuStripChanged(self, value: EventHandler) -> None: ...
    def add_ControlAdded(self, value: ControlEventHandler) -> None: ...
    def add_ControlRemoved(self, value: ControlEventHandler) -> None: ...
    def add_CursorChanged(self, value: EventHandler) -> None: ...
    def add_Deactivate(self, value: EventHandler) -> None: ...
    def add_Disposed(self, value: EventHandler) -> None: ...
    def add_DockChanged(self, value: EventHandler) -> None: ...
    def add_DoubleClick(self, value: EventHandler) -> None: ...
    def add_DpiChanged(self, value: DpiChangedEventHandler) -> None: ...
    def add_DpiChangedAfterParent(self, value: EventHandler) -> None: ...
    def add_DpiChangedBeforeParent(self, value: EventHandler) -> None: ...
    def add_DragDrop(self, value: DragEventHandler) -> None: ...
    def add_DragEnter(self, value: DragEventHandler) -> None: ...
    def add_DragLeave(self, value: EventHandler) -> None: ...
    def add_DragOver(self, value: DragEventHandler) -> None: ...
    def add_EnabledChanged(self, value: EventHandler) -> None: ...
    def add_Enter(self, value: EventHandler) -> None: ...
    def add_FontChanged(self, value: EventHandler) -> None: ...
    def add_ForeColorChanged(self, value: EventHandler) -> None: ...
    def add_FormClosed(self, value: FormClosedEventHandler) -> None: ...
    def add_FormClosing(self, value: FormClosingEventHandler) -> None: ...
    def add_GiveFeedback(self, value: GiveFeedbackEventHandler) -> None: ...
    def add_GotFocus(self, value: EventHandler) -> None: ...
    def add_HandleCreated(self, value: EventHandler) -> None: ...
    def add_HandleDestroyed(self, value: EventHandler) -> None: ...
    def add_HelpButtonClicked(self, value: CancelEventHandler) -> None: ...
    def add_HelpRequested(self, value: HelpEventHandler) -> None: ...
    def add_ImeModeChanged(self, value: EventHandler) -> None: ...
    def add_InputLanguageChanged(self, value: InputLanguageChangedEventHandler) -> None: ...
    def add_InputLanguageChanging(self, value: InputLanguageChangingEventHandler) -> None: ...
    def add_Invalidated(self, value: InvalidateEventHandler) -> None: ...
    def add_KeyDown(self, value: KeyEventHandler) -> None: ...
    def add_KeyPress(self, value: KeyPressEventHandler) -> None: ...
    def add_KeyUp(self, value: KeyEventHandler) -> None: ...
    def add_Layout(self, value: LayoutEventHandler) -> None: ...
    def add_Leave(self, value: EventHandler) -> None: ...
    def add_Load(self, value: EventHandler) -> None: ...
    def add_LocationChanged(self, value: EventHandler) -> None: ...
    def add_LostFocus(self, value: EventHandler) -> None: ...
    @overload
    def add_MarginChanged(self, value: EventHandler) -> None: ...
    @overload
    def add_MarginChanged(self, value: EventHandler) -> None: ...
    def add_MaximizedBoundsChanged(self, value: EventHandler) -> None: ...
    def add_MaximumSizeChanged(self, value: EventHandler) -> None: ...
    def add_MdiChildActivate(self, value: EventHandler) -> None: ...
    def add_MenuComplete(self, value: EventHandler) -> None: ...
    def add_MenuStart(self, value: EventHandler) -> None: ...
    def add_MinimumSizeChanged(self, value: EventHandler) -> None: ...
    def add_MouseCaptureChanged(self, value: EventHandler) -> None: ...
    def add_MouseClick(self, value: MouseEventHandler) -> None: ...
    def add_MouseDoubleClick(self, value: MouseEventHandler) -> None: ...
    def add_MouseDown(self, value: MouseEventHandler) -> None: ...
    def add_MouseEnter(self, value: EventHandler) -> None: ...
    def add_MouseHover(self, value: EventHandler) -> None: ...
    def add_MouseLeave(self, value: EventHandler) -> None: ...
    def add_MouseMove(self, value: MouseEventHandler) -> None: ...
    def add_MouseUp(self, value: MouseEventHandler) -> None: ...
    def add_MouseWheel(self, value: MouseEventHandler) -> None: ...
    def add_Move(self, value: EventHandler) -> None: ...
    def add_PaddingChanged(self, value: EventHandler) -> None: ...
    def add_Paint(self, value: PaintEventHandler) -> None: ...
    def add_ParentChanged(self, value: EventHandler) -> None: ...
    def add_PreviewKeyDown(self, value: PreviewKeyDownEventHandler) -> None: ...
    def add_QueryAccessibilityHelp(self, value: QueryAccessibilityHelpEventHandler) -> None: ...
    def add_QueryContinueDrag(self, value: QueryContinueDragEventHandler) -> None: ...
    def add_RegionChanged(self, value: EventHandler) -> None: ...
    def add_Resize(self, value: EventHandler) -> None: ...
    def add_ResizeBegin(self, value: EventHandler) -> None: ...
    def add_ResizeEnd(self, value: EventHandler) -> None: ...
    def add_RightToLeftChanged(self, value: EventHandler) -> None: ...
    def add_RightToLeftLayoutChanged(self, value: EventHandler) -> None: ...
    def add_Scroll(self, value: ScrollEventHandler) -> None: ...
    def add_Shown(self, value: EventHandler) -> None: ...
    def add_SizeChanged(self, value: EventHandler) -> None: ...
    def add_StyleChanged(self, value: EventHandler) -> None: ...
    def add_SystemColorsChanged(self, value: EventHandler) -> None: ...
    @overload
    def add_TabIndexChanged(self, value: EventHandler) -> None: ...
    @overload
    def add_TabIndexChanged(self, value: EventHandler) -> None: ...
    @overload
    def add_TabStopChanged(self, value: EventHandler) -> None: ...
    @overload
    def add_TabStopChanged(self, value: EventHandler) -> None: ...
    def add_TextChanged(self, value: EventHandler) -> None: ...
    def add_Validated(self, value: EventHandler) -> None: ...
    def add_Validating(self, value: CancelEventHandler) -> None: ...
    def add_VisibleChanged(self, value: EventHandler) -> None: ...
    def AddOwnedForm(self, ownedForm: Form) -> None: ...
    @overload
    def BeginInvoke(self, method: Delegate) -> IAsyncResult: ...
    @overload
    def BeginInvoke(self, method: Delegate, args: Iterable[Object]) -> IAsyncResult: ...
    def BringToFront(self) -> None: ...
    def Close(self) -> None: ...
    def Contains(self, ctl: Control) -> bool: ...
    def CreateControl(self) -> None: ...
    def CreateGraphics(self) -> Graphics: ...
    def CreateObjRef(self, requestedType: Type) -> ObjRef: ...
    def Dispose(self) -> None: ...
    def DoDragDrop(self, data: Object, allowedEffects: DragDropEffects) -> DragDropEffects: ...
    def DrawToBitmap(self, bitmap: Bitmap, targetBounds: Rectangle) -> None: ...
    def EndInvoke(self, asyncResult: IAsyncResult) -> Object: ...
    def Equals(self, obj: Object) -> bool: ...
    def FindForm(self) -> Form: ...
    def Focus(self) -> bool: ...
    @property
    def AcceptButton(self) -> IButtonControl: ...
    @property
    def AccessibilityObject(self) -> AccessibleObject: ...
    @property
    def AccessibleDefaultActionDescription(self) -> str: ...
    @property
    def AccessibleDescription(self) -> str: ...
    @property
    def AccessibleName(self) -> str: ...
    @property
    def AccessibleRole(self) -> AccessibleRole: ...
    @property
    def ActiveControl(self) -> Control: ...
    @property
    def ActiveMdiChild(self) -> Form: ...
    @property
    def AllowDrop(self) -> bool: ...
    @property
    def AllowTransparency(self) -> bool: ...
    @property
    def Anchor(self) -> AnchorStyles: ...
    @property
    def AutoScale(self) -> bool: ...
    @property
    def AutoScaleBaseSize(self) -> Size: ...
    @property
    def AutoScaleDimensions(self) -> SizeF: ...
    @property
    def AutoScaleMode(self) -> AutoScaleMode: ...
    @property
    def AutoScroll(self) -> bool: ...
    @property
    def AutoScrollMargin(self) -> Size: ...
    @property
    def AutoScrollMinSize(self) -> Size: ...
    @property
    def AutoScrollOffset(self) -> Point: ...
    @property
    def AutoScrollPosition(self) -> Point: ...
    @property
    def AutoSize(self) -> bool: ...
    @property
    def AutoSizeMode(self) -> AutoSizeMode: ...
    @property
    def AutoValidate(self) -> AutoValidate: ...
    @property
    def BackColor(self) -> Color: ...
    @property
    def BackgroundImage(self) -> Image: ...
    @property
    def BackgroundImageLayout(self) -> ImageLayout: ...
    @property
    def BindingContext(self) -> BindingContext: ...
    @property
    def Bottom(self) -> int: ...
    @property
    def Bounds(self) -> Rectangle: ...
    @property
    def CancelButton(self) -> IButtonControl: ...
    @property
    def CanFocus(self) -> bool: ...
    @property
    def CanSelect(self) -> bool: ...
    @property
    def Capture(self) -> bool: ...
    @property
    def CausesValidation(self) -> bool: ...
    @property
    def ClientRectangle(self) -> Rectangle: ...
    @property
    def ClientSize(self) -> Size: ...
    @property
    def ClientSize(self) -> Size: ...
    @property
    def CompanyName(self) -> str: ...
    @property
    def Container(self) -> IContainer: ...
    @property
    def ContainsFocus(self) -> bool: ...
    @property
    def ContextMenu(self) -> ContextMenu: ...
    @property
    def ContextMenuStrip(self) -> ContextMenuStrip: ...
    @property
    def ControlBox(self) -> bool: ...
    @property
    def Controls(self) -> ControlCollection: ...
    @property
    def Created(self) -> bool: ...
    @property
    def CurrentAutoScaleDimensions(self) -> SizeF: ...
    @property
    def Cursor(self) -> Cursor: ...
    @property
    def DataBindings(self) -> ControlBindingsCollection: ...
    @property
    def DesktopBounds(self) -> Rectangle: ...
    @property
    def DesktopLocation(self) -> Point: ...
    @property
    def DeviceDpi(self) -> int: ...
    @property
    def DialogResult(self) -> DialogResult: ...
    @property
    def DisplayRectangle(self) -> Rectangle: ...
    @property
    def Disposing(self) -> bool: ...
    @property
    def Dock(self) -> DockStyle: ...
    @property
    def DockPadding(self) -> DockPaddingEdges: ...
    @property
    def Enabled(self) -> bool: ...
    @property
    def Focused(self) -> bool: ...
    @property
    def Font(self) -> Font: ...
    @property
    def ForeColor(self) -> Color: ...
    @property
    def FormBorderStyle(self) -> FormBorderStyle: ...
    @property
    def Handle(self) -> IntPtr: ...
    @property
    def HasChildren(self) -> bool: ...
    @property
    def Height(self) -> int: ...
    @property
    def HelpButton(self) -> bool: ...
    @property
    def HorizontalScroll(self) -> HScrollProperties: ...
    @property
    def Icon(self) -> Icon: ...
    @property
    def ImeMode(self) -> ImeMode: ...
    @property
    def InvokeRequired(self) -> bool: ...
    @property
    def IsAccessible(self) -> bool: ...
    @property
    def IsDisposed(self) -> bool: ...
    @property
    def IsHandleCreated(self) -> bool: ...
    @property
    def IsMdiChild(self) -> bool: ...
    @property
    def IsMdiContainer(self) -> bool: ...
    @property
    def IsMirrored(self) -> bool: ...
    @property
    def IsRestrictedWindow(self) -> bool: ...
    @property
    def KeyPreview(self) -> bool: ...
    @property
    def LayoutEngine(self) -> LayoutEngine: ...
    @property
    def Left(self) -> int: ...
    @property
    def Location(self) -> Point: ...
    @property
    def Location(self) -> Point: ...
    @property
    def MainMenuStrip(self) -> MenuStrip: ...
    @property
    def Margin(self) -> Padding: ...
    @property
    def Margin(self) -> Padding: ...
    @property
    def MaximizeBox(self) -> bool: ...
    @property
    def MaximumSize(self) -> Size: ...
    @property
    def MdiChildren(self) -> Iterable[Form]: ...
    @property
    def MdiParent(self) -> Form: ...
    @property
    def Menu(self) -> MainMenu: ...
    @property
    def MergedMenu(self) -> MainMenu: ...
    @property
    def MinimizeBox(self) -> bool: ...
    @property
    def MinimumSize(self) -> Size: ...
    @property
    def Modal(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def Opacity(self) -> float: ...
    @property
    def OwnedForms(self) -> Iterable[Form]: ...
    @property
    def Owner(self) -> Form: ...
    @property
    def Padding(self) -> Padding: ...
    @property
    def Parent(self) -> Control: ...
    @property
    def ParentForm(self) -> Form: ...
    @property
    def PreferredSize(self) -> Size: ...
    @property
    def ProductName(self) -> str: ...
    @property
    def ProductVersion(self) -> str: ...
    @property
    def RecreatingHandle(self) -> bool: ...
    @property
    def Region(self) -> Region: ...
    @property
    def RestoreBounds(self) -> Rectangle: ...
    @property
    def Right(self) -> int: ...
    @property
    def RightToLeft(self) -> RightToLeft: ...
    @property
    def RightToLeftLayout(self) -> bool: ...
    @property
    def ShowIcon(self) -> bool: ...
    @property
    def ShowInTaskbar(self) -> bool: ...
    @property
    def Site(self) -> ISite: ...
    @property
    def Size(self) -> Size: ...
    @property
    def Size(self) -> Size: ...
    @property
    def SizeGripStyle(self) -> SizeGripStyle: ...
    @property
    def StartPosition(self) -> FormStartPosition: ...
    @property
    def TabIndex(self) -> int: ...
    @property
    def TabIndex(self) -> int: ...
    @property
    def TabStop(self) -> bool: ...
    @property
    def TabStop(self) -> bool: ...
    @property
    def Tag(self) -> Object: ...
    @property
    def Text(self) -> str: ...
    @property
    def Top(self) -> int: ...
    @property
    def TopLevel(self) -> bool: ...
    @property
    def TopLevelControl(self) -> Control: ...
    @property
    def TopMost(self) -> bool: ...
    @property
    def TransparencyKey(self) -> Color: ...
    @property
    def UseWaitCursor(self) -> bool: ...
    @property
    def VerticalScroll(self) -> VScrollProperties: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def Width(self) -> int: ...
    @property
    def WindowState(self) -> FormWindowState: ...
    @property
    def WindowTarget(self) -> IWindowTarget: ...
    @overload
    def GetChildAtPoint(self, pt: Point) -> Control: ...
    @overload
    def GetChildAtPoint(self, pt: Point, skipValue: GetChildAtPointSkip) -> Control: ...
    def GetContainerControl(self) -> IContainerControl: ...
    def GetHashCode(self) -> int: ...
    def GetLifetimeService(self) -> Object: ...
    def GetNextControl(self, ctl: Control, forward: bool) -> Control: ...
    def GetPreferredSize(self, proposedSize: Size) -> Size: ...
    def GetType(self) -> Type: ...
    def Hide(self) -> None: ...
    def InitializeLifetimeService(self) -> Object: ...
    @overload
    def Invalidate(self) -> None: ...
    @overload
    def Invalidate(self, rc: Rectangle) -> None: ...
    @overload
    def Invalidate(self, invalidateChildren: bool) -> None: ...
    @overload
    def Invalidate(self, region: Region) -> None: ...
    @overload
    def Invalidate(self, rc: Rectangle, invalidateChildren: bool) -> None: ...
    @overload
    def Invalidate(self, region: Region, invalidateChildren: bool) -> None: ...
    @overload
    def Invoke(self, method: Delegate) -> Object: ...
    @overload
    def Invoke(self, method: Delegate, args: Iterable[Object]) -> Object: ...
    def LayoutMdi(self, value: MdiLayout) -> None: ...
    @overload
    def LogicalToDeviceUnits(self, value: Size) -> Size: ...
    @overload
    def LogicalToDeviceUnits(self, value: int) -> int: ...
    def PerformAutoScale(self) -> None: ...
    @overload
    def PerformLayout(self) -> None: ...
    @overload
    def PerformLayout(self, affectedControl: Control, affectedProperty: str) -> None: ...
    def PointToClient(self, p: Point) -> Point: ...
    def PointToScreen(self, p: Point) -> Point: ...
    def PreProcessControlMessage(self, msg: Message) -> Tuple[PreProcessControlState, Message]: ...
    def PreProcessMessage(self, msg: Message) -> Tuple[bool, Message]: ...
    def RectangleToClient(self, r: Rectangle) -> Rectangle: ...
    def RectangleToScreen(self, r: Rectangle) -> Rectangle: ...
    def Refresh(self) -> None: ...
    def remove_Activated(self, value: EventHandler) -> None: ...
    @overload
    def remove_AutoSizeChanged(self, value: EventHandler) -> None: ...
    @overload
    def remove_AutoSizeChanged(self, value: EventHandler) -> None: ...
    @overload
    def remove_AutoValidateChanged(self, value: EventHandler) -> None: ...
    @overload
    def remove_AutoValidateChanged(self, value: EventHandler) -> None: ...
    def remove_BackColorChanged(self, value: EventHandler) -> None: ...
    def remove_BackgroundImageChanged(self, value: EventHandler) -> None: ...
    def remove_BackgroundImageLayoutChanged(self, value: EventHandler) -> None: ...
    def remove_BindingContextChanged(self, value: EventHandler) -> None: ...
    def remove_CausesValidationChanged(self, value: EventHandler) -> None: ...
    def remove_ChangeUICues(self, value: UICuesEventHandler) -> None: ...
    def remove_Click(self, value: EventHandler) -> None: ...
    def remove_ClientSizeChanged(self, value: EventHandler) -> None: ...
    def remove_Closed(self, value: EventHandler) -> None: ...
    def remove_Closing(self, value: CancelEventHandler) -> None: ...
    def remove_ContextMenuChanged(self, value: EventHandler) -> None: ...
    def remove_ContextMenuStripChanged(self, value: EventHandler) -> None: ...
    def remove_ControlAdded(self, value: ControlEventHandler) -> None: ...
    def remove_ControlRemoved(self, value: ControlEventHandler) -> None: ...
    def remove_CursorChanged(self, value: EventHandler) -> None: ...
    def remove_Deactivate(self, value: EventHandler) -> None: ...
    def remove_Disposed(self, value: EventHandler) -> None: ...
    def remove_DockChanged(self, value: EventHandler) -> None: ...
    def remove_DoubleClick(self, value: EventHandler) -> None: ...
    def remove_DpiChanged(self, value: DpiChangedEventHandler) -> None: ...
    def remove_DpiChangedAfterParent(self, value: EventHandler) -> None: ...
    def remove_DpiChangedBeforeParent(self, value: EventHandler) -> None: ...
    def remove_DragDrop(self, value: DragEventHandler) -> None: ...
    def remove_DragEnter(self, value: DragEventHandler) -> None: ...
    def remove_DragLeave(self, value: EventHandler) -> None: ...
    def remove_DragOver(self, value: DragEventHandler) -> None: ...
    def remove_EnabledChanged(self, value: EventHandler) -> None: ...
    def remove_Enter(self, value: EventHandler) -> None: ...
    def remove_FontChanged(self, value: EventHandler) -> None: ...
    def remove_ForeColorChanged(self, value: EventHandler) -> None: ...
    def remove_FormClosed(self, value: FormClosedEventHandler) -> None: ...
    def remove_FormClosing(self, value: FormClosingEventHandler) -> None: ...
    def remove_GiveFeedback(self, value: GiveFeedbackEventHandler) -> None: ...
    def remove_GotFocus(self, value: EventHandler) -> None: ...
    def remove_HandleCreated(self, value: EventHandler) -> None: ...
    def remove_HandleDestroyed(self, value: EventHandler) -> None: ...
    def remove_HelpButtonClicked(self, value: CancelEventHandler) -> None: ...
    def remove_HelpRequested(self, value: HelpEventHandler) -> None: ...
    def remove_ImeModeChanged(self, value: EventHandler) -> None: ...
    def remove_InputLanguageChanged(self, value: InputLanguageChangedEventHandler) -> None: ...
    def remove_InputLanguageChanging(self, value: InputLanguageChangingEventHandler) -> None: ...
    def remove_Invalidated(self, value: InvalidateEventHandler) -> None: ...
    def remove_KeyDown(self, value: KeyEventHandler) -> None: ...
    def remove_KeyPress(self, value: KeyPressEventHandler) -> None: ...
    def remove_KeyUp(self, value: KeyEventHandler) -> None: ...
    def remove_Layout(self, value: LayoutEventHandler) -> None: ...
    def remove_Leave(self, value: EventHandler) -> None: ...
    def remove_Load(self, value: EventHandler) -> None: ...
    def remove_LocationChanged(self, value: EventHandler) -> None: ...
    def remove_LostFocus(self, value: EventHandler) -> None: ...
    @overload
    def remove_MarginChanged(self, value: EventHandler) -> None: ...
    @overload
    def remove_MarginChanged(self, value: EventHandler) -> None: ...
    def remove_MaximizedBoundsChanged(self, value: EventHandler) -> None: ...
    def remove_MaximumSizeChanged(self, value: EventHandler) -> None: ...
    def remove_MdiChildActivate(self, value: EventHandler) -> None: ...
    def remove_MenuComplete(self, value: EventHandler) -> None: ...
    def remove_MenuStart(self, value: EventHandler) -> None: ...
    def remove_MinimumSizeChanged(self, value: EventHandler) -> None: ...
    def remove_MouseCaptureChanged(self, value: EventHandler) -> None: ...
    def remove_MouseClick(self, value: MouseEventHandler) -> None: ...
    def remove_MouseDoubleClick(self, value: MouseEventHandler) -> None: ...
    def remove_MouseDown(self, value: MouseEventHandler) -> None: ...
    def remove_MouseEnter(self, value: EventHandler) -> None: ...
    def remove_MouseHover(self, value: EventHandler) -> None: ...
    def remove_MouseLeave(self, value: EventHandler) -> None: ...
    def remove_MouseMove(self, value: MouseEventHandler) -> None: ...
    def remove_MouseUp(self, value: MouseEventHandler) -> None: ...
    def remove_MouseWheel(self, value: MouseEventHandler) -> None: ...
    def remove_Move(self, value: EventHandler) -> None: ...
    def remove_PaddingChanged(self, value: EventHandler) -> None: ...
    def remove_Paint(self, value: PaintEventHandler) -> None: ...
    def remove_ParentChanged(self, value: EventHandler) -> None: ...
    def remove_PreviewKeyDown(self, value: PreviewKeyDownEventHandler) -> None: ...
    def remove_QueryAccessibilityHelp(self, value: QueryAccessibilityHelpEventHandler) -> None: ...
    def remove_QueryContinueDrag(self, value: QueryContinueDragEventHandler) -> None: ...
    def remove_RegionChanged(self, value: EventHandler) -> None: ...
    def remove_Resize(self, value: EventHandler) -> None: ...
    def remove_ResizeBegin(self, value: EventHandler) -> None: ...
    def remove_ResizeEnd(self, value: EventHandler) -> None: ...
    def remove_RightToLeftChanged(self, value: EventHandler) -> None: ...
    def remove_RightToLeftLayoutChanged(self, value: EventHandler) -> None: ...
    def remove_Scroll(self, value: ScrollEventHandler) -> None: ...
    def remove_Shown(self, value: EventHandler) -> None: ...
    def remove_SizeChanged(self, value: EventHandler) -> None: ...
    def remove_StyleChanged(self, value: EventHandler) -> None: ...
    def remove_SystemColorsChanged(self, value: EventHandler) -> None: ...
    @overload
    def remove_TabIndexChanged(self, value: EventHandler) -> None: ...
    @overload
    def remove_TabIndexChanged(self, value: EventHandler) -> None: ...
    @overload
    def remove_TabStopChanged(self, value: EventHandler) -> None: ...
    @overload
    def remove_TabStopChanged(self, value: EventHandler) -> None: ...
    def remove_TextChanged(self, value: EventHandler) -> None: ...
    def remove_Validated(self, value: EventHandler) -> None: ...
    def remove_Validating(self, value: CancelEventHandler) -> None: ...
    def remove_VisibleChanged(self, value: EventHandler) -> None: ...
    def RemoveOwnedForm(self, ownedForm: Form) -> None: ...
    def ResetBackColor(self) -> None: ...
    def ResetBindings(self) -> None: ...
    def ResetCursor(self) -> None: ...
    def ResetFont(self) -> None: ...
    def ResetForeColor(self) -> None: ...
    def ResetImeMode(self) -> None: ...
    def ResetRightToLeft(self) -> None: ...
    def ResetText(self) -> None: ...
    @overload
    def ResumeLayout(self) -> None: ...
    @overload
    def ResumeLayout(self, performLayout: bool) -> None: ...
    def Scale(self, factor: SizeF) -> None: ...
    def ScaleBitmapLogicalToDevice(self, logicalBitmap: Bitmap) -> Tuple[Bitmap]: ...
    def ScrollControlIntoView(self, activeControl: Control) -> None: ...
    def Select(self) -> None: ...
    def SelectNextControl(self, ctl: Control, forward: bool, tabStopOnly: bool, nested: bool, wrap: bool) -> bool: ...
    def SendToBack(self) -> None: ...
    @AcceptButton.setter
    def AcceptButton(self, value: IButtonControl) -> None: ...
    @AccessibleDefaultActionDescription.setter
    def AccessibleDefaultActionDescription(self, value: str) -> None: ...
    @AccessibleDescription.setter
    def AccessibleDescription(self, value: str) -> None: ...
    @AccessibleName.setter
    def AccessibleName(self, value: str) -> None: ...
    @AccessibleRole.setter
    def AccessibleRole(self, value: AccessibleRole) -> None: ...
    @ActiveControl.setter
    def ActiveControl(self, value: Control) -> None: ...
    @AllowDrop.setter
    def AllowDrop(self, value: bool) -> None: ...
    @AllowTransparency.setter
    def AllowTransparency(self, value: bool) -> None: ...
    @Anchor.setter
    def Anchor(self, value: AnchorStyles) -> None: ...
    @AutoScale.setter
    def AutoScale(self, value: bool) -> None: ...
    @AutoScaleBaseSize.setter
    def AutoScaleBaseSize(self, value: Size) -> None: ...
    @AutoScaleDimensions.setter
    def AutoScaleDimensions(self, value: SizeF) -> None: ...
    @AutoScaleMode.setter
    def AutoScaleMode(self, value: AutoScaleMode) -> None: ...
    @AutoScroll.setter
    def AutoScroll(self, value: bool) -> None: ...
    @AutoScrollMargin.setter
    def AutoScrollMargin(self, value: Size) -> None: ...
    @AutoScrollMinSize.setter
    def AutoScrollMinSize(self, value: Size) -> None: ...
    @AutoScrollOffset.setter
    def AutoScrollOffset(self, value: Point) -> None: ...
    @AutoScrollPosition.setter
    def AutoScrollPosition(self, value: Point) -> None: ...
    @AutoSize.setter
    def AutoSize(self, value: bool) -> None: ...
    @AutoSizeMode.setter
    def AutoSizeMode(self, value: AutoSizeMode) -> None: ...
    @AutoValidate.setter
    def AutoValidate(self, value: AutoValidate) -> None: ...
    @BackColor.setter
    def BackColor(self, value: Color) -> None: ...
    @BackgroundImage.setter
    def BackgroundImage(self, value: Image) -> None: ...
    @BackgroundImageLayout.setter
    def BackgroundImageLayout(self, value: ImageLayout) -> None: ...
    @BindingContext.setter
    def BindingContext(self, value: BindingContext) -> None: ...
    @Bounds.setter
    def Bounds(self, value: Rectangle) -> None: ...
    @CancelButton.setter
    def CancelButton(self, value: IButtonControl) -> None: ...
    @Capture.setter
    def Capture(self, value: bool) -> None: ...
    @CausesValidation.setter
    def CausesValidation(self, value: bool) -> None: ...
    @ClientSize.setter
    def ClientSize(self, value: Size) -> None: ...
    @ClientSize.setter
    def ClientSize(self, value: Size) -> None: ...
    @ContextMenu.setter
    def ContextMenu(self, value: ContextMenu) -> None: ...
    @ContextMenuStrip.setter
    def ContextMenuStrip(self, value: ContextMenuStrip) -> None: ...
    @ControlBox.setter
    def ControlBox(self, value: bool) -> None: ...
    @Cursor.setter
    def Cursor(self, value: Cursor) -> None: ...
    @DesktopBounds.setter
    def DesktopBounds(self, value: Rectangle) -> None: ...
    @DesktopLocation.setter
    def DesktopLocation(self, value: Point) -> None: ...
    @DialogResult.setter
    def DialogResult(self, value: DialogResult) -> None: ...
    @Dock.setter
    def Dock(self, value: DockStyle) -> None: ...
    @Enabled.setter
    def Enabled(self, value: bool) -> None: ...
    @Font.setter
    def Font(self, value: Font) -> None: ...
    @ForeColor.setter
    def ForeColor(self, value: Color) -> None: ...
    @FormBorderStyle.setter
    def FormBorderStyle(self, value: FormBorderStyle) -> None: ...
    @Height.setter
    def Height(self, value: int) -> None: ...
    @HelpButton.setter
    def HelpButton(self, value: bool) -> None: ...
    @Icon.setter
    def Icon(self, value: Icon) -> None: ...
    @ImeMode.setter
    def ImeMode(self, value: ImeMode) -> None: ...
    @IsAccessible.setter
    def IsAccessible(self, value: bool) -> None: ...
    @IsMdiContainer.setter
    def IsMdiContainer(self, value: bool) -> None: ...
    @KeyPreview.setter
    def KeyPreview(self, value: bool) -> None: ...
    @Left.setter
    def Left(self, value: int) -> None: ...
    @Location.setter
    def Location(self, value: Point) -> None: ...
    @Location.setter
    def Location(self, value: Point) -> None: ...
    @MainMenuStrip.setter
    def MainMenuStrip(self, value: MenuStrip) -> None: ...
    @Margin.setter
    def Margin(self, value: Padding) -> None: ...
    @Margin.setter
    def Margin(self, value: Padding) -> None: ...
    @MaximizeBox.setter
    def MaximizeBox(self, value: bool) -> None: ...
    @MaximumSize.setter
    def MaximumSize(self, value: Size) -> None: ...
    @MdiParent.setter
    def MdiParent(self, value: Form) -> None: ...
    @Menu.setter
    def Menu(self, value: MainMenu) -> None: ...
    @MinimizeBox.setter
    def MinimizeBox(self, value: bool) -> None: ...
    @MinimumSize.setter
    def MinimumSize(self, value: Size) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @Opacity.setter
    def Opacity(self, value: float) -> None: ...
    @Owner.setter
    def Owner(self, value: Form) -> None: ...
    @Padding.setter
    def Padding(self, value: Padding) -> None: ...
    @Parent.setter
    def Parent(self, value: Control) -> None: ...
    @Region.setter
    def Region(self, value: Region) -> None: ...
    @RightToLeft.setter
    def RightToLeft(self, value: RightToLeft) -> None: ...
    @RightToLeftLayout.setter
    def RightToLeftLayout(self, value: bool) -> None: ...
    @ShowIcon.setter
    def ShowIcon(self, value: bool) -> None: ...
    @ShowInTaskbar.setter
    def ShowInTaskbar(self, value: bool) -> None: ...
    @Site.setter
    def Site(self, value: ISite) -> None: ...
    @Size.setter
    def Size(self, value: Size) -> None: ...
    @Size.setter
    def Size(self, value: Size) -> None: ...
    @SizeGripStyle.setter
    def SizeGripStyle(self, value: SizeGripStyle) -> None: ...
    @StartPosition.setter
    def StartPosition(self, value: FormStartPosition) -> None: ...
    @TabIndex.setter
    def TabIndex(self, value: int) -> None: ...
    @TabIndex.setter
    def TabIndex(self, value: int) -> None: ...
    @TabStop.setter
    def TabStop(self, value: bool) -> None: ...
    @TabStop.setter
    def TabStop(self, value: bool) -> None: ...
    @Tag.setter
    def Tag(self, value: Object) -> None: ...
    @Text.setter
    def Text(self, value: str) -> None: ...
    @Top.setter
    def Top(self, value: int) -> None: ...
    @TopLevel.setter
    def TopLevel(self, value: bool) -> None: ...
    @TopMost.setter
    def TopMost(self, value: bool) -> None: ...
    @TransparencyKey.setter
    def TransparencyKey(self, value: Color) -> None: ...
    @UseWaitCursor.setter
    def UseWaitCursor(self, value: bool) -> None: ...
    @Visible.setter
    def Visible(self, value: bool) -> None: ...
    @Width.setter
    def Width(self, value: int) -> None: ...
    @WindowState.setter
    def WindowState(self, value: FormWindowState) -> None: ...
    @WindowTarget.setter
    def WindowTarget(self, value: IWindowTarget) -> None: ...
    def SetArchive(self, nArchive: GH_Archive) -> None: ...
    def SetAutoScrollMargin(self, x: int, y: int) -> None: ...
    @overload
    def SetBounds(self, x: int, y: int, width: int, height: int) -> None: ...
    @overload
    def SetBounds(self, x: int, y: int, width: int, height: int, specified: BoundsSpecified) -> None: ...
    def SetDesktopBounds(self, x: int, y: int, width: int, height: int) -> None: ...
    def SetDesktopLocation(self, x: int, y: int) -> None: ...
    @overload
    def Show(self) -> None: ...
    @overload
    def Show(self, owner: IWin32Window) -> None: ...
    @overload
    def ShowDialog(self) -> DialogResult: ...
    @overload
    def ShowDialog(self, owner: IWin32Window) -> DialogResult: ...
    def SuspendLayout(self) -> None: ...
    def ToString(self) -> str: ...
    def Update(self) -> None: ...
    @overload
    def Validate(self) -> bool: ...
    @overload
    def Validate(self, checkAutoValidate: bool) -> bool: ...
    @overload
    def ValidateChildren(self) -> bool: ...
    @overload
    def ValidateChildren(self, validationConstraints: ValidationConstraints) -> bool: ...


class GH_DeveloperDetails:
    def Equals(self, obj: Object) -> bool: ...
    @property
    def DefaultDeveloperContact() -> str: ...
    @property
    def DeveloperContact() -> str: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    @DeveloperContact.setter
    def DeveloperContact(value: str) -> None: ...
    def ToString(self) -> str: ...

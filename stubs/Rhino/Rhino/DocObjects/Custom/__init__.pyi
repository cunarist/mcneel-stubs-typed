from typing import overload, Any
from collections.abc import Iterable, Iterator, Sequence, MutableSequence, Callable
from enum import Enum

from Rhino import RhinoDoc
from Rhino.Collections import ArchivableDictionary
from Rhino.Display import DisplayPipeline
from Rhino.Display import DisplayPipelineAttributes
from Rhino.Display import RhinoViewport
from Rhino.Display import VisualAnalysisMode
from Rhino.DocObjects import GripObject
from Rhino.DocObjects import HistoryRecord
from Rhino.DocObjects import Material
from Rhino.DocObjects import ModelComponentType
from Rhino.DocObjects import ObjectAttributes
from Rhino.DocObjects import ObjectFrameFlags
from Rhino.DocObjects import ObjectType
from Rhino.DocObjects import RhinoObject
from Rhino.DocObjects import ViewportInfo
from Rhino.FileIO import SerializationOptions
from Rhino.FileIO import TextLog
from Rhino.Geometry import BoundingBox
from Rhino.Geometry import Brep
from Rhino.Geometry import ComponentIndex
from Rhino.Geometry import ComponentStatus
from Rhino.Geometry import Curve
from Rhino.Geometry import GeometryBase
from Rhino.Geometry import Line
from Rhino.Geometry import Mesh
from Rhino.Geometry import MeshingParameters
from Rhino.Geometry import MeshType
from Rhino.Geometry import Plane
from Rhino.Geometry import Point
from Rhino.Geometry import Point3d
from Rhino.Geometry import Transform
from Rhino.Geometry import Vector3d
from Rhino.PlugIns import PlugIn
from Rhino.Render import RenderMaterial
from Rhino.Render import RenderPrimitiveList
from Rhino.Render import TextureMapping
from Rhino.Render.CustomRenderMeshes import Flags
from Rhino.Render.CustomRenderMeshes import RenderMeshes
from Rhino.Runtime import CommonObject
from Rhino.UI.Gumball import GumballFrame
from System import AsyncCallback
from System import Guid
from System import IAsyncResult
from System import IConvertible
from System import IntPtr
from System.Drawing import Color
from System.Reflection import MethodInfo
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext



class ClassIdAttribute:
    @overload
    def __init__(self, id: str): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def TypeId(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsDefaultAttribute(self) -> bool: ...
    @overload
    def Match(self, obj: object) -> bool: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import BrepObject
class CustomBrepObject(BrepObject):
    @overload
    def ClearId(self) -> None: ...
    @overload
    def ClearIndex(self) -> None: ...
    @overload
    def ClearName(self) -> None: ...
    @overload
    def CommitChanges(self) -> bool: ...
    @overload
    def CopyHistoryOnReplace(self) -> bool: ...
    @overload
    def CreateMeshes(self, meshType: MeshType, parameters: MeshingParameters, ignoreCustomParameters: bool) -> int: ...
    @overload
    def CustomRenderMeshesBoundingBox(self, mt: MeshType, vp: ViewportInfo, flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[bool, Flags, BoundingBox]: ...
    @overload
    def DataCRC(self, currentRemainder: int) -> int: ...
    @overload
    def Description(self, textLog: TextLog) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def DuplicateBrepGeometry(self) -> Brep: ...
    @overload
    def DuplicateGeometry(self) -> GeometryBase: ...
    @overload
    def EnableCustomGrips(self, customGrips: CustomObjectGrips) -> bool: ...
    @overload
    def EnableVisualAnalysisMode(self, mode: VisualAnalysisMode, enable: bool) -> bool: ...
    @overload
    def EnsurePrivateCopy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def BrepGeometry(self) -> Brep: ...
    @property
    def ComponentStatus(self) -> ComponentStatus: ...
    @property
    def ComponentType(self) -> ModelComponentType: ...
    @property
    def DeletedName(self) -> str: ...
    @property
    def Disposed(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Geometry(self) -> GeometryBase: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def GroupCount(self) -> int: ...
    @property
    def HasDynamicTransform(self) -> bool: ...
    @property
    def HasId(self) -> bool: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasSubobjectMaterials(self) -> bool: ...
    @property
    def HasUserData(self) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdIsLocked(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def IndexIsLocked(self) -> bool: ...
    @property
    def InstanceDefinitionModelSerialNumber(self) -> int: ...
    @property
    def IsComponentStatusLocked(self) -> bool: ...
    @property
    def IsDeletable(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDocumentControlled(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry(self) -> bool: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsNormal(self) -> bool: ...
    @property
    def IsPictureFrame(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsSolid(self) -> bool: ...
    @property
    def IsSystemComponent(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def ModelSerialNumber(self) -> int: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIsLocked(self) -> bool: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    def ReferenceModelSerialNumber(self) -> int: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RuntimeSerialNumber(self) -> int: ...
    @property
    def SubobjectMaterialComponents(self) -> Iterable[ComponentIndex]: ...
    @property
    def UserData(self) -> UserDataList: ...
    @property
    def UserDictionary(self) -> ArchivableDictionary: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber(self) -> int: ...
    @overload
    def GetActiveVisualAnalysisModes(self) -> Iterable[VisualAnalysisMode]: ...
    @overload
    def GetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str) -> IConvertible: ...
    @overload
    def GetDynamicTransform(self) -> tuple[bool, Transform]: ...
    @overload
    def GetGrips(self) -> Iterable[GripObject]: ...
    @overload
    def GetGroupList(self) -> Iterable[int]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetHighlightedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetMaterial(self, frontMaterial: bool) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> Material: ...
    @overload
    def GetMeshes(self, meshType: MeshType) -> Iterable[Mesh]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, frontMaterial: bool) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> RenderMaterial: ...
    @overload
    def GetRenderMeshParameters(self) -> MeshingParameters: ...
    @overload
    def GetRenderMeshParameters(self, returnDocumentParametersIfUnset: bool) -> MeshingParameters: ...
    @overload
    def GetSelectedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetSubObjects(self) -> Iterable[RhinoObject]: ...
    @overload
    def GetTextureChannels(self) -> Iterable[int]: ...
    @overload
    def GetTextureMapping(self, channel: int) -> TextureMapping: ...
    @overload
    def GetTextureMapping(self, channel: int) -> tuple[TextureMapping, Transform]: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def HasCustomRenderMeshes(self, mt: MeshType, vp: ViewportInfo, flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[bool, Flags]: ...
    @overload
    def HasHistoryRecord(self) -> bool: ...
    @overload
    def HasTextureMapping(self) -> bool: ...
    @overload
    def Highlight(self, enable: bool) -> bool: ...
    @overload
    def HighlightSubObject(self, componentIndex: ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def HistoryChildren(self) -> Iterable[Guid]: ...
    @overload
    def HistoryParents(self) -> Iterable[Guid]: ...
    @overload
    def InVisualAnalysisMode(self) -> bool: ...
    @overload
    def InVisualAnalysisMode(self, mode: VisualAnalysisMode) -> bool: ...
    @overload
    def IsActiveInViewport(self, viewport: RhinoViewport) -> bool: ...
    @overload
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsMeshable(self, meshType: MeshType) -> bool: ...
    @overload
    def IsSelectable(self) -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    @overload
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsSubObjectHighlighted(self, componentIndex: ComponentIndex) -> bool: ...
    @overload
    def IsSubObjectSelectable(self, componentIndex: ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    @overload
    def IsSubObjectSelected(self, componentIndex: ComponentIndex) -> bool: ...
    @overload
    def IsValidWithLog(self) -> tuple[bool, str]: ...
    @overload
    def LockId(self) -> None: ...
    @overload
    def LockIndex(self) -> None: ...
    @overload
    def LockName(self) -> None: ...
    @overload
    def MemoryEstimate(self) -> int: ...
    @overload
    def MeshCount(self, meshType: MeshType, parameters: MeshingParameters) -> int: ...
    @overload
    def ObjectFrame(self) -> Plane: ...
    @overload
    def ObjectFrame(self, flags: ObjectFrameFlags) -> Plane: ...
    @overload
    def RenderMeshes(self, mt: MeshType, vp: ViewportInfo, ancestry: MutableSequence[InstanceObject], flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[RenderMeshes, Flags]: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: ObjectAttributes) -> None: ...
    @ComponentStatus.setter
    def ComponentStatus(self, value: ComponentStatus) -> None: ...
    @GripsOn.setter
    def GripsOn(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Guid) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    @overload
    def SetCopyHistoryOnReplace(self, bCopy: bool) -> None: ...
    @overload
    def SetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str, value: object) -> None: ...
    @overload
    def SetHistory(self, history: HistoryRecord) -> bool: ...
    @overload
    def SetObjectFrame(self, xform: Transform) -> None: ...
    @overload
    def SetObjectFrame(self, plane: Plane) -> None: ...
    @overload
    def SetRenderMeshParameters(self, mp: MeshingParameters) -> bool: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping) -> int: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping, objectTransform: Transform) -> int: ...
    @overload
    def ShortDescription(self, plural: bool) -> str: ...
    @overload
    def ShortDescriptionWithClosedStatus(self, prepend: bool, plural: bool) -> tuple[str, int]: ...
    @overload
    def ToJSON(self, options: SerializationOptions) -> str: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def TryGetGumballFrame(self) -> tuple[bool, GumballFrame]: ...
    @overload
    def UnhighlightAllSubObjects(self) -> int: ...
    @overload
    def UnselectAllSubObjects(self) -> int: ...


from Rhino.DocObjects import CurveObject
class CustomCurveObject(CurveObject):
    @overload
    def ClearId(self) -> None: ...
    @overload
    def ClearIndex(self) -> None: ...
    @overload
    def ClearName(self) -> None: ...
    @overload
    def CommitChanges(self) -> bool: ...
    @overload
    def CopyHistoryOnReplace(self) -> bool: ...
    @overload
    def CreateMeshes(self, meshType: MeshType, parameters: MeshingParameters, ignoreCustomParameters: bool) -> int: ...
    @overload
    def CustomRenderMeshesBoundingBox(self, mt: MeshType, vp: ViewportInfo, flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[bool, Flags, BoundingBox]: ...
    @overload
    def DataCRC(self, currentRemainder: int) -> int: ...
    @overload
    def Description(self, textLog: TextLog) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def DuplicateCurveGeometry(self) -> Curve: ...
    @overload
    def DuplicateGeometry(self) -> GeometryBase: ...
    @overload
    def EnableCustomGrips(self, customGrips: CustomObjectGrips) -> bool: ...
    @overload
    def EnableVisualAnalysisMode(self, mode: VisualAnalysisMode, enable: bool) -> bool: ...
    @overload
    def EnsurePrivateCopy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def ComponentStatus(self) -> ComponentStatus: ...
    @property
    def ComponentType(self) -> ModelComponentType: ...
    @property
    def CurveGeometry(self) -> Curve: ...
    @property
    def DeletedName(self) -> str: ...
    @property
    def Disposed(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Geometry(self) -> GeometryBase: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def GroupCount(self) -> int: ...
    @property
    def HasDynamicTransform(self) -> bool: ...
    @property
    def HasId(self) -> bool: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasSubobjectMaterials(self) -> bool: ...
    @property
    def HasUserData(self) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdIsLocked(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def IndexIsLocked(self) -> bool: ...
    @property
    def InstanceDefinitionModelSerialNumber(self) -> int: ...
    @property
    def IsComponentStatusLocked(self) -> bool: ...
    @property
    def IsDeletable(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDocumentControlled(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry(self) -> bool: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsNormal(self) -> bool: ...
    @property
    def IsPictureFrame(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsSolid(self) -> bool: ...
    @property
    def IsSystemComponent(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def ModelSerialNumber(self) -> int: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIsLocked(self) -> bool: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    def ReferenceModelSerialNumber(self) -> int: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RuntimeSerialNumber(self) -> int: ...
    @property
    def SubobjectMaterialComponents(self) -> Iterable[ComponentIndex]: ...
    @property
    def UserData(self) -> UserDataList: ...
    @property
    def UserDictionary(self) -> ArchivableDictionary: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber(self) -> int: ...
    @overload
    def GetActiveVisualAnalysisModes(self) -> Iterable[VisualAnalysisMode]: ...
    @overload
    def GetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str) -> IConvertible: ...
    @overload
    def GetDynamicTransform(self) -> tuple[bool, Transform]: ...
    @overload
    def GetGrips(self) -> Iterable[GripObject]: ...
    @overload
    def GetGroupList(self) -> Iterable[int]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetHighlightedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetLinetypeSegments(self) -> Iterable[GeometryBase]: ...
    @overload
    def GetLinetypeSegments(self, viewport: RhinoViewport) -> Iterable[GeometryBase]: ...
    @overload
    def GetMaterial(self, frontMaterial: bool) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> Material: ...
    @overload
    def GetMeshes(self, meshType: MeshType) -> Iterable[Mesh]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, frontMaterial: bool) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> RenderMaterial: ...
    @overload
    def GetRenderMeshParameters(self) -> MeshingParameters: ...
    @overload
    def GetRenderMeshParameters(self, returnDocumentParametersIfUnset: bool) -> MeshingParameters: ...
    @overload
    def GetSelectedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetSubObjects(self) -> Iterable[RhinoObject]: ...
    @overload
    def GetTextureChannels(self) -> Iterable[int]: ...
    @overload
    def GetTextureMapping(self, channel: int) -> TextureMapping: ...
    @overload
    def GetTextureMapping(self, channel: int) -> tuple[TextureMapping, Transform]: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def HasCustomRenderMeshes(self, mt: MeshType, vp: ViewportInfo, flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[bool, Flags]: ...
    @overload
    def HasHistoryRecord(self) -> bool: ...
    @overload
    def HasTextureMapping(self) -> bool: ...
    @overload
    def Highlight(self, enable: bool) -> bool: ...
    @overload
    def HighlightSubObject(self, componentIndex: ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def HistoryChildren(self) -> Iterable[Guid]: ...
    @overload
    def HistoryParents(self) -> Iterable[Guid]: ...
    @overload
    def InVisualAnalysisMode(self) -> bool: ...
    @overload
    def InVisualAnalysisMode(self, mode: VisualAnalysisMode) -> bool: ...
    @overload
    def IsActiveInViewport(self, viewport: RhinoViewport) -> bool: ...
    @overload
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsMeshable(self, meshType: MeshType) -> bool: ...
    @overload
    def IsSelectable(self) -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    @overload
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsSubObjectHighlighted(self, componentIndex: ComponentIndex) -> bool: ...
    @overload
    def IsSubObjectSelectable(self, componentIndex: ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    @overload
    def IsSubObjectSelected(self, componentIndex: ComponentIndex) -> bool: ...
    @overload
    def IsValidWithLog(self) -> tuple[bool, str]: ...
    @overload
    def LockId(self) -> None: ...
    @overload
    def LockIndex(self) -> None: ...
    @overload
    def LockName(self) -> None: ...
    @overload
    def MemoryEstimate(self) -> int: ...
    @overload
    def MeshCount(self, meshType: MeshType, parameters: MeshingParameters) -> int: ...
    @overload
    def ObjectFrame(self) -> Plane: ...
    @overload
    def ObjectFrame(self, flags: ObjectFrameFlags) -> Plane: ...
    @overload
    def RenderMeshes(self, mt: MeshType, vp: ViewportInfo, ancestry: MutableSequence[InstanceObject], flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[RenderMeshes, Flags]: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: ObjectAttributes) -> None: ...
    @ComponentStatus.setter
    def ComponentStatus(self, value: ComponentStatus) -> None: ...
    @GripsOn.setter
    def GripsOn(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Guid) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    @overload
    def SetCopyHistoryOnReplace(self, bCopy: bool) -> None: ...
    @overload
    def SetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str, value: object) -> None: ...
    @overload
    def SetHistory(self, history: HistoryRecord) -> bool: ...
    @overload
    def SetObjectFrame(self, plane: Plane) -> None: ...
    @overload
    def SetObjectFrame(self, xform: Transform) -> None: ...
    @overload
    def SetRenderMeshParameters(self, mp: MeshingParameters) -> bool: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping) -> int: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping, objectTransform: Transform) -> int: ...
    @overload
    def ShortDescription(self, plural: bool) -> str: ...
    @overload
    def ShortDescriptionWithClosedStatus(self, prepend: bool, plural: bool) -> tuple[str, int]: ...
    @overload
    def ToJSON(self, options: SerializationOptions) -> str: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def TryGetGumballFrame(self) -> tuple[bool, GumballFrame]: ...
    @overload
    def UnhighlightAllSubObjects(self) -> int: ...
    @overload
    def UnselectAllSubObjects(self) -> int: ...


from Rhino.DocObjects import GripObject
class CustomGripObject(GripObject):
    @overload
    def __init__(self): ...
    @overload
    def ClearId(self) -> None: ...
    @overload
    def ClearIndex(self) -> None: ...
    @overload
    def ClearName(self) -> None: ...
    @overload
    def CommitChanges(self) -> bool: ...
    @overload
    def CopyHistoryOnReplace(self) -> bool: ...
    @overload
    def CreateMeshes(self, meshType: MeshType, parameters: MeshingParameters, ignoreCustomParameters: bool) -> int: ...
    @overload
    def CustomRenderMeshesBoundingBox(self, mt: MeshType, vp: ViewportInfo, flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[bool, Flags, BoundingBox]: ...
    @overload
    def DataCRC(self, currentRemainder: int) -> int: ...
    @overload
    def Description(self, textLog: TextLog) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def DuplicateGeometry(self) -> GeometryBase: ...
    @overload
    def EnableCustomGrips(self, customGrips: CustomObjectGrips) -> bool: ...
    @overload
    def EnableVisualAnalysisMode(self, mode: VisualAnalysisMode, enable: bool) -> bool: ...
    @overload
    def EnsurePrivateCopy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def ComponentStatus(self) -> ComponentStatus: ...
    @property
    def ComponentType(self) -> ModelComponentType: ...
    @property
    def CurrentLocation(self) -> Point3d: ...
    @property
    def DeletedName(self) -> str: ...
    @property
    def Disposed(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Geometry(self) -> GeometryBase: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def GroupCount(self) -> int: ...
    @property
    def HasDynamicTransform(self) -> bool: ...
    @property
    def HasId(self) -> bool: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasSubobjectMaterials(self) -> bool: ...
    @property
    def HasUserData(self) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdIsLocked(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def Index(self) -> int: ...
    @property
    def IndexIsLocked(self) -> bool: ...
    @property
    def InstanceDefinitionModelSerialNumber(self) -> int: ...
    @property
    def IsComponentStatusLocked(self) -> bool: ...
    @property
    def IsDeletable(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDocumentControlled(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry(self) -> bool: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsNormal(self) -> bool: ...
    @property
    def IsPictureFrame(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsSolid(self) -> bool: ...
    @property
    def IsSystemComponent(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def ModelSerialNumber(self) -> int: ...
    @property
    def Moved(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIsLocked(self) -> bool: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    def OriginalLocation(self) -> Point3d: ...
    @property
    def OriginalLocation(self) -> Point3d: ...
    @property
    def OwnerId(self) -> Guid: ...
    @property
    def ReferenceModelSerialNumber(self) -> int: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RuntimeSerialNumber(self) -> int: ...
    @property
    def SubobjectMaterialComponents(self) -> Iterable[ComponentIndex]: ...
    @property
    def UserData(self) -> UserDataList: ...
    @property
    def UserDictionary(self) -> ArchivableDictionary: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def Weight(self) -> float: ...
    @property
    def WorksessionReferenceSerialNumber(self) -> int: ...
    @overload
    def GetActiveVisualAnalysisModes(self) -> Iterable[VisualAnalysisMode]: ...
    @overload
    def GetCageParameters(self) -> tuple[bool, float, float, float]: ...
    @overload
    def GetCurveCVIndices(self) -> tuple[int, Iterable[int]]: ...
    @overload
    def GetCurveParameters(self) -> tuple[bool, float]: ...
    @overload
    def GetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str) -> IConvertible: ...
    @overload
    def GetDynamicTransform(self) -> tuple[bool, Transform]: ...
    @overload
    def GetGripDirections(self) -> tuple[bool, Vector3d, Vector3d, Vector3d]: ...
    @overload
    def GetGrips(self) -> Iterable[GripObject]: ...
    @overload
    def GetGroupList(self) -> Iterable[int]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetHighlightedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex) -> Material: ...
    @overload
    def GetMaterial(self, frontMaterial: bool) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> Material: ...
    @overload
    def GetMeshes(self, meshType: MeshType) -> Iterable[Mesh]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, frontMaterial: bool) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> RenderMaterial: ...
    @overload
    def GetRenderMeshParameters(self) -> MeshingParameters: ...
    @overload
    def GetRenderMeshParameters(self, returnDocumentParametersIfUnset: bool) -> MeshingParameters: ...
    @overload
    def GetSelectedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetSubObjects(self) -> Iterable[RhinoObject]: ...
    @overload
    def GetSurfaceCVIndices(self) -> tuple[int, Iterable[Tuple]]: ...
    @overload
    def GetSurfaceParameters(self) -> tuple[bool, float, float]: ...
    @overload
    def GetTextureChannels(self) -> Iterable[int]: ...
    @overload
    def GetTextureMapping(self, channel: int) -> TextureMapping: ...
    @overload
    def GetTextureMapping(self, channel: int) -> tuple[TextureMapping, Transform]: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def HasCustomRenderMeshes(self, mt: MeshType, vp: ViewportInfo, flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[bool, Flags]: ...
    @overload
    def HasHistoryRecord(self) -> bool: ...
    @overload
    def HasTextureMapping(self) -> bool: ...
    @overload
    def Highlight(self, enable: bool) -> bool: ...
    @overload
    def HighlightSubObject(self, componentIndex: ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def HistoryChildren(self) -> Iterable[Guid]: ...
    @overload
    def HistoryParents(self) -> Iterable[Guid]: ...
    @overload
    def InVisualAnalysisMode(self) -> bool: ...
    @overload
    def InVisualAnalysisMode(self, mode: VisualAnalysisMode) -> bool: ...
    @overload
    def IsActiveInViewport(self, viewport: RhinoViewport) -> bool: ...
    @overload
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsMeshable(self, meshType: MeshType) -> bool: ...
    @overload
    def IsSelectable(self) -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    @overload
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsSubObjectHighlighted(self, componentIndex: ComponentIndex) -> bool: ...
    @overload
    def IsSubObjectSelectable(self, componentIndex: ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    @overload
    def IsSubObjectSelected(self, componentIndex: ComponentIndex) -> bool: ...
    @overload
    def IsValidWithLog(self) -> tuple[bool, str]: ...
    @overload
    def LockId(self) -> None: ...
    @overload
    def LockIndex(self) -> None: ...
    @overload
    def LockName(self) -> None: ...
    @overload
    def MemoryEstimate(self) -> int: ...
    @overload
    def MeshCount(self, meshType: MeshType, parameters: MeshingParameters) -> int: ...
    @overload
    def Move(self, delta: Vector3d) -> None: ...
    @overload
    def Move(self, xform: Transform) -> None: ...
    @overload
    def Move(self, newLocation: Point3d) -> None: ...
    @overload
    def NeighborGrip(self, directionR: int, directionS: int, directionT: int, wrap: bool) -> GripObject: ...
    @overload
    def NewLocation(self) -> None: ...
    @overload
    def ObjectFrame(self) -> Plane: ...
    @overload
    def ObjectFrame(self, flags: ObjectFrameFlags) -> Plane: ...
    @overload
    def RenderMeshes(self, mt: MeshType, vp: ViewportInfo, ancestry: MutableSequence[InstanceObject], flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[RenderMeshes, Flags]: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: ObjectAttributes) -> None: ...
    @ComponentStatus.setter
    def ComponentStatus(self, value: ComponentStatus) -> None: ...
    @CurrentLocation.setter
    def CurrentLocation(self, value: Point3d) -> None: ...
    @GripsOn.setter
    def GripsOn(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Guid) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @OriginalLocation.setter
    def OriginalLocation(self, value: Point3d) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    @Weight.setter
    def Weight(self, value: float) -> None: ...
    @overload
    def SetCopyHistoryOnReplace(self, bCopy: bool) -> None: ...
    @overload
    def SetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str, value: object) -> None: ...
    @overload
    def SetHistory(self, history: HistoryRecord) -> bool: ...
    @overload
    def SetObjectFrame(self, xform: Transform) -> None: ...
    @overload
    def SetObjectFrame(self, plane: Plane) -> None: ...
    @overload
    def SetRenderMeshParameters(self, mp: MeshingParameters) -> bool: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping) -> int: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping, objectTransform: Transform) -> int: ...
    @overload
    def ShortDescription(self, plural: bool) -> str: ...
    @overload
    def ShortDescriptionWithClosedStatus(self, prepend: bool, plural: bool) -> tuple[str, int]: ...
    @overload
    def ToJSON(self, options: SerializationOptions) -> str: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def TryGetGumballFrame(self) -> tuple[bool, GumballFrame]: ...
    @overload
    def UndoMove(self) -> None: ...
    @overload
    def UnhighlightAllSubObjects(self) -> int: ...
    @overload
    def UnselectAllSubObjects(self) -> int: ...


from Rhino.DocObjects import MeshObject
class CustomMeshObject(MeshObject):
    @overload
    def ClearId(self) -> None: ...
    @overload
    def ClearIndex(self) -> None: ...
    @overload
    def ClearName(self) -> None: ...
    @overload
    def CommitChanges(self) -> bool: ...
    @overload
    def CopyHistoryOnReplace(self) -> bool: ...
    @overload
    def CreateMeshes(self, meshType: MeshType, parameters: MeshingParameters, ignoreCustomParameters: bool) -> int: ...
    @overload
    def CustomRenderMeshesBoundingBox(self, mt: MeshType, vp: ViewportInfo, flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[bool, Flags, BoundingBox]: ...
    @overload
    def DataCRC(self, currentRemainder: int) -> int: ...
    @overload
    def Description(self, textLog: TextLog) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def DuplicateGeometry(self) -> GeometryBase: ...
    @overload
    def DuplicateMeshGeometry(self) -> Mesh: ...
    @overload
    def EnableCustomGrips(self, customGrips: CustomObjectGrips) -> bool: ...
    @overload
    def EnableVisualAnalysisMode(self, mode: VisualAnalysisMode, enable: bool) -> bool: ...
    @overload
    def EnsurePrivateCopy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def ComponentStatus(self) -> ComponentStatus: ...
    @property
    def ComponentType(self) -> ModelComponentType: ...
    @property
    def DeletedName(self) -> str: ...
    @property
    def Disposed(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Geometry(self) -> GeometryBase: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def GroupCount(self) -> int: ...
    @property
    def HasDynamicTransform(self) -> bool: ...
    @property
    def HasId(self) -> bool: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasSubobjectMaterials(self) -> bool: ...
    @property
    def HasUserData(self) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdIsLocked(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def IndexIsLocked(self) -> bool: ...
    @property
    def InstanceDefinitionModelSerialNumber(self) -> int: ...
    @property
    def IsComponentStatusLocked(self) -> bool: ...
    @property
    def IsCustomObject(self) -> bool: ...
    @property
    def IsDeletable(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDocumentControlled(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry(self) -> bool: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsNormal(self) -> bool: ...
    @property
    def IsPictureFrame(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsSolid(self) -> bool: ...
    @property
    def IsSystemComponent(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def MeshGeometry(self) -> Mesh: ...
    @property
    def ModelSerialNumber(self) -> int: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIsLocked(self) -> bool: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    def ReferenceModelSerialNumber(self) -> int: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RuntimeSerialNumber(self) -> int: ...
    @property
    def SubobjectMaterialComponents(self) -> Iterable[ComponentIndex]: ...
    @property
    def UserData(self) -> UserDataList: ...
    @property
    def UserDictionary(self) -> ArchivableDictionary: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber(self) -> int: ...
    @overload
    def GetActiveVisualAnalysisModes(self) -> Iterable[VisualAnalysisMode]: ...
    @overload
    def GetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str) -> IConvertible: ...
    @overload
    def GetDynamicTransform(self) -> tuple[bool, Transform]: ...
    @overload
    def GetGrips(self) -> Iterable[GripObject]: ...
    @overload
    def GetGroupList(self) -> Iterable[int]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetHighlightedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetMaterial(self, frontMaterial: bool) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> Material: ...
    @overload
    def GetMeshes(self, meshType: MeshType) -> Iterable[Mesh]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetRenderMaterial(self, frontMaterial: bool) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> RenderMaterial: ...
    @overload
    def GetRenderMeshParameters(self) -> MeshingParameters: ...
    @overload
    def GetRenderMeshParameters(self, returnDocumentParametersIfUnset: bool) -> MeshingParameters: ...
    @overload
    def GetSelectedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetSubObjects(self) -> Iterable[RhinoObject]: ...
    @overload
    def GetTextureChannels(self) -> Iterable[int]: ...
    @overload
    def GetTextureMapping(self, channel: int) -> TextureMapping: ...
    @overload
    def GetTextureMapping(self, channel: int) -> tuple[TextureMapping, Transform]: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def HasCustomRenderMeshes(self, mt: MeshType, vp: ViewportInfo, flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[bool, Flags]: ...
    @overload
    def HasHistoryRecord(self) -> bool: ...
    @overload
    def HasTextureMapping(self) -> bool: ...
    @overload
    def Highlight(self, enable: bool) -> bool: ...
    @overload
    def HighlightSubObject(self, componentIndex: ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def HistoryChildren(self) -> Iterable[Guid]: ...
    @overload
    def HistoryParents(self) -> Iterable[Guid]: ...
    @overload
    def InVisualAnalysisMode(self) -> bool: ...
    @overload
    def InVisualAnalysisMode(self, mode: VisualAnalysisMode) -> bool: ...
    @overload
    def IsActiveInViewport(self, viewport: RhinoViewport) -> bool: ...
    @overload
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsMeshable(self, meshType: MeshType) -> bool: ...
    @overload
    def IsSelectable(self) -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    @overload
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsSubObjectHighlighted(self, componentIndex: ComponentIndex) -> bool: ...
    @overload
    def IsSubObjectSelectable(self, componentIndex: ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    @overload
    def IsSubObjectSelected(self, componentIndex: ComponentIndex) -> bool: ...
    @overload
    def IsValidWithLog(self) -> tuple[bool, str]: ...
    @overload
    def LockId(self) -> None: ...
    @overload
    def LockIndex(self) -> None: ...
    @overload
    def LockName(self) -> None: ...
    @overload
    def MemoryEstimate(self) -> int: ...
    @overload
    def MeshCount(self, meshType: MeshType, parameters: MeshingParameters) -> int: ...
    @overload
    def ObjectFrame(self) -> Plane: ...
    @overload
    def ObjectFrame(self, flags: ObjectFrameFlags) -> Plane: ...
    @overload
    def RenderMeshes(self, mt: MeshType, vp: ViewportInfo, ancestry: MutableSequence[InstanceObject], flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[RenderMeshes, Flags]: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: ObjectAttributes) -> None: ...
    @ComponentStatus.setter
    def ComponentStatus(self, value: ComponentStatus) -> None: ...
    @GripsOn.setter
    def GripsOn(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Guid) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    @overload
    def SetCopyHistoryOnReplace(self, bCopy: bool) -> None: ...
    @overload
    def SetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str, value: object) -> None: ...
    @overload
    def SetHistory(self, history: HistoryRecord) -> bool: ...
    @overload
    def SetObjectFrame(self, plane: Plane) -> None: ...
    @overload
    def SetObjectFrame(self, xform: Transform) -> None: ...
    @overload
    def SetRenderMeshParameters(self, mp: MeshingParameters) -> bool: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping) -> int: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping, objectTransform: Transform) -> int: ...
    @overload
    def ShortDescription(self, plural: bool) -> str: ...
    @overload
    def ShortDescriptionWithClosedStatus(self, prepend: bool, plural: bool) -> tuple[str, int]: ...
    @overload
    def ToJSON(self, options: SerializationOptions) -> str: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def TryGetGumballFrame(self) -> tuple[bool, GumballFrame]: ...
    @overload
    def UnhighlightAllSubObjects(self) -> int: ...
    @overload
    def UnselectAllSubObjects(self) -> int: ...


class CustomObjectGrips:
    @overload
    def Dispose(self) -> None: ...
    @overload
    @staticmethod
    def Dragging() -> bool: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def GripCount(self) -> int: ...
    @property
    def GripsMoved(self) -> bool: ...
    @property
    def NewLocation(self) -> bool: ...
    @property
    def OwnerObject(self) -> RhinoObject: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Grip(self, index: int) -> CustomGripObject: ...
    @overload
    @staticmethod
    def RegisterGripsEnabler(enabler: TurnOnGripsEventHandler, customGripsType: type) -> None: ...
    @NewLocation.setter
    def NewLocation(self, value: bool) -> None: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.DocObjects import PointObject
class CustomPointObject(PointObject):
    @overload
    def ClearId(self) -> None: ...
    @overload
    def ClearIndex(self) -> None: ...
    @overload
    def ClearName(self) -> None: ...
    @overload
    def CommitChanges(self) -> bool: ...
    @overload
    def CopyHistoryOnReplace(self) -> bool: ...
    @overload
    def CreateMeshes(self, meshType: MeshType, parameters: MeshingParameters, ignoreCustomParameters: bool) -> int: ...
    @overload
    def CustomRenderMeshesBoundingBox(self, mt: MeshType, vp: ViewportInfo, flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[bool, Flags, BoundingBox]: ...
    @overload
    def DataCRC(self, currentRemainder: int) -> int: ...
    @overload
    def Description(self, textLog: TextLog) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def DuplicateGeometry(self) -> GeometryBase: ...
    @overload
    def DuplicatePointGeometry(self) -> Point: ...
    @overload
    def EnableCustomGrips(self, customGrips: CustomObjectGrips) -> bool: ...
    @overload
    def EnableVisualAnalysisMode(self, mode: VisualAnalysisMode, enable: bool) -> bool: ...
    @overload
    def EnsurePrivateCopy(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def ComponentStatus(self) -> ComponentStatus: ...
    @property
    def ComponentType(self) -> ModelComponentType: ...
    @property
    def DeletedName(self) -> str: ...
    @property
    def Disposed(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Geometry(self) -> GeometryBase: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def GroupCount(self) -> int: ...
    @property
    def HasDynamicTransform(self) -> bool: ...
    @property
    def HasId(self) -> bool: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasSubobjectMaterials(self) -> bool: ...
    @property
    def HasUserData(self) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdIsLocked(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def IndexIsLocked(self) -> bool: ...
    @property
    def InstanceDefinitionModelSerialNumber(self) -> int: ...
    @property
    def IsComponentStatusLocked(self) -> bool: ...
    @property
    def IsDeletable(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDocumentControlled(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry(self) -> bool: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsNormal(self) -> bool: ...
    @property
    def IsPictureFrame(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsSolid(self) -> bool: ...
    @property
    def IsSystemComponent(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def ModelSerialNumber(self) -> int: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIsLocked(self) -> bool: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    def PointGeometry(self) -> Point: ...
    @property
    def ReferenceModelSerialNumber(self) -> int: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RuntimeSerialNumber(self) -> int: ...
    @property
    def SubobjectMaterialComponents(self) -> Iterable[ComponentIndex]: ...
    @property
    def UserData(self) -> UserDataList: ...
    @property
    def UserDictionary(self) -> ArchivableDictionary: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber(self) -> int: ...
    @overload
    def GetActiveVisualAnalysisModes(self) -> Iterable[VisualAnalysisMode]: ...
    @overload
    def GetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str) -> IConvertible: ...
    @overload
    def GetDynamicTransform(self) -> tuple[bool, Transform]: ...
    @overload
    def GetGrips(self) -> Iterable[GripObject]: ...
    @overload
    def GetGroupList(self) -> Iterable[int]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetHighlightedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetMaterial(self, frontMaterial: bool) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> Material: ...
    @overload
    def GetMeshes(self, meshType: MeshType) -> Iterable[Mesh]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, frontMaterial: bool) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> RenderMaterial: ...
    @overload
    def GetRenderMeshParameters(self) -> MeshingParameters: ...
    @overload
    def GetRenderMeshParameters(self, returnDocumentParametersIfUnset: bool) -> MeshingParameters: ...
    @overload
    def GetSelectedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetSubObjects(self) -> Iterable[RhinoObject]: ...
    @overload
    def GetTextureChannels(self) -> Iterable[int]: ...
    @overload
    def GetTextureMapping(self, channel: int) -> TextureMapping: ...
    @overload
    def GetTextureMapping(self, channel: int) -> tuple[TextureMapping, Transform]: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def HasCustomRenderMeshes(self, mt: MeshType, vp: ViewportInfo, flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[bool, Flags]: ...
    @overload
    def HasHistoryRecord(self) -> bool: ...
    @overload
    def HasTextureMapping(self) -> bool: ...
    @overload
    def Highlight(self, enable: bool) -> bool: ...
    @overload
    def HighlightSubObject(self, componentIndex: ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def HistoryChildren(self) -> Iterable[Guid]: ...
    @overload
    def HistoryParents(self) -> Iterable[Guid]: ...
    @overload
    def InVisualAnalysisMode(self) -> bool: ...
    @overload
    def InVisualAnalysisMode(self, mode: VisualAnalysisMode) -> bool: ...
    @overload
    def IsActiveInViewport(self, viewport: RhinoViewport) -> bool: ...
    @overload
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsMeshable(self, meshType: MeshType) -> bool: ...
    @overload
    def IsSelectable(self) -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    @overload
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsSubObjectHighlighted(self, componentIndex: ComponentIndex) -> bool: ...
    @overload
    def IsSubObjectSelectable(self, componentIndex: ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    @overload
    def IsSubObjectSelected(self, componentIndex: ComponentIndex) -> bool: ...
    @overload
    def IsValidWithLog(self) -> tuple[bool, str]: ...
    @overload
    def LockId(self) -> None: ...
    @overload
    def LockIndex(self) -> None: ...
    @overload
    def LockName(self) -> None: ...
    @overload
    def MemoryEstimate(self) -> int: ...
    @overload
    def MeshCount(self, meshType: MeshType, parameters: MeshingParameters) -> int: ...
    @overload
    def ObjectFrame(self) -> Plane: ...
    @overload
    def ObjectFrame(self, flags: ObjectFrameFlags) -> Plane: ...
    @overload
    def RenderMeshes(self, mt: MeshType, vp: ViewportInfo, ancestry: MutableSequence[InstanceObject], flags: Flags, plugin: PlugIn, attrs: DisplayPipelineAttributes) -> tuple[RenderMeshes, Flags]: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: ObjectAttributes) -> None: ...
    @ComponentStatus.setter
    def ComponentStatus(self, value: ComponentStatus) -> None: ...
    @GripsOn.setter
    def GripsOn(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Guid) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    @overload
    def SetCopyHistoryOnReplace(self, bCopy: bool) -> None: ...
    @overload
    def SetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str, value: object) -> None: ...
    @overload
    def SetHistory(self, history: HistoryRecord) -> bool: ...
    @overload
    def SetObjectFrame(self, xform: Transform) -> None: ...
    @overload
    def SetObjectFrame(self, plane: Plane) -> None: ...
    @overload
    def SetRenderMeshParameters(self, mp: MeshingParameters) -> bool: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping) -> int: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping, objectTransform: Transform) -> int: ...
    @overload
    def ShortDescription(self, plural: bool) -> str: ...
    @overload
    def ShortDescriptionWithClosedStatus(self, prepend: bool, plural: bool) -> tuple[str, int]: ...
    @overload
    def ToJSON(self, options: SerializationOptions) -> str: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def TryGetGumballFrame(self) -> tuple[bool, GumballFrame]: ...
    @overload
    def UnhighlightAllSubObjects(self) -> int: ...
    @overload
    def UnselectAllSubObjects(self) -> int: ...


from Rhino.Display import DrawEventArgs
class GripsDrawEventArgs(DrawEventArgs):
    @overload
    def DrawControlPolygonLine(self, line: Line, startStatus: GripStatus, endStatus: GripStatus) -> None: ...
    @overload
    def DrawControlPolygonLine(self, line: Line, startStatus: int, endStatus: int) -> None: ...
    @overload
    def DrawControlPolygonLine(self, start: Point3d, end: Point3d, startStatus: int, endStatus: int) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def ControlPolygonStyle(self) -> int: ...
    @property
    def Display(self) -> DisplayPipeline: ...
    @property
    def DrawDynamicStuff(self) -> bool: ...
    @property
    def DrawStaticStuff(self) -> bool: ...
    @property
    def GripColor(self) -> Color: ...
    @property
    def GripStatusCount(self) -> int: ...
    @property
    def LockedGripColor(self) -> Color: ...
    @property
    def RhinoDoc(self) -> RhinoDoc: ...
    @property
    def SelectedGripColor(self) -> Color: ...
    @property
    def Viewport(self) -> RhinoViewport: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GripStatus(self, index: int) -> GripStatus: ...
    @overload
    def RestoreViewportSettings(self) -> None: ...
    @ControlPolygonStyle.setter
    def ControlPolygonStyle(self, value: int) -> None: ...
    @GripColor.setter
    def GripColor(self, value: Color) -> None: ...
    @LockedGripColor.setter
    def LockedGripColor(self, value: Color) -> None: ...
    @SelectedGripColor.setter
    def SelectedGripColor(self, value: Color) -> None: ...
    @overload
    def ToString(self) -> str: ...


class GripStatus:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Culled(self) -> bool: ...
    @property
    def Visible(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @Culled.setter
    def Culled(self, value: bool) -> None: ...
    @overload
    def ToString(self) -> str: ...


class TurnOnGripsEventHandler:
    @overload
    def __init__(self, object: object, method: IntPtr): ...
    @overload
    def BeginInvoke(self, rhObj: RhinoObject, callback: AsyncCallback, object: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, rhObj: RhinoObject) -> None: ...
    @overload
    def ToString(self) -> str: ...


class UnknownUserData(UserData):
    @overload
    def __init__(self, pointerNativeUserData: IntPtr): ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Description(self) -> str: ...
    @property
    def ShouldWrite(self) -> bool: ...
    @property
    def Transform(self) -> Transform: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class UserData:
    @overload
    @staticmethod
    def Copy(source: CommonObject, destination: CommonObject) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Description(self) -> str: ...
    @property
    def ShouldWrite(self) -> bool: ...
    @property
    def Transform(self) -> Transform: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def MoveUserDataFrom(objectWithUserData: CommonObject) -> Guid: ...
    @overload
    @staticmethod
    def MoveUserDataTo(objectToGetUserData: CommonObject, id: Guid, append: bool) -> None: ...
    @overload
    def ToString(self) -> str: ...


class UserDataList:
    def __iter__(self) -> Iterator[UserData]: ...
    @overload
    def Add(self, userdata: UserData) -> bool: ...
    @overload
    def Contains(self, userdataId: Guid) -> bool: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def Find(self, userdataType: type) -> UserData: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self) -> Sequence[UserData]: ...
    @overload
    def GetEnumerator(self) -> Iterator[UserData]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Purge(self) -> None: ...
    @overload
    def Remove(self, userdata: UserData) -> bool: ...
    @overload
    def ToString(self) -> str: ...


class UserDataListEnumerator:
    @overload
    def __init__(self, udl: UserDataList): ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Current(self) -> UserData: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def MoveNext(self) -> bool: ...
    @overload
    def Reset(self) -> None: ...
    @overload
    def ToString(self) -> str: ...


class UserDictionary(UserData):
    @overload
    def __init__(self): ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Description(self) -> str: ...
    @property
    def Dictionary(self) -> ArchivableDictionary: ...
    @property
    def ShouldWrite(self) -> bool: ...
    @property
    def Transform(self) -> Transform: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...

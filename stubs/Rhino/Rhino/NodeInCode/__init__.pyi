from typing import overload, Any, Iterable, Iterator, Sequence, MutableSequence
from enum import Enum



from System.Collections.Generic import IReadOnlyList
from System import Guid
from System import Delegate
class ComponentFunctionInfo:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def Evaluate(self, args: Iterable[Any], keepTree: bool) -> tuple[Iterable[object], Iterable[str]]: ...
    @property
    def ComponentGuid(self) -> Guid: ...
    @property
    def Delegate(self) -> Delegate: ...
    @property
    def DelegateNoWarnings(self) -> Delegate: ...
    @property
    def DelegateTree(self) -> Delegate: ...
    @property
    def DelegateTreeNoWarnings(self) -> Delegate: ...
    @property
    def Description(self) -> str: ...
    @property
    def FullName(self) -> str: ...
    @property
    def FullScriptingName(self) -> str: ...
    @property
    def InputDescriptions(self) -> IReadOnlyList: ...
    @property
    def InputNames(self) -> IReadOnlyList: ...
    @property
    def InputsOptional(self) -> IReadOnlyList: ...
    @property
    def InputTypeNames(self) -> IReadOnlyList: ...
    @property
    def IsDefault(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def Namespace(self) -> str: ...
    @property
    def OutputDescriptions(self) -> IReadOnlyList: ...
    @property
    def OutputNames(self) -> IReadOnlyList: ...
    @property
    def OutputTypeNames(self) -> IReadOnlyList: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, args: Iterable[object]) -> Iterable[object]: ...
    @overload
    def InvokeKeepTree(self, args: Iterable[object]) -> Iterable[object]: ...
    @overload
    def InvokeKeepTreeSilenceWarnings(self, args: Iterable[object]) -> Iterable[object]: ...
    @overload
    def InvokeSilenceWarnings(self, args: Iterable[object]) -> Iterable[object]: ...
    @overload
    def ToString(self) -> str: ...


class Components:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @staticmethod
    def FindComponent(fullName: str) -> ComponentFunctionInfo: ...
    @property
    @classmethod
    def NodeInCodeFunctions(cls) -> NodeInCodeTable: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


from System.Dynamic import GetMemberBinder
from System.Dynamic import InvokeMemberBinder
from System.Dynamic import GetIndexBinder
from System.Dynamic import SetMemberBinder
from System.Dynamic import DeleteMemberBinder
from System.Dynamic import ConvertBinder
from System.Dynamic import CreateInstanceBinder
from System.Dynamic import InvokeBinder
from System.Dynamic import BinaryOperationBinder
from System.Dynamic import UnaryOperationBinder
from System.Dynamic import SetIndexBinder
from System.Dynamic import DeleteIndexBinder
from System.Linq.Expressions import Expression
from System.Dynamic import DynamicMetaObject
class NodeInCodeTable:
    @overload
    def __init__(self, items: Iterable[ComponentFunctionInfo]): ...
    @overload
    def Add(self, item: ComponentFunctionInfo) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetDynamicMemberNames(self) -> Iterable[str]: ...
    @overload
    def GetDynamicMembers(self) -> Iterable[ComponentFunctionInfo]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetMetaObject(self, parameter: Expression) -> DynamicMetaObject: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def TryBinaryOperation(self, binder: BinaryOperationBinder, arg: object) -> tuple[bool, object]: ...
    @overload
    def TryConvert(self, binder: ConvertBinder) -> tuple[bool, object]: ...
    @overload
    def TryCreateInstance(self, binder: CreateInstanceBinder, args: Iterable[object]) -> tuple[bool, object]: ...
    @overload
    def TryDeleteIndex(self, binder: DeleteIndexBinder, indexes: Iterable[object]) -> bool: ...
    @overload
    def TryDeleteMember(self, binder: DeleteMemberBinder) -> bool: ...
    @overload
    def TryGetIndex(self, binder: GetIndexBinder, indexes: Iterable[object]) -> tuple[bool, object]: ...
    @overload
    def TryGetMember(self, binder: GetMemberBinder) -> tuple[bool, object]: ...
    @overload
    def TryInvoke(self, binder: InvokeBinder, args: Iterable[object]) -> tuple[bool, object]: ...
    @overload
    def TryInvokeMember(self, binder: InvokeMemberBinder, args: Iterable[object]) -> tuple[bool, object]: ...
    @overload
    def TrySetIndex(self, binder: SetIndexBinder, indexes: Iterable[object], value: object) -> bool: ...
    @overload
    def TrySetMember(self, binder: SetMemberBinder, value: object) -> bool: ...
    @overload
    def TryUnaryOperation(self, binder: UnaryOperationBinder) -> tuple[bool, object]: ...

from typing import overload, Any, Iterable, Iterator, Sequence, MutableSequence, Callable
from enum import Enum

from Rhino.Geometry import Point2d
from Rhino.Render import RenderContent
from System import DateTime
from System.Drawing import Image
from System.Drawing import Point




class WorldMapDayNight:
    @overload
    def __init__(self): ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def HasMapForCurrentSettings(self) -> bool: ...
    @overload
    def LocationToMap(self, latlong: Point2d) -> Point: ...
    @overload
    def MakeMapBitmap(self) -> None: ...
    @overload
    def Map(self) -> Image: ...
    @overload
    def MapToLocation(self, mapPoint: Point) -> Point2d: ...
    @overload
    def SetDayNightDisplay(self, bOn: bool) -> None: ...
    @overload
    def SetEnabled(self, bEnabled: bool) -> None: ...
    @overload
    def SetTimeInfo(self, dt: DateTime, timezone: float, daylightSavingMinutes: int, bDaylightSavingsOn: bool) -> None: ...
    @overload
    def ToString(self) -> str: ...

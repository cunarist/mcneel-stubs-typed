from typing import overload, Any, Iterable, Iterator, Sequence, MutableSequence, Callable
from enum import Enum

from Rhino.Display import DisplayPipelineAttributes
from Rhino.DocObjects import ObjectAttributes
from Rhino.DocObjects import RhinoObject
from Rhino.DocObjects import ViewInfo
from Rhino.Geometry import BoundingBox
from Rhino.Geometry import Light
from Rhino.Geometry import Mesh
from Rhino.Geometry import Plane
from Rhino.Geometry import Transform
from Rhino.Geometry import Vector2d
from Rhino.Render import Decals
from Rhino.Render import RenderEnvironment
from Rhino.Render import RenderMaterial
from Rhino.Render import RenderSettings
from Rhino.Render import RenderTexture
from Rhino.Render import TextureMapping
from Rhino.Render import Usage
from System import Guid
from System import IFormatProvider
from System import TypeCode




class AncestryRecord:
    @overload
    def __init__(self): ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def DefinitionId(self) -> Guid: ...
    @property
    def ReferenceAttributes(self) -> ObjectAttributes: ...
    @property
    def ReferenceId(self) -> Guid: ...
    @property
    def Transform(self) -> Transform: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class BakingFunctions(Enum):
    # None = 0
    Decals = 1
    ProceduralTextures = 2
    CustomObjectMappings = 4
    WcsBasedMappings = 8
    MultipleMappingChannels = 16
    NoRepeatTextures = 32
    All = 4294967295


class ChangeQueue:
    @overload
    def AreViewsEqual(self, aView: ViewInfo, bView: ViewInfo) -> bool: ...
    @overload
    @staticmethod
    def ConvertCameraBasedLightToWorld(changequeue: ChangeQueue, light: Light, vp: ViewInfo) -> None: ...
    @overload
    @staticmethod
    def CrcFromGuid(guid: Guid) -> int: ...
    @overload
    def CreateWorld(self) -> None: ...
    @overload
    def CreateWorld(self, bFlushWhenReady: bool) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def EnvironmentForid(self, crc: int) -> RenderEnvironment: ...
    @overload
    def EnvironmentFromOriginalInstanceId(self, id: Guid) -> RenderEnvironment: ...
    @overload
    def EnvironmentIdForUsage(self, usage: Usage) -> int: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def Flush(self) -> None: ...
    @property
    def DisplayPipelineAttributes(self) -> DisplayPipelineAttributes: ...
    @property
    def IsPreview(self) -> bool: ...
    @property
    def ViewId(self) -> Guid: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetQueueGroundPlane(self) -> GroundPlane: ...
    @overload
    def GetQueueRenderSettings(self) -> RenderSettings: ...
    @overload
    def GetQueueSceneBoundingBox(self) -> BoundingBox: ...
    @overload
    def GetQueueSkylight(self) -> Skylight: ...
    @overload
    def GetQueueSun(self) -> Light: ...
    @overload
    def GetQueueView(self) -> ViewInfo: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def MaterialFromId(self, crc: int) -> RenderMaterial: ...
    @overload
    def MaterialFromOriginalInstanceId(self, id: Guid) -> RenderMaterial: ...
    @overload
    def OneShot(self) -> None: ...
    @overload
    def TextureForId(self, crc: int) -> RenderTexture: ...
    @overload
    def TextureFromOriginalInstanceId(self, id: Guid) -> RenderTexture: ...
    @overload
    def ToString(self) -> str: ...


class ClippingPlane:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def ClipViewports(self) -> Iterable[RhinoViewport]: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IsEnabled(self) -> bool: ...
    @property
    def Plane(self) -> Plane: ...
    @property
    def ViewIds(self) -> MutableSequence[Guid]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class DisplayRenderSettings:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def CullBackFaces(self) -> bool: ...
    @property
    def ForceFlatShading(self) -> bool: ...
    @property
    def SceneLightingOn(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class DynamicObjectTransform:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def MeshInstanceId(self) -> int: ...
    @property
    def Transform(self) -> Transform: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class Environment:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class Event(Enum):
    Added = 0
    Deleted = 1
    Undeleted = 2
    Modified = 3
    Sorted = 4


class FrameBufferFillMode(Enum):
    # None = 0
    DefaultColor = 1
    SolidColor = 2
    Gradient2Color = 3
    Gradient4Color = 4
    Bitmap = 5
    Renderer = 6
    Transparent = 7
    Force32Bit = 4294967295


class GroundPlane:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Altitude(self) -> float: ...
    @property
    def Crc(self) -> int: ...
    @property
    def Enabled(self) -> bool: ...
    @property
    def IsShadowOnly(self) -> bool: ...
    @property
    def MaterialId(self) -> int: ...
    @property
    def ShowUnderside(self) -> bool: ...
    @property
    def TextureOffset(self) -> Vector2d: ...
    @property
    def TextureRotation(self) -> float: ...
    @property
    def TextureScale(self) -> Vector2d: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class Light:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def ChangeType(self) -> Event: ...
    @property
    def Data(self) -> Light: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdCrc(self) -> int: ...
    @property
    def MaterialId(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class MappingChannel:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Channel(self) -> int: ...
    @property
    def Local(self) -> Transform: ...
    @property
    def Mapping(self) -> TextureMapping: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class MappingChannelCollection:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Channels(self) -> Iterable[MappingChannel]: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self) -> Sequence[MappingChannel]: ...
    @property
    def SingleMapping(self) -> MappingChannel: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class Material:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Id(self) -> int: ...
    @property
    def MeshIndex(self) -> int: ...
    @property
    def MeshInstanceId(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class Mesh:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def Mapping(self) -> MappingChannelCollection: ...
    @property
    def Mappings(self) -> Iterable[MappingChannel]: ...
    @property
    def Object(self) -> RhinoObject: ...
    @property
    def OcsTransform(self) -> Transform: ...
    @property
    def SingleMapping(self) -> MappingChannel: ...
    @property
    def SingleMesh(self) -> Mesh: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetMeshes(self) -> Iterable[Mesh]: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Id(self) -> Guid: ...
    @overload
    def ToString(self) -> str: ...


class MeshInstance:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Ancestry(self) -> Iterable[AncestryRecord]: ...
    @property
    def CastShadows(self) -> bool: ...
    @property
    def Decals(self) -> Decals: ...
    @property
    def GroupId(self) -> int: ...
    @property
    def InstanceId(self) -> int: ...
    @property
    def MaterialId(self) -> int: ...
    @property
    def MeshId(self) -> Guid: ...
    @property
    def MeshIndex(self) -> int: ...
    @property
    def ObjectAttributes(self) -> ObjectAttributes: ...
    @property
    def OcsTransform(self) -> Transform: ...
    @property
    def ParentId(self) -> Guid: ...
    @property
    def ReceiveShadows(self) -> bool: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RootId(self) -> Guid: ...
    @property
    def Transform(self) -> Transform: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class Skylight:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Enabled(self) -> bool: ...
    @property
    def ShadowIntensity(self) -> float: ...
    @property
    def UsesCustomEnvironment(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...

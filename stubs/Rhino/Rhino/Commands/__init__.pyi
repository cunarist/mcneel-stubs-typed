from typing import overload, Any, Iterable, Iterator, Sequence, MutableSequence, Callable
from enum import Enum

from Rhino import PersistentSettings
from Rhino import RhinoDoc
from Rhino.PlugIns import PlugIn
from System import AsyncCallback
from System import EventHandler
from System import Guid
from System import IAsyncResult
from System import IFormatProvider
from System import IntPtr
from System import TypeCode
from System.Reflection import MethodInfo
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext



class Command:
    @overload
    @staticmethod
    def add_BeginCommand(value: EventHandler) -> None: ...
    @overload
    @staticmethod
    def add_EndCommand(value: EventHandler) -> None: ...
    @overload
    @staticmethod
    def add_UndoRedo(value: EventHandler) -> None: ...
    @overload
    @staticmethod
    def DisplayHelp(commandId: Guid) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def EnglishName(self) -> str: ...
    @property
    def Id(self) -> Guid: ...
    @property
    @classmethod
    def LastCommandId(cls) -> Guid: ...
    @property
    @classmethod
    def LastCommandResult(cls) -> Result: ...
    @property
    def LocalName(self) -> str: ...
    @property
    def PlugIn(self) -> PlugIn: ...
    @property
    def Settings(self) -> PersistentSettings: ...
    @overload
    @staticmethod
    def GetCommandContextHelpUrl(commandId: Guid) -> str: ...
    @overload
    @staticmethod
    def GetCommandNames(english: bool, loaded: bool) -> Iterable[str]: ...
    @overload
    @staticmethod
    def GetCommandStack() -> Iterable[Guid]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    @staticmethod
    def GetMostRecentCommands() -> Iterable[MostRecentCommandDescription]: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def InCommand() -> bool: ...
    @overload
    @staticmethod
    def InScriptRunnerCommand() -> bool: ...
    @overload
    @staticmethod
    def IsCommand(name: str) -> bool: ...
    @overload
    @staticmethod
    def IsValidCommandName(name: str) -> bool: ...
    @overload
    @staticmethod
    def LookupCommandId(name: str, searchForEnglishName: bool) -> Guid: ...
    @overload
    @staticmethod
    def LookupCommandName(commandId: Guid, englishName: bool) -> str: ...
    @overload
    @staticmethod
    def remove_BeginCommand(value: EventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_EndCommand(value: EventHandler) -> None: ...
    @overload
    @staticmethod
    def remove_UndoRedo(value: EventHandler) -> None: ...
    @overload
    @staticmethod
    def RunProxyCommand(commandCallback: RunCommandDelegate, doc: RhinoDoc, data: object) -> None: ...
    @overload
    def ToString(self) -> str: ...


class CommandEventArgs:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def CommandEnglishName(self) -> str: ...
    @property
    def CommandHelpURL(self) -> str: ...
    @property
    def CommandId(self) -> Guid: ...
    @property
    def CommandLocalName(self) -> str: ...
    @property
    def CommandPluginName(self) -> str: ...
    @property
    def CommandResult(self) -> Result: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def DocumentRuntimeSerialNumber(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class CommandStyleAttribute:
    @overload
    def __init__(self, styles: Style): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Styles(self) -> Style: ...
    @property
    def TypeId(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def IsDefaultAttribute(self) -> bool: ...
    @overload
    def Match(self, obj: object) -> bool: ...
    @overload
    def ToString(self) -> str: ...


class CustomUndoEventArgs:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def ActionDescription(self) -> str: ...
    @property
    def CommandId(self) -> Guid: ...
    @property
    def CreatedByRedo(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Tag(self) -> object: ...
    @property
    def UndoSerialNumber(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class MostRecentCommandDescription:
    @overload
    def __init__(self): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def DisplayString(self) -> str: ...
    @property
    def Macro(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @DisplayString.setter
    def DisplayString(self, value: str) -> None: ...
    @Macro.setter
    def Macro(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class Result(Enum):
    Success = 0
    Cancel = 1
    Nothing = 2
    Failure = 3
    UnknownCommand = 4
    CancelModelessDialog = 5
    ExitRhino = 268435455


class RunCommandDelegate:
    @overload
    def __init__(self, object: object, method: IntPtr): ...
    @overload
    def BeginInvoke(self, doc: RhinoDoc, mode: RunMode, data: object, callback: AsyncCallback, object: object) -> IAsyncResult: ...
    @overload
    def Clone(self) -> object: ...
    @overload
    def DynamicInvoke(self, args: Iterable[object]) -> object: ...
    @overload
    def EndInvoke(self, result: IAsyncResult) -> Result: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> object: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Invoke(self, doc: RhinoDoc, mode: RunMode, data: object) -> Result: ...
    @overload
    def ToString(self) -> str: ...


class RunMode(Enum):
    Interactive = 0
    Scripted = 1


class SelCommand(Command):
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def BeQuiet(self) -> bool: ...
    @property
    def EnglishName(self) -> str: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def LocalName(self) -> str: ...
    @property
    def PlugIn(self) -> PlugIn: ...
    @property
    def Settings(self) -> PersistentSettings: ...
    @property
    def TestGrips(self) -> bool: ...
    @property
    def TestLights(self) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @BeQuiet.setter
    def BeQuiet(self, value: bool) -> None: ...
    @TestGrips.setter
    def TestGrips(self, value: bool) -> None: ...
    @TestLights.setter
    def TestLights(self, value: bool) -> None: ...
    @overload
    def ToString(self) -> str: ...


class Style(Enum):
    # None = 0
    Hidden = 1
    ScriptRunner = 2
    Transparent = 4
    DoNotRepeat = 8
    NotUndoable = 16


class TransformCommand(Command):
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def EnglishName(self) -> str: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def LocalName(self) -> str: ...
    @property
    def PlugIn(self) -> PlugIn: ...
    @property
    def Settings(self) -> PersistentSettings: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class UndoRedoEventArgs:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def CommandId(self) -> Guid: ...
    @property
    def IsBeforeBeginRecording(self) -> bool: ...
    @property
    def IsBeforeEndRecording(self) -> bool: ...
    @property
    def IsBeginRecording(self) -> bool: ...
    @property
    def IsBeginRedo(self) -> bool: ...
    @property
    def IsBeginUndo(self) -> bool: ...
    @property
    def IsEndRecording(self) -> bool: ...
    @property
    def IsEndRedo(self) -> bool: ...
    @property
    def IsEndUndo(self) -> bool: ...
    @property
    def IsPurgeRecord(self) -> bool: ...
    @property
    def UndoSerialNumber(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...

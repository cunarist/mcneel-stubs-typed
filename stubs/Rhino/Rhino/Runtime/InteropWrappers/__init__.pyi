from typing import overload, Any, Iterable, Iterator, Sequence, MutableSequence, Callable
from enum import Enum



from System import IntPtr
from Rhino.DocObjects import ObjRef
class ClassArrayObjRef:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, objrefs: Iterable[ObjRef]): ...
    @overload
    def __init__(self, ptr: IntPtr, deleteOnDispose: bool): ...
    @overload
    def Add(self, objref: ObjRef) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[ObjRef]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.DocObjects import ObjRef
from Rhino import RhinoDoc
class ClassArrayOnObjRef:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, objrefs: Iterable[ObjRef]): ...
    @overload
    def Add(self, objref: ObjRef) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[ObjRef]: ...
    @overload
    def ToNonConstArray(self, doc: RhinoDoc) -> Iterable[ObjRef]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class ClassArrayString:
    @overload
    def __init__(self): ...
    @overload
    def Add(self, s: str) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[str]: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.Geometry import Interval
class CurveSegment:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def Reversed(self) -> bool: ...
    @property
    def SubDomain(self) -> Interval: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class MeshPointDataStruct:
    m_et: float
    m_ci_type: int
    m_ci_index: int
    m_edge_index: int
    m_face_index: int
    m_Triangle: str
    m_t0: float
    m_t1: float
    m_t2: float
    m_t3: float
    m_Px: float
    m_Py: float
    m_Pz: float
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


from Rhino.Geometry import Point3d
from Rhino.Geometry import Point3f
class RhDisplayPoint:
    @overload
    def __init__(self, location: Point3d): ...
    m_vertex: Point3f
    m__padding1: float
    m_style: int
    m_strokeColor: int
    m_fillColor: int
    m_diameterPixels: float
    m_strokeWidthPixels: float
    m_innerDiameterPixels: float
    m_rotationRadians: float
    m__padding2: float
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArray2dex:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, values: Iterable[IndexPair]): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[IndexPair]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.Geometry import Point3d
from Rhino.Geometry import Polyline
class SimpleArrayArrayPoint3d:
    @overload
    def __init__(self): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self, index: int, pointIndex: int) -> Point3d: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def PointCountAt(self, index: int) -> int: ...
    @overload
    def PolylineAt(self, index: int) -> Polyline: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.FileIO import BinaryArchiveReader
class SimpleArrayBinaryArchiveReader:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, p: IntPtr): ...
    @overload
    def Add(self, reader: BinaryArchiveReader) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def Get(self, index: int) -> BinaryArchiveReader: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.Geometry import Brep
class SimpleArrayBrepPointer:
    @overload
    def __init__(self): ...
    @overload
    def Add(self, brep: Brep, asConst: bool) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[Brep]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayByte:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, initialSize: int): ...
    @overload
    def __init__(self, other: SimpleArrayByte): ...
    @overload
    def __init__(self, values: Iterable[int]): ...
    @overload
    def Array(self) -> IntPtr: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def CopyTo(self, other: SimpleArrayByte) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[int]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.DocObjects import ClippingPlaneObject
class SimpleArrayClippingPlaneObjectPointer:
    @overload
    def __init__(self): ...
    @overload
    def Add(self, clippingplane: ClippingPlaneObject, asConst: bool) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayCurvePointer:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, curves: Iterable[Curve]): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[Curve]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayDouble:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, items: Iterable[float]): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[float]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.Geometry import Extrusion
class SimpleArrayExtrusionPointer:
    @overload
    def __init__(self): ...
    @overload
    def Add(self, extrusion: Extrusion, asConst: bool) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[Extrusion]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayFloat:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, initialSize: int): ...
    @overload
    def __init__(self, other: SimpleArrayFloat): ...
    @overload
    def __init__(self, values: Iterable[float]): ...
    @overload
    def Array(self) -> IntPtr: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def CopyTo(self, other: SimpleArrayFloat) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[float]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayGeometryPointer:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, geometry: Iterable[GeometryBase]): ...
    @overload
    def __init__(self, geometry: Iterable[Any]): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[GeometryBase]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import Guid
class SimpleArrayGuid:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, values: Iterable[Guid]): ...
    @overload
    def Append(self, uuid: Guid) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Capacity(self) -> int: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self) -> Sequence[Guid]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @Capacity.setter
    def Capacity(self, value: int) -> None: ...
    @overload
    def ToArray(self) -> Iterable[Guid]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import Guid
class SimpleArrayGuidPointer:
    @overload
    def __init__(self): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self) -> Sequence[Guid]: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[Guid]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayHatchLinePointer:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, hatchLines: Iterable[HatchLine]): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayInt:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, values: Iterable[int]): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[int]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.Geometry import Interval
class SimpleArrayInterval:
    @overload
    def __init__(self): ...
    @overload
    def Add(self, interval: Interval) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[Interval]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayIntPtr:
    @overload
    def __init__(self): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[IntPtr]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayLine:
    @overload
    def __init__(self): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[Line]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayLinetypePointer:
    @overload
    def __init__(self): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[Linetype]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayMeshFace:
    @overload
    def __init__(self): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[MeshFace]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.Geometry import Mesh
class SimpleArrayMeshPointer:
    @overload
    def __init__(self): ...
    @overload
    def Add(self, mesh: Mesh, asConst: bool) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[Mesh]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayPlane:
    @overload
    def __init__(self): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[Plane]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayPoint2d:
    @overload
    def __init__(self): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[Point2d]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.Geometry import Point3d
class SimpleArrayPoint3d:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, pts: Iterable[Point3d]): ...
    @overload
    def Add(self, pt: Point3d) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[Point3d]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.Geometry import SubD
class SimpleArraySubDPointer:
    @overload
    def __init__(self): ...
    @overload
    def Add(self, subd: SubD, asConst: bool) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[SubD]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArraySurfacePointer:
    @overload
    def __init__(self): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[Surface]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class SimpleArrayUint:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, values: Iterable[int]): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @property
    def UnsignedCount(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[int]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class StdVectorByte:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, initialSize: int): ...
    @overload
    def __init__(self, other: StdVectorByte): ...
    @overload
    def __init__(self, values: Iterable[int]): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def CopyTo(self, other: StdVectorByte) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Memory(self) -> IntPtr: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[int]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class StdVectorFloat:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, initialSize: int): ...
    @overload
    def __init__(self, other: StdVectorFloat): ...
    @overload
    def __init__(self, values: Iterable[float]): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def CopyTo(self, other: StdVectorFloat) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def Memory(self) -> IntPtr: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[float]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from System import Guid
class StdVectorGuid:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, values: Iterable[Guid]): ...
    @overload
    def Append(self, uuid: Guid) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self, index: int) -> Guid: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToArray(self) -> Iterable[Guid]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
from Rhino.Geometry import Mesh
class StdVectorOfSharedPtrToMesh:
    @overload
    def __init__(self): ...
    @overload
    def Add(self, mesh: Mesh, asConst: bool) -> None: ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[Mesh]: ...
    @overload
    def ToString(self) -> str: ...


from System import IntPtr
class StringHolder:
    @overload
    def __init__(self): ...
    @overload
    def ConstPointer(self) -> IntPtr: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    @staticmethod
    def GetString(pStringHolder: IntPtr) -> str: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    def ToStringSafe(self) -> str: ...


from System import IntPtr
class StringWrapper:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, s: str): ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def ConstPointer(self) -> IntPtr: ...
    @property
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    @staticmethod
    def GetStringFromPointer(pConstON_wString: IntPtr) -> str: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def SetString(self, s: str) -> None: ...
    @overload
    @staticmethod
    def SetStringOnPointer(pON_wString: IntPtr, s: str) -> None: ...
    @overload
    def ToString(self) -> str: ...

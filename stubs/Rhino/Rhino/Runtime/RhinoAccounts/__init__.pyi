from typing import overload, Any, Iterable, Iterator, Sequence, MutableSequence, Callable
from enum import Enum

from System import Action
from System import IFormatProvider
from System import IProgress
from System import Tuple
from System import TypeCode
from System.Collections import IDictionary
from System.Collections.Generic import Dictionary
from System.Collections.Generic import IReadOnlyCollection
from System.Collections.Generic import IReadOnlyDictionary
from System.Reflection import Assembly
from System.Reflection import MethodBase
from System.Runtime.Serialization import SerializationInfo
from System.Runtime.Serialization import StreamingContext
from System.Threading import CancellationToken
from System.Threading.Tasks import Task



class IOAuth2Token:
    @property
    def Exp(self) -> DateTime | None: ...
    @property
    def IsExpired(self) -> bool: ...
    @property
    def RawToken(self) -> str: ...
    @property
    def Scope(self) -> IReadOnlyCollection: ...


class IOpenIDConnectToken:
    @property
    def AdminGroups(self) -> IReadOnlyDictionary: ...
    @property
    def AllGroups(self) -> IReadOnlyDictionary: ...
    @property
    def AtHash(self) -> str: ...
    @property
    def Aud(self) -> str: ...
    @property
    def AuthTime(self) -> DateTime | None: ...
    @property
    def Emails(self) -> IReadOnlyCollection: ...
    @property
    def EmailVerified(self) -> bool | None: ...
    @property
    def Exp(self) -> DateTime | None: ...
    @property
    def Iat(self) -> DateTime | None: ...
    @property
    def IsExpired(self) -> bool: ...
    @property
    def Iss(self) -> str: ...
    @property
    def IsUpdated(self) -> bool: ...
    @property
    def Locale(self) -> str: ...
    @property
    def MemberGroups(self) -> IReadOnlyDictionary: ...
    @property
    def Name(self) -> str: ...
    @property
    def Nonce(self) -> str: ...
    @property
    def OwnerGroups(self) -> IReadOnlyDictionary: ...
    @property
    def Phone(self) -> str: ...
    @property
    def Picture(self) -> str: ...
    @property
    def RawToken(self) -> str: ...
    @property
    def Sub(self) -> str: ...
    @property
    def UpdatedAt(self) -> DateTime | None: ...


class IRhinoAccountsManager:
    @overload
    def ExecuteProtectedCode(self, protectedCode: Action) -> None: ...
    @overload
    def ExecuteProtectedCodeAsync(self, protectedCode: Callable[..., Any]) -> Task: ...
    @overload
    def GetAuthTokensAsync(self, clientId: str, clientSecret: str, secretKey: SecretKey, cancellationToken: CancellationToken) -> Task: ...
    @overload
    def GetAuthTokensAsync(self, clientId: str, clientSecret: str, scope: Iterable[str], prompt: str, maxAge: int | None, showUI: bool, progress: IProgress, secretKey: SecretKey, cancellationToken: CancellationToken) -> Task: ...
    @overload
    def RevokeAuthTokenAsync(self, oauth2Token: IOAuth2Token, secretKey: SecretKey, cancellationToken: CancellationToken) -> Task: ...
    @overload
    def TryGetAuthTokens(self, clientId: str, secretKey: SecretKey) -> Tuple: ...
    @overload
    def TryGetAuthTokens(self, clientId: str, scope: Iterable[str], secretKey: SecretKey) -> Tuple: ...
    @overload
    def UpdateOpenIDConnectTokenAsync(self, currentToken: IOpenIDConnectToken, oauth2Token: IOAuth2Token, secretKey: SecretKey, cancellationToken: CancellationToken) -> Task: ...


class ProgressState(Enum):
    AwaitingLogin = 0
    RetrievingTokens = 1
    AwaitingRedirect = 2
    Other = 3


class RhinoAccoountsProgressInfo:
    @overload
    def __init__(self, state: ProgressState, metadata: Dictionary, customDescription: str): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Description(self) -> str: ...
    @property
    def Metadata(self) -> Dictionary: ...
    @property
    def State(self) -> ProgressState: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsAuthTokenMismatchException(RhinoAccountsException):
    @overload
    def __init__(self, innerException: Exception): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @overload
    def __init__(self, currentUsername: str, newUsername: str, innerException: Exception): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Data(self) -> IDictionary: ...
    @property
    def HelpLink(self) -> str: ...
    @property
    def HResult(self) -> int: ...
    @property
    def InnerException(self) -> Exception: ...
    @property
    def Message(self) -> str: ...
    @property
    def Source(self) -> str: ...
    @property
    def StackTrace(self) -> str: ...
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsCannotListenException(RhinoAccountsException):
    @overload
    def __init__(self, innerException: Exception): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Data(self) -> IDictionary: ...
    @property
    def HelpLink(self) -> str: ...
    @property
    def HResult(self) -> int: ...
    @property
    def InnerException(self) -> Exception: ...
    @property
    def Message(self) -> str: ...
    @property
    def Source(self) -> str: ...
    @property
    def StackTrace(self) -> str: ...
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsException:
    @overload
    def __init__(self, innerException: Exception): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Data(self) -> IDictionary: ...
    @property
    def HelpLink(self) -> str: ...
    @property
    def HResult(self) -> int: ...
    @property
    def InnerException(self) -> Exception: ...
    @property
    def Message(self) -> str: ...
    @property
    def Source(self) -> str: ...
    @property
    def StackTrace(self) -> str: ...
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsGroup:
    @overload
    def __init__(self, id: str, name: str): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Id(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsInvalidResponseException(RhinoAccountsException):
    @overload
    def __init__(self, innerException: Exception): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Data(self) -> IDictionary: ...
    @property
    def HelpLink(self) -> str: ...
    @property
    def HResult(self) -> int: ...
    @property
    def InnerException(self) -> Exception: ...
    @property
    def Message(self) -> str: ...
    @property
    def Source(self) -> str: ...
    @property
    def StackTrace(self) -> str: ...
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsInvalidStateException(RhinoAccountsException):
    @overload
    def __init__(self, innerException: Exception): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Data(self) -> IDictionary: ...
    @property
    def HelpLink(self) -> str: ...
    @property
    def HResult(self) -> int: ...
    @property
    def InnerException(self) -> Exception: ...
    @property
    def Message(self) -> str: ...
    @property
    def Source(self) -> str: ...
    @property
    def StackTrace(self) -> str: ...
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsInvalidTokenException(RhinoAccountsException):
    @overload
    def __init__(self, innerException: Exception): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Data(self) -> IDictionary: ...
    @property
    def HelpLink(self) -> str: ...
    @property
    def HResult(self) -> int: ...
    @property
    def InnerException(self) -> Exception: ...
    @property
    def Message(self) -> str: ...
    @property
    def Source(self) -> str: ...
    @property
    def StackTrace(self) -> str: ...
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsManager:
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    @staticmethod
    def ExecuteProtectedCode(protectedCode: Action) -> None: ...
    @overload
    @staticmethod
    def ExecuteProtectedCodeAsync(protectedCode: Callable[..., Any]) -> Task: ...
    @overload
    @staticmethod
    def GetAuthTokensAsync(clientId: str, clientSecret: str, secretKey: SecretKey, cancellationToken: CancellationToken) -> Task: ...
    @overload
    @staticmethod
    def GetAuthTokensAsync(clientId: str, clientSecret: str, scope: Iterable[str], prompt: str, maxAge: int | None, showUI: bool, progress: IProgress, secretKey: SecretKey, cancellationToken: CancellationToken) -> Task: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    @staticmethod
    def RevokeAuthTokenAsync(oauth2Token: IOAuth2Token, secretKey: SecretKey, cancellationToken: CancellationToken) -> Task: ...
    @overload
    def ToString(self) -> str: ...
    @overload
    @staticmethod
    def TryGetAuthTokens(clientId: str, secretKey: SecretKey) -> Tuple: ...
    @overload
    @staticmethod
    def TryGetAuthTokens(clientId: str, scope: Iterable[str], secretKey: SecretKey) -> Tuple: ...
    @overload
    @staticmethod
    def UpdateOpenIDConnectTokenAsync(currentToken: IOpenIDConnectToken, oauth2Token: IOAuth2Token, secretKey: SecretKey, cancellationToken: CancellationToken) -> Task: ...


class RhinoAccountsOperationInProgressException(RhinoAccountsException):
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @overload
    def __init__(self, assembly: Assembly, innerException: Exception): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Data(self) -> IDictionary: ...
    @property
    def HelpLink(self) -> str: ...
    @property
    def HResult(self) -> int: ...
    @property
    def InnerException(self) -> Exception: ...
    @property
    def Message(self) -> str: ...
    @property
    def Source(self) -> str: ...
    @property
    def StackTrace(self) -> str: ...
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsProxyException(RhinoAccountsException):
    @overload
    def __init__(self, innerException: Exception): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Data(self) -> IDictionary: ...
    @property
    def HelpLink(self) -> str: ...
    @property
    def HResult(self) -> int: ...
    @property
    def InnerException(self) -> Exception: ...
    @property
    def Message(self) -> str: ...
    @property
    def Source(self) -> str: ...
    @property
    def StackTrace(self) -> str: ...
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsServerException(RhinoAccountsException):
    @overload
    def __init__(self, innerException: Exception): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Data(self) -> IDictionary: ...
    @property
    def HelpLink(self) -> str: ...
    @property
    def HResult(self) -> int: ...
    @property
    def InnerException(self) -> Exception: ...
    @property
    def Message(self) -> str: ...
    @property
    def Source(self) -> str: ...
    @property
    def StackTrace(self) -> str: ...
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class RhinoAccountsServerNotReachableException(RhinoAccountsException):
    @overload
    def __init__(self, innerException: Exception): ...
    @overload
    def __init__(self, message: str, innerException: Exception): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Data(self) -> IDictionary: ...
    @property
    def HelpLink(self) -> str: ...
    @property
    def HResult(self) -> int: ...
    @property
    def InnerException(self) -> Exception: ...
    @property
    def Message(self) -> str: ...
    @property
    def Source(self) -> str: ...
    @property
    def StackTrace(self) -> str: ...
    @property
    def TargetSite(self) -> MethodBase: ...
    @overload
    def GetBaseException(self) -> Exception: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def GetType(self) -> type: ...
    @HelpLink.setter
    def HelpLink(self, value: str) -> None: ...
    @Source.setter
    def Source(self, value: str) -> None: ...
    @overload
    def ToString(self) -> str: ...


class SecretKey:
    @overload
    def __init__(self): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode(self) -> int: ...
    @overload
    def GetType(self) -> type: ...
    @overload
    def ToString(self) -> str: ...

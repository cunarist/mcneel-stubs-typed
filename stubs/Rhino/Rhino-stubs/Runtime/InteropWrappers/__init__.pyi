from typing import Tuple, Iterable, Iterator, overload
from enum import Enum



from ...DocObjects import ObjRef
class ClassArrayObjRef:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, objrefs: Iterable[ObjRef]): ...
    def Add(self, objref: ObjRef) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToNonConstArray(self) -> Iterable[ObjRef]: ...
    def ToString(self) -> str: ...


from ...DocObjects import ObjRef
from .. import RhinoDoc
class ClassArrayOnObjRef:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, objrefs: Iterable[ObjRef]): ...
    def Add(self, objref: ObjRef) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    @overload
    def ToNonConstArray(self) -> Iterable[ObjRef]: ...
    @overload
    def ToNonConstArray(self, doc: RhinoDoc) -> Iterable[ObjRef]: ...
    def ToString(self) -> str: ...


class ClassArrayString:
    def __init__(self): ...
    def Add(self, s: str) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[str]: ...
    def ToString(self) -> str: ...


from ...Geometry import Interval
class CurveSegment:
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def Reversed(self) -> bool: ...
    @property
    def SubDomain(self) -> Interval: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class MeshPointDataStruct:
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


class SimpleArray2dex:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, values: Iterable[IndexPair]): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[IndexPair]: ...
    def ToString(self) -> str: ...


from ...Geometry import Point3d
class SimpleArrayArrayPoint3d:
    def __init__(self): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self, index: int, pointIndex: int) -> Point3d: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def PointCountAt(self, index: int) -> int: ...
    def ToString(self) -> str: ...


from ...FileIO import BinaryArchiveReader
class SimpleArrayBinaryArchiveReader:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, p: IntPtr): ...
    def Add(self, reader: BinaryArchiveReader) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def Get(self, index: int) -> BinaryArchiveReader: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToString(self) -> str: ...


from ...Geometry import Brep
class SimpleArrayBrepPointer:
    def __init__(self): ...
    def Add(self, brep: Brep, asConst: bool) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToNonConstArray(self) -> Iterable[Brep]: ...
    def ToString(self) -> str: ...


class SimpleArrayByte:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, initialSize: int): ...
    @overload
    def __init__(self, other: SimpleArrayByte): ...
    @overload
    def __init__(self, values: Iterable[Byte]): ...
    def Array(self) -> IntPtr: ...
    def ConstPointer(self) -> IntPtr: ...
    def CopyTo(self, other: SimpleArrayByte) -> None: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Byte]: ...
    def ToString(self) -> str: ...


from ...DocObjects import ClippingPlaneObject
class SimpleArrayClippingPlaneObjectPointer:
    def __init__(self): ...
    def Add(self, clippingplane: ClippingPlaneObject, asConst: bool) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToString(self) -> str: ...


class SimpleArrayCurvePointer:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, curves: Iterable[Curve]): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToNonConstArray(self) -> Iterable[Curve]: ...
    def ToString(self) -> str: ...


class SimpleArrayDouble:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, items: Iterable[float]): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[float]: ...
    def ToString(self) -> str: ...


from ...Geometry import Extrusion
class SimpleArrayExtrusionPointer:
    def __init__(self): ...
    def Add(self, extrusion: Extrusion, asConst: bool) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToNonConstArray(self) -> Iterable[Extrusion]: ...
    def ToString(self) -> str: ...


class SimpleArrayFloat:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, initialSize: int): ...
    @overload
    def __init__(self, other: SimpleArrayFloat): ...
    @overload
    def __init__(self, values: Iterable[Single]): ...
    def Array(self) -> IntPtr: ...
    def ConstPointer(self) -> IntPtr: ...
    def CopyTo(self, other: SimpleArrayFloat) -> None: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Single]: ...
    def ToString(self) -> str: ...


class SimpleArrayGeometryPointer:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, geometry: Iterable[GeometryBase]): ...
    @overload
    def __init__(self, geometry: IEnumerable): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToNonConstArray(self) -> Iterable[GeometryBase]: ...
    def ToString(self) -> str: ...


class SimpleArrayGuid:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, values: Iterable[Guid]): ...
    def Append(self, uuid: Guid) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self, index: int) -> Guid: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Guid]: ...
    def ToString(self) -> str: ...


class SimpleArrayGuidPointer:
    def __init__(self): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self, index: int) -> Guid: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Guid]: ...
    def ToString(self) -> str: ...


class SimpleArrayInt:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, values: Iterable[int]): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[int]: ...
    def ToString(self) -> str: ...


from ...Geometry import Interval
class SimpleArrayInterval:
    def __init__(self): ...
    def Add(self, interval: Interval) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Interval]: ...
    def ToString(self) -> str: ...


class SimpleArrayLine:
    def __init__(self): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Line]: ...
    def ToString(self) -> str: ...


class SimpleArrayLinetypePointer:
    def __init__(self): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToNonConstArray(self) -> Iterable[Linetype]: ...
    def ToString(self) -> str: ...


from ...Geometry import Mesh
class SimpleArrayMeshPointer:
    def __init__(self): ...
    def Add(self, mesh: Mesh, asConst: bool) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToNonConstArray(self) -> Iterable[Mesh]: ...
    def ToString(self) -> str: ...


class SimpleArrayPlane:
    def __init__(self): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Plane]: ...
    def ToString(self) -> str: ...


class SimpleArrayPoint2d:
    def __init__(self): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Point2d]: ...
    def ToString(self) -> str: ...


class SimpleArrayPoint3d:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, pts: Iterable[Point3d]): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Point3d]: ...
    def ToString(self) -> str: ...


from ...Geometry import SubD
class SimpleArraySubDPointer:
    def __init__(self): ...
    def Add(self, subd: SubD, asConst: bool) -> None: ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToNonConstArray(self) -> Iterable[SubD]: ...
    def ToString(self) -> str: ...


class SimpleArraySurfacePointer:
    def __init__(self): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToNonConstArray(self) -> Iterable[Surface]: ...
    def ToString(self) -> str: ...


class SimpleArrayUint:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, values: Iterable[UInt32]): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @property
    def UnsignedCount(self) -> UInt32: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[UInt32]: ...
    def ToString(self) -> str: ...


class StdVectorByte:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, initialSize: UInt64): ...
    @overload
    def __init__(self, other: StdVectorByte): ...
    @overload
    def __init__(self, values: Iterable[Byte]): ...
    def ConstPointer(self) -> IntPtr: ...
    def CopyTo(self, other: StdVectorByte) -> None: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> UInt64: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def Memory(self) -> IntPtr: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Byte]: ...
    def ToString(self) -> str: ...


class StdVectorFloat:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, initialSize: UInt64): ...
    @overload
    def __init__(self, other: StdVectorFloat): ...
    @overload
    def __init__(self, values: Iterable[Single]): ...
    def ConstPointer(self) -> IntPtr: ...
    def CopyTo(self, other: StdVectorFloat) -> None: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Count(self) -> UInt64: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def Memory(self) -> IntPtr: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToArray(self) -> Iterable[Single]: ...
    def ToString(self) -> str: ...


class StringHolder:
    def __init__(self): ...
    def ConstPointer(self) -> IntPtr: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    def GetHashCode(self) -> int: ...
    @staticmethod
    def GetString(pStringHolder: IntPtr) -> str: ...
    def GetType(self) -> Type: ...
    def NonConstPointer(self) -> IntPtr: ...
    def ToString(self) -> str: ...


class StringWrapper:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, s: str): ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def ConstPointer(self) -> IntPtr: ...
    @property
    def NonConstPointer(self) -> IntPtr: ...
    def GetHashCode(self) -> int: ...
    @staticmethod
    def GetStringFromPointer(pConstON_wString: IntPtr) -> str: ...
    def GetType(self) -> Type: ...
    def SetString(self, s: str) -> None: ...
    @staticmethod
    def SetStringOnPointer(pON_wString: IntPtr, s: str) -> None: ...
    def ToString(self) -> str: ...

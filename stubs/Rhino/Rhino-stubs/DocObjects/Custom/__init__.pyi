from typing import Tuple, Iterable, Iterator, overload
from enum import Enum



class ClassIdAttribute:
    def __init__(self, id: str): ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def TypeId(self) -> Object: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def IsDefaultAttribute(self) -> bool: ...
    def Match(self, obj: Object) -> bool: ...
    def ToString(self) -> str: ...


from ...Geometry import ComponentIndex
from ...Display import VisualAnalysisMode
from ...FileIO import TextLog
from ...Geometry import MeshType
from ...Geometry import MeshingParameters
from ...UI.Gumball import GumballFrame
from ...Display import DisplayPipelineAttributes
from ...Geometry import BoundingBox
from ...Geometry import Transform
from ...Render import TextureMapping
from ...Render import RenderMaterial
from ...Display import RhinoViewport
from ...Geometry import ComponentStatus
from ...FileIO import SerializationOptions
class CustomBrepObject(BrepObject):
    def ClearId(self) -> None: ...
    def ClearIndex(self) -> None: ...
    def ClearName(self) -> None: ...
    def CommitChanges(self) -> bool: ...
    def CopyHistoryOnReplace(self) -> bool: ...
    def CreateMeshes(self, meshType: MeshType, parameters: MeshingParameters, ignoreCustomParameters: bool) -> int: ...
    def DataCRC(self, currentRemainder: UInt32) -> UInt32: ...
    def Description(self, textLog: TextLog) -> None: ...
    def Dispose(self) -> None: ...
    def DuplicateBrepGeometry(self) -> Brep: ...
    def DuplicateGeometry(self) -> GeometryBase: ...
    def EnableCustomGrips(self, customGrips: CustomObjectGrips) -> bool: ...
    def EnableVisualAnalysisMode(self, mode: VisualAnalysisMode, enable: bool) -> bool: ...
    def EnsurePrivateCopy(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def BrepGeometry(self) -> Brep: ...
    @property
    def ComponentStatus(self) -> ComponentStatus: ...
    @property
    def ComponentType(self) -> ModelComponentType: ...
    @property
    def DeletedName(self) -> str: ...
    @property
    def Disposed(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Geometry(self) -> GeometryBase: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def GroupCount(self) -> int: ...
    @property
    def HasDynamicTransform(self) -> bool: ...
    @property
    def HasId(self) -> bool: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasSubobjectMaterials(self) -> bool: ...
    @property
    def HasUserData(self) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdIsLocked(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def IndexIsLocked(self) -> bool: ...
    @property
    def InstanceDefinitionModelSerialNumber(self) -> UInt32: ...
    @property
    def IsComponentStatusLocked(self) -> bool: ...
    @property
    def IsDeletable(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDocumentControlled(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry(self) -> bool: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsNormal(self) -> bool: ...
    @property
    def IsPictureFrame(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsSolid(self) -> bool: ...
    @property
    def IsSystemComponent(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def ModelSerialNumber(self) -> UInt32: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIsLocked(self) -> bool: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    def ReferenceModelSerialNumber(self) -> UInt32: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RuntimeSerialNumber(self) -> UInt32: ...
    @property
    def SubobjectMaterialComponents(self) -> Iterable[ComponentIndex]: ...
    @property
    def UserData(self) -> UserDataList: ...
    @property
    def UserDictionary(self) -> ArchivableDictionary: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber(self) -> UInt32: ...
    def GetActiveVisualAnalysisModes(self) -> Iterable[VisualAnalysisMode]: ...
    def GetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str) -> IConvertible: ...
    def GetDynamicTransform(self) -> Tuple[bool, Transform]: ...
    def GetGrips(self) -> Iterable[GripObject]: ...
    def GetGroupList(self) -> Iterable[int]: ...
    def GetHashCode(self) -> int: ...
    def GetHighlightedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex) -> Material: ...
    @overload
    def GetMaterial(self, frontMaterial: bool) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> Material: ...
    def GetMeshes(self, meshType: MeshType) -> Iterable[Mesh]: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetRenderMaterial(self, frontMaterial: bool) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> RenderMaterial: ...
    @overload
    def GetRenderMeshParameters(self) -> MeshingParameters: ...
    @overload
    def GetRenderMeshParameters(self, returnDocumentParametersIfUnset: bool) -> MeshingParameters: ...
    def GetRenderPrimitiveList(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def GetSelectedSubObjects(self) -> Iterable[ComponentIndex]: ...
    def GetSubObjects(self) -> Iterable[RhinoObject]: ...
    def GetTextureChannels(self) -> Iterable[int]: ...
    @overload
    def GetTextureMapping(self, channel: int) -> TextureMapping: ...
    @overload
    def GetTextureMapping(self, channel: int) -> Tuple[TextureMapping, Transform]: ...
    def GetType(self) -> Type: ...
    def HasHistoryRecord(self) -> bool: ...
    def HasTextureMapping(self) -> bool: ...
    def Highlight(self, enable: bool) -> bool: ...
    def HighlightSubObject(self, componentIndex: ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def InVisualAnalysisMode(self) -> bool: ...
    @overload
    def InVisualAnalysisMode(self, mode: VisualAnalysisMode) -> bool: ...
    def IsActiveInViewport(self, viewport: RhinoViewport) -> bool: ...
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    def IsMeshable(self, meshType: MeshType) -> bool: ...
    @overload
    def IsSelectable(self) -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    def IsSubObjectHighlighted(self, componentIndex: ComponentIndex) -> bool: ...
    def IsSubObjectSelectable(self, componentIndex: ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    def IsSubObjectSelected(self, componentIndex: ComponentIndex) -> bool: ...
    def IsValidWithLog(self) -> Tuple[bool, str]: ...
    def LockId(self) -> None: ...
    def LockIndex(self) -> None: ...
    def LockName(self) -> None: ...
    def MemoryEstimate(self) -> UInt32: ...
    def MeshCount(self, meshType: MeshType, parameters: MeshingParameters) -> int: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: ObjectAttributes) -> None: ...
    @ComponentStatus.setter
    def ComponentStatus(self, value: ComponentStatus) -> None: ...
    @GripsOn.setter
    def GripsOn(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Guid) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    def SetCopyHistoryOnReplace(self, bCopy: bool) -> None: ...
    def SetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str, value: Object) -> None: ...
    def SetRenderMeshParameters(self, mp: MeshingParameters) -> bool: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping) -> int: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping, objectTransform: Transform) -> int: ...
    def ShortDescription(self, plural: bool) -> str: ...
    def SupportsRenderPrimitiveList(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> bool: ...
    def ToJSON(self, options: SerializationOptions) -> str: ...
    def ToString(self) -> str: ...
    def TryGetGumballFrame(self) -> Tuple[bool, GumballFrame]: ...
    def TryGetRenderPrimitiveBoundingBox(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> Tuple[bool, BoundingBox]: ...
    def UnhighlightAllSubObjects(self) -> int: ...
    def UnselectAllSubObjects(self) -> int: ...


from ...Geometry import ComponentIndex
from ...Display import VisualAnalysisMode
from ...FileIO import TextLog
from ...Geometry import MeshType
from ...Geometry import MeshingParameters
from ...UI.Gumball import GumballFrame
from ...Display import DisplayPipelineAttributes
from ...Geometry import BoundingBox
from ...Geometry import Transform
from ...Render import TextureMapping
from ...Render import RenderMaterial
from ...Display import RhinoViewport
from ...Geometry import ComponentStatus
from ...FileIO import SerializationOptions
class CustomCurveObject(CurveObject):
    def ClearId(self) -> None: ...
    def ClearIndex(self) -> None: ...
    def ClearName(self) -> None: ...
    def CommitChanges(self) -> bool: ...
    def CopyHistoryOnReplace(self) -> bool: ...
    def CreateMeshes(self, meshType: MeshType, parameters: MeshingParameters, ignoreCustomParameters: bool) -> int: ...
    def DataCRC(self, currentRemainder: UInt32) -> UInt32: ...
    def Description(self, textLog: TextLog) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    def DuplicateCurveGeometry(self) -> Curve: ...
    def DuplicateGeometry(self) -> GeometryBase: ...
    def EnableCustomGrips(self, customGrips: CustomObjectGrips) -> bool: ...
    def EnableVisualAnalysisMode(self, mode: VisualAnalysisMode, enable: bool) -> bool: ...
    def EnsurePrivateCopy(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def ComponentStatus(self) -> ComponentStatus: ...
    @property
    def ComponentType(self) -> ModelComponentType: ...
    @property
    def CurveGeometry(self) -> Curve: ...
    @property
    def DeletedName(self) -> str: ...
    @property
    def Disposed(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Geometry(self) -> GeometryBase: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def GroupCount(self) -> int: ...
    @property
    def HasDynamicTransform(self) -> bool: ...
    @property
    def HasId(self) -> bool: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasSubobjectMaterials(self) -> bool: ...
    @property
    def HasUserData(self) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdIsLocked(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def IndexIsLocked(self) -> bool: ...
    @property
    def InstanceDefinitionModelSerialNumber(self) -> UInt32: ...
    @property
    def IsComponentStatusLocked(self) -> bool: ...
    @property
    def IsDeletable(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDocumentControlled(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry(self) -> bool: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsNormal(self) -> bool: ...
    @property
    def IsPictureFrame(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsSolid(self) -> bool: ...
    @property
    def IsSystemComponent(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def ModelSerialNumber(self) -> UInt32: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIsLocked(self) -> bool: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    def ReferenceModelSerialNumber(self) -> UInt32: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RuntimeSerialNumber(self) -> UInt32: ...
    @property
    def SubobjectMaterialComponents(self) -> Iterable[ComponentIndex]: ...
    @property
    def UserData(self) -> UserDataList: ...
    @property
    def UserDictionary(self) -> ArchivableDictionary: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber(self) -> UInt32: ...
    def GetActiveVisualAnalysisModes(self) -> Iterable[VisualAnalysisMode]: ...
    def GetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str) -> IConvertible: ...
    def GetDynamicTransform(self) -> Tuple[bool, Transform]: ...
    def GetGrips(self) -> Iterable[GripObject]: ...
    def GetGroupList(self) -> Iterable[int]: ...
    def GetHashCode(self) -> int: ...
    def GetHighlightedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetMaterial(self, frontMaterial: bool) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> Material: ...
    def GetMeshes(self, meshType: MeshType) -> Iterable[Mesh]: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, frontMaterial: bool) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> RenderMaterial: ...
    @overload
    def GetRenderMeshParameters(self) -> MeshingParameters: ...
    @overload
    def GetRenderMeshParameters(self, returnDocumentParametersIfUnset: bool) -> MeshingParameters: ...
    def GetRenderPrimitiveList(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def GetSelectedSubObjects(self) -> Iterable[ComponentIndex]: ...
    def GetSubObjects(self) -> Iterable[RhinoObject]: ...
    def GetTextureChannels(self) -> Iterable[int]: ...
    @overload
    def GetTextureMapping(self, channel: int) -> TextureMapping: ...
    @overload
    def GetTextureMapping(self, channel: int) -> Tuple[TextureMapping, Transform]: ...
    def GetType(self) -> Type: ...
    def HasHistoryRecord(self) -> bool: ...
    def HasTextureMapping(self) -> bool: ...
    def Highlight(self, enable: bool) -> bool: ...
    def HighlightSubObject(self, componentIndex: ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def InVisualAnalysisMode(self) -> bool: ...
    @overload
    def InVisualAnalysisMode(self, mode: VisualAnalysisMode) -> bool: ...
    def IsActiveInViewport(self, viewport: RhinoViewport) -> bool: ...
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    def IsMeshable(self, meshType: MeshType) -> bool: ...
    @overload
    def IsSelectable(self) -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    def IsSubObjectHighlighted(self, componentIndex: ComponentIndex) -> bool: ...
    def IsSubObjectSelectable(self, componentIndex: ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    def IsSubObjectSelected(self, componentIndex: ComponentIndex) -> bool: ...
    def IsValidWithLog(self) -> Tuple[bool, str]: ...
    def LockId(self) -> None: ...
    def LockIndex(self) -> None: ...
    def LockName(self) -> None: ...
    def MemoryEstimate(self) -> UInt32: ...
    def MeshCount(self, meshType: MeshType, parameters: MeshingParameters) -> int: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: ObjectAttributes) -> None: ...
    @ComponentStatus.setter
    def ComponentStatus(self, value: ComponentStatus) -> None: ...
    @GripsOn.setter
    def GripsOn(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Guid) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    def SetCopyHistoryOnReplace(self, bCopy: bool) -> None: ...
    def SetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str, value: Object) -> None: ...
    def SetRenderMeshParameters(self, mp: MeshingParameters) -> bool: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping) -> int: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping, objectTransform: Transform) -> int: ...
    def ShortDescription(self, plural: bool) -> str: ...
    def SupportsRenderPrimitiveList(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> bool: ...
    def ToJSON(self, options: SerializationOptions) -> str: ...
    def ToString(self) -> str: ...
    def TryGetGumballFrame(self) -> Tuple[bool, GumballFrame]: ...
    def TryGetRenderPrimitiveBoundingBox(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> Tuple[bool, BoundingBox]: ...
    def UnhighlightAllSubObjects(self) -> int: ...
    def UnselectAllSubObjects(self) -> int: ...


from ...Geometry import Point3d
from ...Geometry import Transform
from ...Geometry import Vector3d
from ...Geometry import ComponentIndex
from ...Display import VisualAnalysisMode
from ...FileIO import TextLog
from ...Geometry import MeshType
from ...Geometry import MeshingParameters
from ...UI.Gumball import GumballFrame
from ...Display import DisplayPipelineAttributes
from ...Geometry import BoundingBox
from ...Render import TextureMapping
from ...Render import RenderMaterial
from ...Display import RhinoViewport
from ...Geometry import ComponentStatus
from ...FileIO import SerializationOptions
class CustomGripObject(GripObject):
    def __init__(self): ...
    def ClearId(self) -> None: ...
    def ClearIndex(self) -> None: ...
    def ClearName(self) -> None: ...
    def CommitChanges(self) -> bool: ...
    def CopyHistoryOnReplace(self) -> bool: ...
    def CreateMeshes(self, meshType: MeshType, parameters: MeshingParameters, ignoreCustomParameters: bool) -> int: ...
    def DataCRC(self, currentRemainder: UInt32) -> UInt32: ...
    def Description(self, textLog: TextLog) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    def DuplicateGeometry(self) -> GeometryBase: ...
    def EnableCustomGrips(self, customGrips: CustomObjectGrips) -> bool: ...
    def EnableVisualAnalysisMode(self, mode: VisualAnalysisMode, enable: bool) -> bool: ...
    def EnsurePrivateCopy(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def ComponentStatus(self) -> ComponentStatus: ...
    @property
    def ComponentType(self) -> ModelComponentType: ...
    @property
    def CurrentLocation(self) -> Point3d: ...
    @property
    def DeletedName(self) -> str: ...
    @property
    def Disposed(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Geometry(self) -> GeometryBase: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def GroupCount(self) -> int: ...
    @property
    def HasDynamicTransform(self) -> bool: ...
    @property
    def HasId(self) -> bool: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasSubobjectMaterials(self) -> bool: ...
    @property
    def HasUserData(self) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdIsLocked(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def Index(self) -> int: ...
    @property
    def IndexIsLocked(self) -> bool: ...
    @property
    def InstanceDefinitionModelSerialNumber(self) -> UInt32: ...
    @property
    def IsComponentStatusLocked(self) -> bool: ...
    @property
    def IsDeletable(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDocumentControlled(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry(self) -> bool: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsNormal(self) -> bool: ...
    @property
    def IsPictureFrame(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsSolid(self) -> bool: ...
    @property
    def IsSystemComponent(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def ModelSerialNumber(self) -> UInt32: ...
    @property
    def Moved(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIsLocked(self) -> bool: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    def OriginalLocation(self) -> Point3d: ...
    @property
    def OriginalLocation(self) -> Point3d: ...
    @property
    def OwnerId(self) -> Guid: ...
    @property
    def ReferenceModelSerialNumber(self) -> UInt32: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RuntimeSerialNumber(self) -> UInt32: ...
    @property
    def SubobjectMaterialComponents(self) -> Iterable[ComponentIndex]: ...
    @property
    def UserData(self) -> UserDataList: ...
    @property
    def UserDictionary(self) -> ArchivableDictionary: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def Weight(self) -> float: ...
    @property
    def WorksessionReferenceSerialNumber(self) -> UInt32: ...
    def GetActiveVisualAnalysisModes(self) -> Iterable[VisualAnalysisMode]: ...
    def GetCageParameters(self) -> Tuple[bool, float, float, float]: ...
    def GetCurveParameters(self) -> Tuple[bool, float]: ...
    def GetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str) -> IConvertible: ...
    def GetDynamicTransform(self) -> Tuple[bool, Transform]: ...
    def GetGripDirections(self) -> Tuple[bool, Vector3d, Vector3d, Vector3d]: ...
    def GetGrips(self) -> Iterable[GripObject]: ...
    def GetGroupList(self) -> Iterable[int]: ...
    def GetHashCode(self) -> int: ...
    def GetHighlightedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetMaterial(self, frontMaterial: bool) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> Material: ...
    def GetMeshes(self, meshType: MeshType) -> Iterable[Mesh]: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, frontMaterial: bool) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> RenderMaterial: ...
    @overload
    def GetRenderMeshParameters(self) -> MeshingParameters: ...
    @overload
    def GetRenderMeshParameters(self, returnDocumentParametersIfUnset: bool) -> MeshingParameters: ...
    def GetRenderPrimitiveList(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def GetSelectedSubObjects(self) -> Iterable[ComponentIndex]: ...
    def GetSubObjects(self) -> Iterable[RhinoObject]: ...
    def GetSurfaceParameters(self) -> Tuple[bool, float, float]: ...
    def GetTextureChannels(self) -> Iterable[int]: ...
    @overload
    def GetTextureMapping(self, channel: int) -> TextureMapping: ...
    @overload
    def GetTextureMapping(self, channel: int) -> Tuple[TextureMapping, Transform]: ...
    def GetType(self) -> Type: ...
    def HasHistoryRecord(self) -> bool: ...
    def HasTextureMapping(self) -> bool: ...
    def Highlight(self, enable: bool) -> bool: ...
    def HighlightSubObject(self, componentIndex: ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def InVisualAnalysisMode(self) -> bool: ...
    @overload
    def InVisualAnalysisMode(self, mode: VisualAnalysisMode) -> bool: ...
    def IsActiveInViewport(self, viewport: RhinoViewport) -> bool: ...
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    def IsMeshable(self, meshType: MeshType) -> bool: ...
    @overload
    def IsSelectable(self) -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    def IsSubObjectHighlighted(self, componentIndex: ComponentIndex) -> bool: ...
    def IsSubObjectSelectable(self, componentIndex: ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    def IsSubObjectSelected(self, componentIndex: ComponentIndex) -> bool: ...
    def IsValidWithLog(self) -> Tuple[bool, str]: ...
    def LockId(self) -> None: ...
    def LockIndex(self) -> None: ...
    def LockName(self) -> None: ...
    def MemoryEstimate(self) -> UInt32: ...
    def MeshCount(self, meshType: MeshType, parameters: MeshingParameters) -> int: ...
    @overload
    def Move(self, newLocation: Point3d) -> None: ...
    @overload
    def Move(self, xform: Transform) -> None: ...
    @overload
    def Move(self, delta: Vector3d) -> None: ...
    def NeighborGrip(self, directionR: int, directionS: int, directionT: int, wrap: bool) -> GripObject: ...
    def NewLocation(self) -> None: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: ObjectAttributes) -> None: ...
    @ComponentStatus.setter
    def ComponentStatus(self, value: ComponentStatus) -> None: ...
    @CurrentLocation.setter
    def CurrentLocation(self, value: Point3d) -> None: ...
    @GripsOn.setter
    def GripsOn(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Guid) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @OriginalLocation.setter
    def OriginalLocation(self, value: Point3d) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    @Weight.setter
    def Weight(self, value: float) -> None: ...
    def SetCopyHistoryOnReplace(self, bCopy: bool) -> None: ...
    def SetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str, value: Object) -> None: ...
    def SetRenderMeshParameters(self, mp: MeshingParameters) -> bool: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping) -> int: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping, objectTransform: Transform) -> int: ...
    def ShortDescription(self, plural: bool) -> str: ...
    def SupportsRenderPrimitiveList(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> bool: ...
    def ToJSON(self, options: SerializationOptions) -> str: ...
    def ToString(self) -> str: ...
    def TryGetGumballFrame(self) -> Tuple[bool, GumballFrame]: ...
    def TryGetRenderPrimitiveBoundingBox(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> Tuple[bool, BoundingBox]: ...
    def UndoMove(self) -> None: ...
    def UnhighlightAllSubObjects(self) -> int: ...
    def UnselectAllSubObjects(self) -> int: ...


from ...Geometry import ComponentIndex
from ...Display import VisualAnalysisMode
from ...FileIO import TextLog
from ...Geometry import MeshType
from ...Geometry import MeshingParameters
from ...UI.Gumball import GumballFrame
from ...Display import DisplayPipelineAttributes
from ...Geometry import BoundingBox
from ...Geometry import Transform
from ...Render import TextureMapping
from ...Render import RenderMaterial
from ...Display import RhinoViewport
from ...Geometry import ComponentStatus
from ...FileIO import SerializationOptions
class CustomMeshObject(MeshObject):
    def ClearId(self) -> None: ...
    def ClearIndex(self) -> None: ...
    def ClearName(self) -> None: ...
    def CommitChanges(self) -> bool: ...
    def CopyHistoryOnReplace(self) -> bool: ...
    def CreateMeshes(self, meshType: MeshType, parameters: MeshingParameters, ignoreCustomParameters: bool) -> int: ...
    def DataCRC(self, currentRemainder: UInt32) -> UInt32: ...
    def Description(self, textLog: TextLog) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    def DuplicateGeometry(self) -> GeometryBase: ...
    def DuplicateMeshGeometry(self) -> Mesh: ...
    def EnableCustomGrips(self, customGrips: CustomObjectGrips) -> bool: ...
    def EnableVisualAnalysisMode(self, mode: VisualAnalysisMode, enable: bool) -> bool: ...
    def EnsurePrivateCopy(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def ComponentStatus(self) -> ComponentStatus: ...
    @property
    def ComponentType(self) -> ModelComponentType: ...
    @property
    def DeletedName(self) -> str: ...
    @property
    def Disposed(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Geometry(self) -> GeometryBase: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def GroupCount(self) -> int: ...
    @property
    def HasDynamicTransform(self) -> bool: ...
    @property
    def HasId(self) -> bool: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasSubobjectMaterials(self) -> bool: ...
    @property
    def HasUserData(self) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdIsLocked(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def IndexIsLocked(self) -> bool: ...
    @property
    def InstanceDefinitionModelSerialNumber(self) -> UInt32: ...
    @property
    def IsComponentStatusLocked(self) -> bool: ...
    @property
    def IsCustomObject(self) -> bool: ...
    @property
    def IsDeletable(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDocumentControlled(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry(self) -> bool: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsNormal(self) -> bool: ...
    @property
    def IsPictureFrame(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsSolid(self) -> bool: ...
    @property
    def IsSystemComponent(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def MeshGeometry(self) -> Mesh: ...
    @property
    def ModelSerialNumber(self) -> UInt32: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIsLocked(self) -> bool: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    def ReferenceModelSerialNumber(self) -> UInt32: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RuntimeSerialNumber(self) -> UInt32: ...
    @property
    def SubobjectMaterialComponents(self) -> Iterable[ComponentIndex]: ...
    @property
    def UserData(self) -> UserDataList: ...
    @property
    def UserDictionary(self) -> ArchivableDictionary: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber(self) -> UInt32: ...
    def GetActiveVisualAnalysisModes(self) -> Iterable[VisualAnalysisMode]: ...
    def GetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str) -> IConvertible: ...
    def GetDynamicTransform(self) -> Tuple[bool, Transform]: ...
    def GetGrips(self) -> Iterable[GripObject]: ...
    def GetGroupList(self) -> Iterable[int]: ...
    def GetHashCode(self) -> int: ...
    def GetHighlightedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetMaterial(self, frontMaterial: bool) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> Material: ...
    def GetMeshes(self, meshType: MeshType) -> Iterable[Mesh]: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, frontMaterial: bool) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> RenderMaterial: ...
    @overload
    def GetRenderMeshParameters(self) -> MeshingParameters: ...
    @overload
    def GetRenderMeshParameters(self, returnDocumentParametersIfUnset: bool) -> MeshingParameters: ...
    def GetRenderPrimitiveList(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def GetSelectedSubObjects(self) -> Iterable[ComponentIndex]: ...
    def GetSubObjects(self) -> Iterable[RhinoObject]: ...
    def GetTextureChannels(self) -> Iterable[int]: ...
    @overload
    def GetTextureMapping(self, channel: int) -> TextureMapping: ...
    @overload
    def GetTextureMapping(self, channel: int) -> Tuple[TextureMapping, Transform]: ...
    def GetType(self) -> Type: ...
    def HasHistoryRecord(self) -> bool: ...
    def HasTextureMapping(self) -> bool: ...
    def Highlight(self, enable: bool) -> bool: ...
    def HighlightSubObject(self, componentIndex: ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def InVisualAnalysisMode(self) -> bool: ...
    @overload
    def InVisualAnalysisMode(self, mode: VisualAnalysisMode) -> bool: ...
    def IsActiveInViewport(self, viewport: RhinoViewport) -> bool: ...
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    def IsMeshable(self, meshType: MeshType) -> bool: ...
    @overload
    def IsSelectable(self) -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    def IsSubObjectHighlighted(self, componentIndex: ComponentIndex) -> bool: ...
    def IsSubObjectSelectable(self, componentIndex: ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    def IsSubObjectSelected(self, componentIndex: ComponentIndex) -> bool: ...
    def IsValidWithLog(self) -> Tuple[bool, str]: ...
    def LockId(self) -> None: ...
    def LockIndex(self) -> None: ...
    def LockName(self) -> None: ...
    def MemoryEstimate(self) -> UInt32: ...
    def MeshCount(self, meshType: MeshType, parameters: MeshingParameters) -> int: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: ObjectAttributes) -> None: ...
    @ComponentStatus.setter
    def ComponentStatus(self, value: ComponentStatus) -> None: ...
    @GripsOn.setter
    def GripsOn(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Guid) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    def SetCopyHistoryOnReplace(self, bCopy: bool) -> None: ...
    def SetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str, value: Object) -> None: ...
    def SetRenderMeshParameters(self, mp: MeshingParameters) -> bool: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping) -> int: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping, objectTransform: Transform) -> int: ...
    def ShortDescription(self, plural: bool) -> str: ...
    def SupportsRenderPrimitiveList(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> bool: ...
    def ToJSON(self, options: SerializationOptions) -> str: ...
    def ToString(self) -> str: ...
    def TryGetGumballFrame(self) -> Tuple[bool, GumballFrame]: ...
    def TryGetRenderPrimitiveBoundingBox(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> Tuple[bool, BoundingBox]: ...
    def UnhighlightAllSubObjects(self) -> int: ...
    def UnselectAllSubObjects(self) -> int: ...


class CustomObjectGrips:
    def Dispose(self) -> None: ...
    @staticmethod
    def Dragging() -> bool: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def GripCount(self) -> int: ...
    @property
    def GripsMoved(self) -> bool: ...
    @property
    def NewLocation(self) -> bool: ...
    @property
    def OwnerObject(self) -> RhinoObject: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def Grip(self, index: int) -> CustomGripObject: ...
    @staticmethod
    def RegisterGripsEnabler(enabler: TurnOnGripsEventHandler, customGripsType: Type) -> None: ...
    @NewLocation.setter
    def NewLocation(self, value: bool) -> None: ...
    def ToString(self) -> str: ...


from ...Geometry import ComponentIndex
from ...Display import VisualAnalysisMode
from ...FileIO import TextLog
from ...Geometry import MeshType
from ...Geometry import MeshingParameters
from ...UI.Gumball import GumballFrame
from ...Display import DisplayPipelineAttributes
from ...Geometry import BoundingBox
from ...Geometry import Transform
from ...Render import TextureMapping
from ...Render import RenderMaterial
from ...Display import RhinoViewport
from ...Geometry import ComponentStatus
from ...FileIO import SerializationOptions
class CustomPointObject(PointObject):
    def ClearId(self) -> None: ...
    def ClearIndex(self) -> None: ...
    def ClearName(self) -> None: ...
    def CommitChanges(self) -> bool: ...
    def CopyHistoryOnReplace(self) -> bool: ...
    def CreateMeshes(self, meshType: MeshType, parameters: MeshingParameters, ignoreCustomParameters: bool) -> int: ...
    def DataCRC(self, currentRemainder: UInt32) -> UInt32: ...
    def Description(self, textLog: TextLog) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    @overload
    def Dispose(self) -> None: ...
    def DuplicateGeometry(self) -> GeometryBase: ...
    def DuplicatePointGeometry(self) -> Point: ...
    def EnableCustomGrips(self, customGrips: CustomObjectGrips) -> bool: ...
    def EnableVisualAnalysisMode(self, mode: VisualAnalysisMode, enable: bool) -> bool: ...
    def EnsurePrivateCopy(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Attributes(self) -> ObjectAttributes: ...
    @property
    def ComponentStatus(self) -> ComponentStatus: ...
    @property
    def ComponentType(self) -> ModelComponentType: ...
    @property
    def DeletedName(self) -> str: ...
    @property
    def Disposed(self) -> bool: ...
    @property
    def Document(self) -> RhinoDoc: ...
    @property
    def Geometry(self) -> GeometryBase: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def GroupCount(self) -> int: ...
    @property
    def HasDynamicTransform(self) -> bool: ...
    @property
    def HasId(self) -> bool: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasSubobjectMaterials(self) -> bool: ...
    @property
    def HasUserData(self) -> bool: ...
    @property
    def Id(self) -> Guid: ...
    @property
    def IdIsLocked(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def IndexIsLocked(self) -> bool: ...
    @property
    def InstanceDefinitionModelSerialNumber(self) -> UInt32: ...
    @property
    def IsComponentStatusLocked(self) -> bool: ...
    @property
    def IsDeletable(self) -> bool: ...
    @property
    def IsDeleted(self) -> bool: ...
    @property
    def IsDocumentControlled(self) -> bool: ...
    @property
    def IsHidden(self) -> bool: ...
    @property
    def IsInstanceDefinitionGeometry(self) -> bool: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsNormal(self) -> bool: ...
    @property
    def IsPictureFrame(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsSolid(self) -> bool: ...
    @property
    def IsSystemComponent(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def ModelSerialNumber(self) -> UInt32: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIsLocked(self) -> bool: ...
    @property
    def ObjectType(self) -> ObjectType: ...
    @property
    def PointGeometry(self) -> Point: ...
    @property
    def ReferenceModelSerialNumber(self) -> UInt32: ...
    @property
    def RenderMaterial(self) -> RenderMaterial: ...
    @property
    def RuntimeSerialNumber(self) -> UInt32: ...
    @property
    def SubobjectMaterialComponents(self) -> Iterable[ComponentIndex]: ...
    @property
    def UserData(self) -> UserDataList: ...
    @property
    def UserDictionary(self) -> ArchivableDictionary: ...
    @property
    def Visible(self) -> bool: ...
    @property
    def WorksessionReferenceSerialNumber(self) -> UInt32: ...
    def GetActiveVisualAnalysisModes(self) -> Iterable[VisualAnalysisMode]: ...
    def GetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str) -> IConvertible: ...
    def GetDynamicTransform(self) -> Tuple[bool, Transform]: ...
    def GetGrips(self) -> Iterable[GripObject]: ...
    def GetGroupList(self) -> Iterable[int]: ...
    def GetHashCode(self) -> int: ...
    def GetHighlightedSubObjects(self) -> Iterable[ComponentIndex]: ...
    @overload
    def GetMaterial(self, frontMaterial: bool) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> Material: ...
    @overload
    def GetMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> Material: ...
    def GetMeshes(self, meshType: MeshType) -> Iterable[Mesh]: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, frontMaterial: bool) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid) -> RenderMaterial: ...
    @overload
    def GetRenderMaterial(self, componentIndex: ComponentIndex, plugInId: Guid, attributes: ObjectAttributes) -> RenderMaterial: ...
    @overload
    def GetRenderMeshParameters(self) -> MeshingParameters: ...
    @overload
    def GetRenderMeshParameters(self, returnDocumentParametersIfUnset: bool) -> MeshingParameters: ...
    def GetRenderPrimitiveList(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> RenderPrimitiveList: ...
    def GetSelectedSubObjects(self) -> Iterable[ComponentIndex]: ...
    def GetSubObjects(self) -> Iterable[RhinoObject]: ...
    def GetTextureChannels(self) -> Iterable[int]: ...
    @overload
    def GetTextureMapping(self, channel: int) -> TextureMapping: ...
    @overload
    def GetTextureMapping(self, channel: int) -> Tuple[TextureMapping, Transform]: ...
    def GetType(self) -> Type: ...
    def HasHistoryRecord(self) -> bool: ...
    def HasTextureMapping(self) -> bool: ...
    def Highlight(self, enable: bool) -> bool: ...
    def HighlightSubObject(self, componentIndex: ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def InVisualAnalysisMode(self) -> bool: ...
    @overload
    def InVisualAnalysisMode(self, mode: VisualAnalysisMode) -> bool: ...
    def IsActiveInViewport(self, viewport: RhinoViewport) -> bool: ...
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    def IsMeshable(self, meshType: MeshType) -> bool: ...
    @overload
    def IsSelectable(self) -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    def IsSubObjectHighlighted(self, componentIndex: ComponentIndex) -> bool: ...
    def IsSubObjectSelectable(self, componentIndex: ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    def IsSubObjectSelected(self, componentIndex: ComponentIndex) -> bool: ...
    def IsValidWithLog(self) -> Tuple[bool, str]: ...
    def LockId(self) -> None: ...
    def LockIndex(self) -> None: ...
    def LockName(self) -> None: ...
    def MemoryEstimate(self) -> UInt32: ...
    def MeshCount(self, meshType: MeshType, parameters: MeshingParameters) -> int: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: ObjectAttributes) -> None: ...
    @ComponentStatus.setter
    def ComponentStatus(self, value: ComponentStatus) -> None: ...
    @GripsOn.setter
    def GripsOn(self, value: bool) -> None: ...
    @Id.setter
    def Id(self, value: Guid) -> None: ...
    @Index.setter
    def Index(self, value: int) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @RenderMaterial.setter
    def RenderMaterial(self, value: RenderMaterial) -> None: ...
    def SetCopyHistoryOnReplace(self, bCopy: bool) -> None: ...
    def SetCustomRenderMeshParameter(self, providerId: Guid, parameterName: str, value: Object) -> None: ...
    def SetRenderMeshParameters(self, mp: MeshingParameters) -> bool: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping) -> int: ...
    @overload
    def SetTextureMapping(self, channel: int, tm: TextureMapping, objectTransform: Transform) -> int: ...
    def ShortDescription(self, plural: bool) -> str: ...
    def SupportsRenderPrimitiveList(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> bool: ...
    def ToJSON(self, options: SerializationOptions) -> str: ...
    def ToString(self) -> str: ...
    def TryGetGumballFrame(self) -> Tuple[bool, GumballFrame]: ...
    def TryGetRenderPrimitiveBoundingBox(self, viewport: ViewportInfo, attrs: DisplayPipelineAttributes) -> Tuple[bool, BoundingBox]: ...
    def UnhighlightAllSubObjects(self) -> int: ...
    def UnselectAllSubObjects(self) -> int: ...


from ...Geometry import Line
from ...Geometry import Point3d
from ...Display import DrawEventArgs
class GripsDrawEventArgs(DrawEventArgs):
    @overload
    def DrawControlPolygonLine(self, line: Line, startStatus: GripStatus, endStatus: GripStatus) -> None: ...
    @overload
    def DrawControlPolygonLine(self, line: Line, startStatus: int, endStatus: int) -> None: ...
    @overload
    def DrawControlPolygonLine(self, start: Point3d, end: Point3d, startStatus: int, endStatus: int) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def ControlPolygonStyle(self) -> int: ...
    @property
    def Display(self) -> DisplayPipeline: ...
    @property
    def DrawDynamicStuff(self) -> bool: ...
    @property
    def DrawStaticStuff(self) -> bool: ...
    @property
    def GripColor(self) -> Color: ...
    @property
    def GripStatusCount(self) -> int: ...
    @property
    def LockedGripColor(self) -> Color: ...
    @property
    def RhinoDoc(self) -> RhinoDoc: ...
    @property
    def SelectedGripColor(self) -> Color: ...
    @property
    def Viewport(self) -> RhinoViewport: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def GripStatus(self, index: int) -> GripStatus: ...
    def RestoreViewportSettings(self) -> None: ...
    @ControlPolygonStyle.setter
    def ControlPolygonStyle(self, value: int) -> None: ...
    @GripColor.setter
    def GripColor(self, value: Color) -> None: ...
    @LockedGripColor.setter
    def LockedGripColor(self, value: Color) -> None: ...
    @SelectedGripColor.setter
    def SelectedGripColor(self, value: Color) -> None: ...
    def ToString(self) -> str: ...


class GripStatus:
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Culled(self) -> bool: ...
    @property
    def Visible(self) -> bool: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    @Culled.setter
    def Culled(self, value: bool) -> None: ...
    def ToString(self) -> str: ...


class TurnOnGripsEventHandler:
    def __init__(self, object: Object, method: IntPtr): ...
    def BeginInvoke(self, rhObj: RhinoObject, callback: AsyncCallback, object: Object) -> IAsyncResult: ...
    def Clone(self) -> Object: ...
    def DynamicInvoke(self, args: Iterable[Object]) -> Object: ...
    def EndInvoke(self, result: IAsyncResult) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Method(self) -> MethodInfo: ...
    @property
    def Target(self) -> Object: ...
    def GetHashCode(self) -> int: ...
    def GetInvocationList(self) -> Iterable[Delegate]: ...
    def GetObjectData(self, info: SerializationInfo, context: StreamingContext) -> None: ...
    def GetType(self) -> Type: ...
    def Invoke(self, rhObj: RhinoObject) -> None: ...
    def ToString(self) -> str: ...


class UnknownUserData(UserData):
    def __init__(self, pointerNativeUserData: IntPtr): ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Description(self) -> str: ...
    @property
    def ShouldWrite(self) -> bool: ...
    @property
    def Transform(self) -> Transform: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...


from ...Runtime import CommonObject
class UserData:
    @staticmethod
    def Copy(source: CommonObject, destination: CommonObject) -> None: ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Description(self) -> str: ...
    @property
    def ShouldWrite(self) -> bool: ...
    @property
    def Transform(self) -> Transform: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    @staticmethod
    def MoveUserDataFrom(objectWithUserData: CommonObject) -> Guid: ...
    @staticmethod
    def MoveUserDataTo(objectToGetUserData: CommonObject, id: Guid, append: bool) -> None: ...
    def ToString(self) -> str: ...


class UserDataList:
    def __iter__(self) -> Iterator[UserData]: ...
    def Add(self, userdata: UserData) -> bool: ...
    def Contains(self, userdataId: Guid) -> bool: ...
    def Equals(self, obj: Object) -> bool: ...
    def Find(self, userdataType: Type) -> UserData: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self, index: int) -> UserData: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def Purge(self) -> None: ...
    def Remove(self, userdata: UserData) -> bool: ...
    def ToString(self) -> str: ...


class UserDataListEnumerator:
    def __init__(self, udl: UserDataList): ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Current(self) -> UserData: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...
    def ToString(self) -> str: ...


class UserDictionary(UserData):
    def __init__(self): ...
    def Dispose(self) -> None: ...
    def Equals(self, obj: Object) -> bool: ...
    @property
    def Description(self) -> str: ...
    @property
    def Dictionary(self) -> ArchivableDictionary: ...
    @property
    def ShouldWrite(self) -> bool: ...
    @property
    def Transform(self) -> Transform: ...
    def GetHashCode(self) -> int: ...
    def GetType(self) -> Type: ...
    def ToString(self) -> str: ...
